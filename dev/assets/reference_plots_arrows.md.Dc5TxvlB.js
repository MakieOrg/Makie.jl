import{_ as l,C as o,c as r,o as p,j as i,aA as n,a,G as t,w as h}from"./chunks/framework.CbjF_5nz.js";const d="/dev/assets/caa837a.DMfi_XKz.png",k="/dev/assets/3f32990.361l3IFE.png",c="/dev/assets/2679f26.CYvCohwy.png",g="/dev/assets/f88c759.BUuCyoIJ.png",E="/dev/assets/arrow_components.DgXiFCT5.png",y="/dev/assets/5e7aeb2.CxfoG-1r.png",f="/dev/assets/1e06aaa.BFLrjXVB.png",B=JSON.parse('{"title":"arrows","description":"","frontmatter":{},"headers":[],"relativePath":"reference/plots/arrows.md","filePath":"reference/plots/arrows.md","lastUpdated":null}'),u={name:"reference/plots/arrows.md"},m={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""};function b(w,s,C,D,x,A){const e=o("Badge");return p(),r("div",null,[s[8]||(s[8]=i("h1",{id:"arrows",tabindex:"-1"},[a("arrows "),i("a",{class:"header-anchor",href:"#arrows","aria-label":'Permalink to "arrows {#arrows}"'},"​")],-1)),s[9]||(s[9]=i("p",null,[a("Arrows are split into two plot types, "),i("code",null,"arrows2d"),a(" and "),i("code",null,"arrows3d"),a(". They differ in the arrow markers they create - "),i("code",null,"arrows2d"),a(" creates 2D arrows and "),i("code",null,"arrows3d"),a(" creates 3D arrows. Both can be used with 2D and 3D coordinates.")],-1)),i("details",m,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Makie.arrows2d-reference-plots-arrows",href:"#Makie.arrows2d-reference-plots-arrows"},[i("span",{class:"jlbinding"},"Makie.arrows2d")],-1)),s[1]||(s[1]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points, directions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], u, v, [w])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots arrows as 2D shapes.</p><p>Their positions are given by a vector of <code>points</code> or component vectors <code>x</code>, <code>y</code> and optionally <code>z</code>. A single point or value of <code>x</code>, <code>y</code> and <code>z</code> is also allowed. Which part of the arrow is aligned with the position depends on the <code>align</code> attribute.</p><p>Their directions are given by a vector of <code>directions</code> or component vectors <code>u</code>, <code>v</code> and optionally <code>w</code> just like positions. Additionally they can also be calculated by a function <code>f</code> which should return a <code>Point</code> or <code>Vec</code> for each arrow <code>position::Point</code>. Note that direction can also be interpreted as end points with <code>argmode = :endpoint</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>arrows2d</code> function is <code>Arrows2D</code>.</p>`,6)),t(e,{type:"info",class:"source-link",text:"source"},{default:h(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/04475640ef4ea53dd1d0d36183bcca163fbb50e4/Makie/src/recipes.jl#L540-L706",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Makie.arrows3d-reference-plots-arrows",href:"#Makie.arrows3d-reference-plots-arrows"},[i("span",{class:"jlbinding"},"Makie.arrows3d")],-1)),s[5]||(s[5]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points, directions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], u, v, [w])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots arrows as 3D shapes.</p><p>Their positions are given by a vector of <code>points</code> or component vectors <code>x</code>, <code>y</code> and optionally <code>z</code>. A single point or value of <code>x</code>, <code>y</code> and <code>z</code> is also allowed. Which part of the arrow is aligned with the position depends on the <code>align</code> attribute.</p><p>Their directions are given by a vector of <code>directions</code> or component vectors <code>u</code>, <code>v</code> and optionally <code>w</code> just like positions. Additionally they can also be calculated by a function <code>f</code> which should return a <code>Point</code> or <code>Vec</code> for each arrow <code>position::Point</code>. Note that direction can also be interpreted as end points with <code>argmode = :endpoint</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>arrows3d</code> function is <code>Arrows3D</code>.</p>`,6)),t(e,{type:"info",class:"source-link",text:"source"},{default:h(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/04475640ef4ea53dd1d0d36183bcca163fbb50e4/Makie/src/recipes.jl#L540-L721",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[10]||(s[10]=n(`<h2 id="Examples" tabindex="-1">Examples <a class="header-anchor" href="#Examples" aria-label="Permalink to &quot;Examples {#Examples}&quot;">​</a></h2><a id="example-caa837a"></a><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], backgroundcolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xs, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ys]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xs, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ys]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys, us, vs, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strength)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><img src="`+d+`" width="800px" height="800px"><a id="example-3f32990"></a><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), ps)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ps, ns,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shaftcolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :gray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tipcolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Axis3,)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><img src="`+k+`" width="600px" height="450px"><a id="example-2679f26"></a><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLMakie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearAlgebra</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), ps)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lengths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> norm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(ns)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ps, ns, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lengths, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Axis3,)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><img src="`+c+`" width="600px" height="450px"><p><code>arrows</code> can also take a function <code>f(x::Point{N})::Point{N}</code> which returns the arrow vector when given the arrow&#39;s origin. <a id="example-f88c759"></a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], backgroundcolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># explicit method</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xs, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ys]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xs, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ys]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># function method</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arrow_fun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, xs, ys, arrow_fun, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strength)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><img src="`+g+'" width="800px" height="800px"><h3 id="Arrow-Components-and-Details" tabindex="-1">Arrow Components &amp; Details <a class="header-anchor" href="#Arrow-Components-and-Details" aria-label="Permalink to &quot;Arrow Components &amp;amp; Details {#Arrow-Components-and-Details}&quot;">​</a></h3><p><img src="'+E+`" alt=""></p><h4 id="Arrow-Length" tabindex="-1">Arrow Length <a class="header-anchor" href="#Arrow-Length" aria-label="Permalink to &quot;Arrow Length {#Arrow-Length}&quot;">​</a></h4><p>The target size of each arrow is determined by its direction vector (second plot argument), <code>normalize</code> and <code>lengthscale</code>. From tail to tip, the length is given as <code>lengthscale * norm(direction)</code>. If <code>normalize = true</code> the direction is normalized first, i.e. the length becomes just <code>lengthscale</code>.</p><p>There is also the option to treat the second plot argument as the arrows endpoint with <code>argmode = :endpoint</code>. In this case the directions are determined as <code>direction = endpoint - startpoint</code> and then follow the same principles.</p><h4 id="Scaling" tabindex="-1">Scaling <a class="header-anchor" href="#Scaling" aria-label="Permalink to &quot;Scaling {#Scaling}&quot;">​</a></h4><p>Arrow markers are separated into 3 components, a tail, a shaft and a tip. Each component comes with a length and width/radius (2D/3D) which determines its size. In 2D the sizes are given in pixel units by default (dependent on <code>markerspace</code>). In 3D they are given in relative units if <code>markerscale = automatic</code> (default) or data space units scaled by <code>markerscale</code> otherwise. To fit arrows to the length determined by <code>directions</code>, <code>lengthscale</code> and <code>normalize</code>, the <code>shaftlength</code> varies between <code>minshaftlength</code> and <code>maxshaftlength</code> if it is not explicitly set. Outside of this range or if it is explicitly set, all arrow lengths and widths/radii are scaled by a common factor instead.</p><h4 id="Shapes" tabindex="-1">Shapes <a class="header-anchor" href="#Shapes" aria-label="Permalink to &quot;Shapes {#Shapes}&quot;">​</a></h4><p>The base shape of each component is given by the <code>tail</code>, <code>shaft</code> and <code>tip</code> attributes. For arrows2d these can be anything compatible with <code>poly</code>, e.g. a 2D mesh, Polygon or Vector of points. Each component should be defined in a 0..1 x -0.5..0.5 range, where +x is the direction of the arrow. The shape can also be constructed by a callback function <code>f(length, width, metrics)</code> returning something poly-compatible. It is given the final length and width of the component as well as the all the other final lengths and widths through metrics. For arrows3d they should be a mesh or GeometryPrimitive defined in a -0.5..0.5 x -0.5..0.5 x 0..1 range. Here +z is the direction of the arrow.</p><h4 id="Alignment" tabindex="-1">Alignment <a class="header-anchor" href="#Alignment" aria-label="Permalink to &quot;Alignment {#Alignment}&quot;">​</a></h4><p>With <code>argmode = :direction</code> (default) arrows are aligned relative to the given positions (first argument). If <code>align = :tail</code> (or 0) the arrow will start at the respective position, <code>align = :center</code> (0.5) will centered and with <code>align = :tip</code> (1.0) it will end at the position. <code>align</code> can also take values outside the 0..1 range to create a gap between the position and the arrow marker.</p><p>If <code>argmode = :endpoint</code> alignment works differently and only takes effect if <code>normalize = true</code> or <code>lengthscale != 1</code>. Here <code>align</code> determines a point <code>p = startpoint + align * (endpoint - startpoint)</code> which aligns with same fraction of the arrow marker. So for example <code>align = 0.5</code> (:center) aligns the midpoint between the plot arguments with the midpoint of each arrow marker. If the length of arrows is scaled down, this will create a matching gap on either side of the arrow. <a id="example-5e7aeb2"></a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], aspect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DataAspect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ps, marker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Circle, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, strokewidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Double headed arrow between two points, filling half the distance with</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># :center alignment</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ps, [ps[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ps[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]], color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, argmode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tail </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Point2f[(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], taillength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># arrow pointing away from ps with a 0.2 gap between the tail and ps</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ps, ps, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eachindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ps), align </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :rainbow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># arrow pointing to ps with a 0.2 gap between the tip and ps</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ps, ps, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eachindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ps), align </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :rainbow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lengthscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><img src="`+y+`" width="500px" height="500px"><a id="example-1e06aaa"></a><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Always scale, never elongate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, ps, vs, shaftlength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x and y coordinates are on different scales, so radius (x) and length (y) are too</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, ps, vs, shaftlength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tipradius </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiplength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, shaftradius </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Never scale, always elongate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, ps, vs, minshaftlength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, ps, vs, minshaftlength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    markerscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiplength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><img src="`+f+'" width="600px" height="450px"><h2 id="Attributes" tabindex="-1">Attributes <a class="header-anchor" href="#Attributes" aria-label="Permalink to &quot;Attributes {#Attributes}&quot;">​</a></h2><h3 id="Arrows2D" tabindex="-1">Arrows2D <a class="header-anchor" href="#Arrows2D" aria-label="Permalink to &quot;Arrows2D {#Arrows2D}&quot;">​</a></h3><h3 id="align" tabindex="-1">align <a class="header-anchor" href="#align" aria-label="Permalink to &quot;align {#align}&quot;">​</a></h3><p>Defaults to <code>:tail</code></p><p>Sets the alignment of the arrow, i.e. which part of the arrow is placed at the given positions.</p><ul><li><p><code>align = :tail</code> or <code>align = 0</code> places the arrow tail at the given position. This makes the arrow point away from that position.</p></li><li><p><code>align = :center</code> or <code>align = 0.5</code> places the arrow center (based on its total length) at the given position</p></li><li><p><code>align = :tip</code> or <code>align = 1.0</code> places the tip of the arrow at the given position. This makes the arrow point to that position.</p></li></ul><p>Values outside of (0, 1) can also be used to create gaps between the arrow and its anchor position.</p><p>With <code>argmode = :endpoint</code> alignment is not relative to the first argument passed to arrows. Instead the given fraction of the arrow marker is aligned to the fraction between the start and end point of the arrow. So <code>align = :center</code> will align the center of the arrow marker with the center between the passed positions. Because of this <code>align</code> only has an effect here if <code>normalize = true</code> or if <code>lengthscale != 1</code>.</p><h3 id="alpha" tabindex="-1">alpha <a class="header-anchor" href="#alpha" aria-label="Permalink to &quot;alpha {#alpha}&quot;">​</a></h3><p>Defaults to <code>1.0</code></p><p>The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><h3 id="argmode" tabindex="-1">argmode <a class="header-anchor" href="#argmode" aria-label="Permalink to &quot;argmode {#argmode}&quot;">​</a></h3><p>Defaults to <code>:direction</code></p><p>Controls whether the second argument is interpreted as a :direction or as an :endpoint.</p><h3 id="clip_planes" tabindex="-1">clip_planes <a class="header-anchor" href="#clip_planes" aria-label="Permalink to &quot;clip_planes {#clip_planes}&quot;">​</a></h3><p>Defaults to <code>@inherit clip_planes automatic</code></p><p>Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><h3 id="color" tabindex="-1">color <a class="header-anchor" href="#color" aria-label="Permalink to &quot;color {#color}&quot;">​</a></h3><p>Defaults to <code>:black</code></p><p>Sets the color of the arrow. Can be overridden separately using <code>tailcolor</code>, <code>shaftcolor</code> and <code>tipcolor</code>.</p><h3 id="colormap" tabindex="-1">colormap <a class="header-anchor" href="#colormap" aria-label="Permalink to &quot;colormap {#colormap}&quot;">​</a></h3><p>Defaults to <code>@inherit colormap :viridis</code></p><p>Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><h3 id="colorrange" tabindex="-1">colorrange <a class="header-anchor" href="#colorrange" aria-label="Permalink to &quot;colorrange {#colorrange}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The values representing the start and end points of <code>colormap</code>.</p><h3 id="colorscale" tabindex="-1">colorscale <a class="header-anchor" href="#colorscale" aria-label="Permalink to &quot;colorscale {#colorscale}&quot;">​</a></h3><p>Defaults to <code>identity</code></p><p>The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><h3 id="depth_shift" tabindex="-1">depth_shift <a class="header-anchor" href="#depth_shift" aria-label="Permalink to &quot;depth_shift {#depth_shift}&quot;">​</a></h3><p>Defaults to <code>0.0</code></p><p>Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><h3 id="fxaa" tabindex="-1">fxaa <a class="header-anchor" href="#fxaa" aria-label="Permalink to &quot;fxaa {#fxaa}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Adjusts whether the plot is rendered with fxaa (fast approximate anti-aliasing, GLMakie only). Note that some plots implement a better native anti-aliasing solution (scatter, text, lines). For them <code>fxaa = true</code> generally lowers quality. Plots that show smoothly interpolated data (e.g. image, surface) may also degrade in quality as <code>fxaa = true</code> can cause blurring.</p><h3 id="highclip" tabindex="-1">highclip <a class="header-anchor" href="#highclip" aria-label="Permalink to &quot;highclip {#highclip}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The color for any value above the colorrange.</p><h3 id="inspectable" tabindex="-1">inspectable <a class="header-anchor" href="#inspectable" aria-label="Permalink to &quot;inspectable {#inspectable}&quot;">​</a></h3><p>Defaults to <code>@inherit inspectable</code></p><p>Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><h3 id="inspector_clear" tabindex="-1">inspector_clear <a class="header-anchor" href="#inspector_clear" aria-label="Permalink to &quot;inspector_clear {#inspector_clear}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><h3 id="inspector_hover" tabindex="-1">inspector_hover <a class="header-anchor" href="#inspector_hover" aria-label="Permalink to &quot;inspector_hover {#inspector_hover}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><h3 id="inspector_label" tabindex="-1">inspector_label <a class="header-anchor" href="#inspector_label" aria-label="Permalink to &quot;inspector_label {#inspector_label}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><h3 id="lengthscale" tabindex="-1">lengthscale <a class="header-anchor" href="#lengthscale" aria-label="Permalink to &quot;lengthscale {#lengthscale}&quot;">​</a></h3><p>Defaults to <code>1.0</code></p><p>Scales the length of the arrow (as calculated from directions) by some factor.</p><h3 id="lowclip" tabindex="-1">lowclip <a class="header-anchor" href="#lowclip" aria-label="Permalink to &quot;lowclip {#lowclip}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The color for any value below the colorrange.</p><h3 id="markerspace" tabindex="-1">markerspace <a class="header-anchor" href="#markerspace" aria-label="Permalink to &quot;markerspace {#markerspace}&quot;">​</a></h3><p>Defaults to <code>:pixel</code></p><p>Sets the space of arrow metrics like tipwidth, tiplength, etc.</p><h3 id="maxshaftlength" tabindex="-1">maxshaftlength <a class="header-anchor" href="#maxshaftlength" aria-label="Permalink to &quot;maxshaftlength {#maxshaftlength}&quot;">​</a></h3><p>Defaults to <code>Inf</code></p><p>Sets the maximum shaft length, see <code>shaftlength</code>.</p><h3 id="minshaftlength" tabindex="-1">minshaftlength <a class="header-anchor" href="#minshaftlength" aria-label="Permalink to &quot;minshaftlength {#minshaftlength}&quot;">​</a></h3><p>Defaults to <code>10</code></p><p>Sets the minimum shaft length, see <code>shaftlength</code>.</p><h3 id="model" tabindex="-1">model <a class="header-anchor" href="#model" aria-label="Permalink to &quot;model {#model}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><h3 id="nan_color" tabindex="-1">nan_color <a class="header-anchor" href="#nan_color" aria-label="Permalink to &quot;nan_color {#nan_color}&quot;">​</a></h3><p>Defaults to <code>:transparent</code></p><p>The color for NaN values.</p><h3 id="normalize" tabindex="-1">normalize <a class="header-anchor" href="#normalize" aria-label="Permalink to &quot;normalize {#normalize}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>If set to true, normalizes <code>directions</code>.</p><h3 id="overdraw" tabindex="-1">overdraw <a class="header-anchor" href="#overdraw" aria-label="Permalink to &quot;overdraw {#overdraw}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><h3 id="shaft" tabindex="-1">shaft <a class="header-anchor" href="#shaft" aria-label="Permalink to &quot;shaft {#shaft}&quot;">​</a></h3><p>Defaults to <code>Rect2f(0, -0.5, 1, 1)</code></p><p>Sets the shape of the arrow shaft in units relative to the shaftwidth and shaftlength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><h3 id="shaftcolor" tabindex="-1">shaftcolor <a class="header-anchor" href="#shaftcolor" aria-label="Permalink to &quot;shaftcolor {#shaftcolor}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow shaft. Defaults to <code>color</code></p><h3 id="shaftlength" tabindex="-1">shaftlength <a class="header-anchor" href="#shaftlength" aria-label="Permalink to &quot;shaftlength {#shaftlength}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the length of the arrow shaft. When set to <code>automatic</code> the length of the shaft will be derived from the length of the arrow, the <code>taillength</code> and the <code>tiplength</code>. If the results falls outside <code>minshaftlength</code> to <code>maxshaftlength</code> it is clamped and all lengths and widths are scaled to fit. If the <code>shaftlength</code> is set to a value, the lengths and widths of the arrow are always scaled.</p><h3 id="shaftwidth" tabindex="-1">shaftwidth <a class="header-anchor" href="#shaftwidth" aria-label="Permalink to &quot;shaftwidth {#shaftwidth}&quot;">​</a></h3><p>Defaults to <code>3</code></p><p>Sets the width of the arrow shaft. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="space" tabindex="-1">space <a class="header-anchor" href="#space" aria-label="Permalink to &quot;space {#space}&quot;">​</a></h3><p>Defaults to <code>:data</code></p><p>Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><h3 id="ssao" tabindex="-1">ssao <a class="header-anchor" href="#ssao" aria-label="Permalink to &quot;ssao {#ssao}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><h3 id="strokemask" tabindex="-1">strokemask <a class="header-anchor" href="#strokemask" aria-label="Permalink to &quot;strokemask {#strokemask}&quot;">​</a></h3><p>Defaults to <code>0.75</code></p><p>Arrows2D relies on mesh rendering to draw arrows, which doesn&#39;t anti-alias well when the mesh gets thin. To mask this issue an outline is drawn over the mesh with lines. The width of that outline is given by <code>strokemask</code>. Setting this to <code>0</code> may improve transparent arrows.</p><h3 id="tail" tabindex="-1">tail <a class="header-anchor" href="#tail" aria-label="Permalink to &quot;tail {#tail}&quot;">​</a></h3><p>Defaults to <code>arrowtail2d</code></p><p>Sets the shape of the arrow tail in units relative to the tailwidth and taillength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><h3 id="tailcolor" tabindex="-1">tailcolor <a class="header-anchor" href="#tailcolor" aria-label="Permalink to &quot;tailcolor {#tailcolor}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow tail. Defaults to <code>color</code></p><h3 id="taillength" tabindex="-1">taillength <a class="header-anchor" href="#taillength" aria-label="Permalink to &quot;taillength {#taillength}&quot;">​</a></h3><p>Defaults to <code>0</code></p><p>Sets the length of the arrow tail. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tail being drawn.</p><h3 id="tailwidth" tabindex="-1">tailwidth <a class="header-anchor" href="#tailwidth" aria-label="Permalink to &quot;tailwidth {#tailwidth}&quot;">​</a></h3><p>Defaults to <code>14</code></p><p>Sets the width of the arrow tail. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="tip" tabindex="-1">tip <a class="header-anchor" href="#tip" aria-label="Permalink to &quot;tip {#tip}&quot;">​</a></h3><p>Defaults to <code>Point2f[(0, -0.5), (1, 0), (0, 0.5)]</code></p><p>Sets the shape of the arrow tip in units relative to the tipwidth and tiplength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><h3 id="tipcolor" tabindex="-1">tipcolor <a class="header-anchor" href="#tipcolor" aria-label="Permalink to &quot;tipcolor {#tipcolor}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow tip. Defaults to <code>color</code></p><h3 id="tiplength" tabindex="-1">tiplength <a class="header-anchor" href="#tiplength" aria-label="Permalink to &quot;tiplength {#tiplength}&quot;">​</a></h3><p>Defaults to <code>8</code></p><p>Sets the length of the arrow tip. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tip being drawn.</p><h3 id="tipwidth" tabindex="-1">tipwidth <a class="header-anchor" href="#tipwidth" aria-label="Permalink to &quot;tipwidth {#tipwidth}&quot;">​</a></h3><p>Defaults to <code>14</code></p><p>Sets the width of the arrow tip. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="transformation" tabindex="-1">transformation <a class="header-anchor" href="#transformation" aria-label="Permalink to &quot;transformation {#transformation}&quot;">​</a></h3><p>Defaults to <code>:automatic</code></p><p>Controls the inheritance or directly sets the transformations of a plot. Transformations include the transform function and model matrix as generated by <code>translate!(...)</code>, <code>scale!(...)</code> and <code>rotate!(...)</code>. They can be set directly by passing a <code>Transformation()</code> object or inherited from the parent plot or scene. Inheritance options include:</p><ul><li><p><code>:automatic</code>: Inherit transformations if the parent and child <code>space</code> is compatible</p></li><li><p><code>:inherit</code>: Inherit transformations</p></li><li><p><code>:inherit_model</code>: Inherit only model transformations</p></li><li><p><code>:inherit_transform_func</code>: Inherit only the transform function</p></li><li><p><code>:nothing</code>: Inherit neither, fully disconnecting the child&#39;s transformations from the parent</p></li></ul><p>Another option is to pass arguments to the <code>transform!()</code> function which then get applied to the plot. For example <code>transformation = (:xz, 1.0)</code> which rotates the <code>xy</code> plane to the <code>xz</code> plane and translates by <code>1.0</code>. For this inheritance defaults to <code>:automatic</code> but can also be set through e.g. <code>(:nothing, (:xz, 1.0))</code>.</p><h3 id="transparency" tabindex="-1">transparency <a class="header-anchor" href="#transparency" aria-label="Permalink to &quot;transparency {#transparency}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><h3 id="visible" tabindex="-1">visible <a class="header-anchor" href="#visible" aria-label="Permalink to &quot;visible {#visible}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Controls whether the plot gets rendered or not.</p><h3 id="Arrows3D" tabindex="-1">Arrows3D <a class="header-anchor" href="#Arrows3D" aria-label="Permalink to &quot;Arrows3D {#Arrows3D}&quot;">​</a></h3><h3 id="align-2" tabindex="-1">align <a class="header-anchor" href="#align-2" aria-label="Permalink to &quot;align {#align-2}&quot;">​</a></h3><p>Defaults to <code>:tail</code></p><p>Sets the alignment of the arrow, i.e. which part of the arrow is placed at the given positions.</p><ul><li><p><code>align = :tail</code> or <code>align = 0</code> places the arrow tail at the given position. This makes the arrow point away from that position.</p></li><li><p><code>align = :center</code> or <code>align = 0.5</code> places the arrow center (based on its total length) at the given position</p></li><li><p><code>align = :tip</code> or <code>align = 1.0</code> places the tip of the arrow at the given position. This makes the arrow point to that position.</p></li></ul><p>Values outside of (0, 1) can also be used to create gaps between the arrow and its anchor position.</p><p>With <code>argmode = :endpoint</code> alignment is not relative to the first argument passed to arrows. Instead the given fraction of the arrow marker is aligned to the fraction between the start and end point of the arrow. So <code>align = :center</code> will align the center of the arrow marker with the center between the passed positions. Because of this <code>align</code> only has an effect here if <code>normalize = true</code> or if <code>lengthscale != 1</code>.</p><h3 id="alpha-2" tabindex="-1">alpha <a class="header-anchor" href="#alpha-2" aria-label="Permalink to &quot;alpha {#alpha-2}&quot;">​</a></h3><p>Defaults to <code>1.0</code></p><p>The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><h3 id="argmode-2" tabindex="-1">argmode <a class="header-anchor" href="#argmode-2" aria-label="Permalink to &quot;argmode {#argmode-2}&quot;">​</a></h3><p>Defaults to <code>:direction</code></p><p>Controls whether the second argument is interpreted as a :direction or as an :endpoint.</p><h3 id="backlight" tabindex="-1">backlight <a class="header-anchor" href="#backlight" aria-label="Permalink to &quot;backlight {#backlight}&quot;">​</a></h3><p>Defaults to <code>0.0</code></p><p>Sets a weight for secondary light calculation with inverted normals.</p><h3 id="clip_planes-2" tabindex="-1">clip_planes <a class="header-anchor" href="#clip_planes-2" aria-label="Permalink to &quot;clip_planes {#clip_planes-2}&quot;">​</a></h3><p>Defaults to <code>@inherit clip_planes automatic</code></p><p>Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><h3 id="color-2" tabindex="-1">color <a class="header-anchor" href="#color-2" aria-label="Permalink to &quot;color {#color-2}&quot;">​</a></h3><p>Defaults to <code>:black</code></p><p>Sets the color of the arrow. Can be overridden separately using <code>tailcolor</code>, <code>shaftcolor</code> and <code>tipcolor</code>.</p><h3 id="colormap-2" tabindex="-1">colormap <a class="header-anchor" href="#colormap-2" aria-label="Permalink to &quot;colormap {#colormap-2}&quot;">​</a></h3><p>Defaults to <code>@inherit colormap :viridis</code></p><p>Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><h3 id="colorrange-2" tabindex="-1">colorrange <a class="header-anchor" href="#colorrange-2" aria-label="Permalink to &quot;colorrange {#colorrange-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The values representing the start and end points of <code>colormap</code>.</p><h3 id="colorscale-2" tabindex="-1">colorscale <a class="header-anchor" href="#colorscale-2" aria-label="Permalink to &quot;colorscale {#colorscale-2}&quot;">​</a></h3><p>Defaults to <code>identity</code></p><p>The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><h3 id="depth_shift-2" tabindex="-1">depth_shift <a class="header-anchor" href="#depth_shift-2" aria-label="Permalink to &quot;depth_shift {#depth_shift-2}&quot;">​</a></h3><p>Defaults to <code>0.0</code></p><p>Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><h3 id="diffuse" tabindex="-1">diffuse <a class="header-anchor" href="#diffuse" aria-label="Permalink to &quot;diffuse {#diffuse}&quot;">​</a></h3><p>Defaults to <code>1.0</code></p><p>Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><h3 id="fxaa-2" tabindex="-1">fxaa <a class="header-anchor" href="#fxaa-2" aria-label="Permalink to &quot;fxaa {#fxaa-2}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Adjusts whether the plot is rendered with fxaa (fast approximate anti-aliasing, GLMakie only). Note that some plots implement a better native anti-aliasing solution (scatter, text, lines). For them <code>fxaa = true</code> generally lowers quality. Plots that show smoothly interpolated data (e.g. image, surface) may also degrade in quality as <code>fxaa = true</code> can cause blurring.</p><h3 id="highclip-2" tabindex="-1">highclip <a class="header-anchor" href="#highclip-2" aria-label="Permalink to &quot;highclip {#highclip-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The color for any value above the colorrange.</p><h3 id="inspectable-2" tabindex="-1">inspectable <a class="header-anchor" href="#inspectable-2" aria-label="Permalink to &quot;inspectable {#inspectable-2}&quot;">​</a></h3><p>Defaults to <code>@inherit inspectable</code></p><p>Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><h3 id="inspector_clear-2" tabindex="-1">inspector_clear <a class="header-anchor" href="#inspector_clear-2" aria-label="Permalink to &quot;inspector_clear {#inspector_clear-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><h3 id="inspector_hover-2" tabindex="-1">inspector_hover <a class="header-anchor" href="#inspector_hover-2" aria-label="Permalink to &quot;inspector_hover {#inspector_hover-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><h3 id="inspector_label-2" tabindex="-1">inspector_label <a class="header-anchor" href="#inspector_label-2" aria-label="Permalink to &quot;inspector_label {#inspector_label-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><h3 id="lengthscale-2" tabindex="-1">lengthscale <a class="header-anchor" href="#lengthscale-2" aria-label="Permalink to &quot;lengthscale {#lengthscale-2}&quot;">​</a></h3><p>Defaults to <code>1.0</code></p><p>Scales the length of the arrow (as calculated from directions) by some factor.</p><h3 id="lowclip-2" tabindex="-1">lowclip <a class="header-anchor" href="#lowclip-2" aria-label="Permalink to &quot;lowclip {#lowclip-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>The color for any value below the colorrange.</p><h3 id="markerscale" tabindex="-1">markerscale <a class="header-anchor" href="#markerscale" aria-label="Permalink to &quot;markerscale {#markerscale}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Scales all arrow components, i.e. all radii and lengths (including min/maxshaftlength). When set to <code>automatic</code> the scaling factor is based on the boundingbox of the given data. This does not affect the mapping between arrows and directions.</p><h3 id="material" tabindex="-1">material <a class="header-anchor" href="#material" aria-label="Permalink to &quot;material {#material}&quot;">​</a></h3><p>Defaults to <code>nothing</code></p><p>RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><h3 id="maxshaftlength-2" tabindex="-1">maxshaftlength <a class="header-anchor" href="#maxshaftlength-2" aria-label="Permalink to &quot;maxshaftlength {#maxshaftlength-2}&quot;">​</a></h3><p>Defaults to <code>Inf</code></p><p>Sets the maximum shaft length, see <code>shaftlength</code></p><h3 id="minshaftlength-2" tabindex="-1">minshaftlength <a class="header-anchor" href="#minshaftlength-2" aria-label="Permalink to &quot;minshaftlength {#minshaftlength-2}&quot;">​</a></h3><p>Defaults to <code>0.6</code></p><p>Sets the minimum shaft length, see <code>shaftlength</code>.</p><h3 id="model-2" tabindex="-1">model <a class="header-anchor" href="#model-2" aria-label="Permalink to &quot;model {#model-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><h3 id="nan_color-2" tabindex="-1">nan_color <a class="header-anchor" href="#nan_color-2" aria-label="Permalink to &quot;nan_color {#nan_color-2}&quot;">​</a></h3><p>Defaults to <code>:transparent</code></p><p>The color for NaN values.</p><h3 id="normalize-2" tabindex="-1">normalize <a class="header-anchor" href="#normalize-2" aria-label="Permalink to &quot;normalize {#normalize-2}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>If set to true, normalizes <code>directions</code>.</p><h3 id="overdraw-2" tabindex="-1">overdraw <a class="header-anchor" href="#overdraw-2" aria-label="Permalink to &quot;overdraw {#overdraw-2}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><h3 id="quality" tabindex="-1">quality <a class="header-anchor" href="#quality" aria-label="Permalink to &quot;quality {#quality}&quot;">​</a></h3><p>Defaults to <code>32</code></p><p>Sets the number of vertices used when generating meshes for the arrow tail, shaft and cone. More vertices will improve the roundness of the mesh but be more costly.</p><h3 id="shading" tabindex="-1">shading <a class="header-anchor" href="#shading" aria-label="Permalink to &quot;shading {#shading}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><h3 id="shaft-2" tabindex="-1">shaft <a class="header-anchor" href="#shaft-2" aria-label="Permalink to &quot;shaft {#shaft-2}&quot;">​</a></h3><p>Defaults to <code>Cylinder(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code></p><p>Sets the mesh of the arrow shaft. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow shaft.</p><h3 id="shaftcolor-2" tabindex="-1">shaftcolor <a class="header-anchor" href="#shaftcolor-2" aria-label="Permalink to &quot;shaftcolor {#shaftcolor-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow shaft. Defaults to <code>color</code></p><h3 id="shaftlength-2" tabindex="-1">shaftlength <a class="header-anchor" href="#shaftlength-2" aria-label="Permalink to &quot;shaftlength {#shaftlength-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the length of the arrow shaft. When set to <code>automatic</code> the length of the shaft will be derived from the length of the arrow, the <code>taillength</code> and the <code>tiplength</code>. If the results falls outside <code>minshaftlength</code> to <code>maxshaftlength</code> it is clamped and all lengths and widths are scaled to fit. If the <code>shaftlength</code> is set to a value, the lengths and widths of the arrow are always scaled.</p><h3 id="shaftradius" tabindex="-1">shaftradius <a class="header-anchor" href="#shaftradius" aria-label="Permalink to &quot;shaftradius {#shaftradius}&quot;">​</a></h3><p>Defaults to <code>0.05</code></p><p>Sets the width of the arrow shaft. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="shininess" tabindex="-1">shininess <a class="header-anchor" href="#shininess" aria-label="Permalink to &quot;shininess {#shininess}&quot;">​</a></h3><p>Defaults to <code>32.0</code></p><p>Sets how sharp the reflection is.</p><h3 id="space-2" tabindex="-1">space <a class="header-anchor" href="#space-2" aria-label="Permalink to &quot;space {#space-2}&quot;">​</a></h3><p>Defaults to <code>:data</code></p><p>Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><h3 id="specular" tabindex="-1">specular <a class="header-anchor" href="#specular" aria-label="Permalink to &quot;specular {#specular}&quot;">​</a></h3><p>Defaults to <code>0.2</code></p><p>Sets how strongly the object reflects light in the red, green and blue channels.</p><h3 id="ssao-2" tabindex="-1">ssao <a class="header-anchor" href="#ssao-2" aria-label="Permalink to &quot;ssao {#ssao-2}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><h3 id="tail-2" tabindex="-1">tail <a class="header-anchor" href="#tail-2" aria-label="Permalink to &quot;tail {#tail-2}&quot;">​</a></h3><p>Defaults to <code>Cylinder(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code></p><p>Sets the mesh of the arrow tail. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow tail.</p><h3 id="tailcolor-2" tabindex="-1">tailcolor <a class="header-anchor" href="#tailcolor-2" aria-label="Permalink to &quot;tailcolor {#tailcolor-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow tail. Defaults to <code>color</code></p><h3 id="taillength-2" tabindex="-1">taillength <a class="header-anchor" href="#taillength-2" aria-label="Permalink to &quot;taillength {#taillength-2}&quot;">​</a></h3><p>Defaults to <code>0</code></p><p>Sets the length of the arrow tail. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tail being drawn.</p><h3 id="tailradius" tabindex="-1">tailradius <a class="header-anchor" href="#tailradius" aria-label="Permalink to &quot;tailradius {#tailradius}&quot;">​</a></h3><p>Defaults to <code>0.15</code></p><p>Sets the width of the arrow tail. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="tip-2" tabindex="-1">tip <a class="header-anchor" href="#tip-2" aria-label="Permalink to &quot;tip {#tip-2}&quot;">​</a></h3><p>Defaults to <code>Cone(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code></p><p>Sets the mesh of the arrow tip. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow tip.</p><h3 id="tipcolor-2" tabindex="-1">tipcolor <a class="header-anchor" href="#tipcolor-2" aria-label="Permalink to &quot;tipcolor {#tipcolor-2}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets the color of the arrow tip. Defaults to <code>color</code></p><h3 id="tiplength-2" tabindex="-1">tiplength <a class="header-anchor" href="#tiplength-2" aria-label="Permalink to &quot;tiplength {#tiplength-2}&quot;">​</a></h3><p>Defaults to <code>0.4</code></p><p>Sets the length of the arrow tip. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tip being drawn.</p><h3 id="tipradius" tabindex="-1">tipradius <a class="header-anchor" href="#tipradius" aria-label="Permalink to &quot;tipradius {#tipradius}&quot;">​</a></h3><p>Defaults to <code>0.15</code></p><p>Sets the width of the arrow tip. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><h3 id="transformation-2" tabindex="-1">transformation <a class="header-anchor" href="#transformation-2" aria-label="Permalink to &quot;transformation {#transformation-2}&quot;">​</a></h3><p>Defaults to <code>:automatic</code></p><p>Controls the inheritance or directly sets the transformations of a plot. Transformations include the transform function and model matrix as generated by <code>translate!(...)</code>, <code>scale!(...)</code> and <code>rotate!(...)</code>. They can be set directly by passing a <code>Transformation()</code> object or inherited from the parent plot or scene. Inheritance options include:</p><ul><li><p><code>:automatic</code>: Inherit transformations if the parent and child <code>space</code> is compatible</p></li><li><p><code>:inherit</code>: Inherit transformations</p></li><li><p><code>:inherit_model</code>: Inherit only model transformations</p></li><li><p><code>:inherit_transform_func</code>: Inherit only the transform function</p></li><li><p><code>:nothing</code>: Inherit neither, fully disconnecting the child&#39;s transformations from the parent</p></li></ul><p>Another option is to pass arguments to the <code>transform!()</code> function which then get applied to the plot. For example <code>transformation = (:xz, 1.0)</code> which rotates the <code>xy</code> plane to the <code>xz</code> plane and translates by <code>1.0</code>. For this inheritance defaults to <code>:automatic</code> but can also be set through e.g. <code>(:nothing, (:xz, 1.0))</code>.</p><h3 id="transparency-2" tabindex="-1">transparency <a class="header-anchor" href="#transparency-2" aria-label="Permalink to &quot;transparency {#transparency-2}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><h3 id="visible-2" tabindex="-1">visible <a class="header-anchor" href="#visible-2" aria-label="Permalink to &quot;visible {#visible-2}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Controls whether the plot gets rendered or not.</p>',313))])}const v=l(u,[["render",b]]);export{B as __pageData,v as default};
