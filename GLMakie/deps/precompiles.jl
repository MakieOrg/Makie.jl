using Base: UUID, PkgId, require

macro import_pkg(name, uuid)
    qname = QuoteNode(name)
    return esc(quote
        if !isdefined(@__MODULE__, $(qname))
            const $(name) = require(PkgId($uuid, $(string(name))))
        end
    end)
end

macro precompile(args)
    ccall(:jl_generating_output, Cint, ()) == 1 || return
    warn_str = "Could not precompile: $(string(args))"
    return quote
        try
            precompile($(args))
        catch e
            @debug $(warn_str) exception=e
        end
    end
end

@import_pkg StatsFuns UUID("4c63d2b9-4356-54db-8cca-17b64c39e42c")
@import_pkg OpenSSL_jll UUID("458c3c95-2e84-50aa-8efc-19380b2a3a95")
@import_pkg libass_jll UUID("0ac62f75-1d6f-5e53-bd7c-93b484bb37c0")
@import_pkg Interpolations UUID("a98d9a8b-a2ab-59e6-89dd-64a1c18fca59")
@import_pkg GridLayoutBase UUID("3955a311-db13-416c-9275-1d80ed98e5e9")
@import_pkg DataStructures UUID("864edb3b-99cc-5e75-8d2d-829cb0a9cfe8")
@import_pkg Calculus UUID("49dc2e85-a5d0-5ad3-a950-438e2897f1b9")
@import_pkg REPL UUID("3fa0cd96-eef1-5676-8a61-b3b8758bbffb")
@import_pkg NetworkOptions UUID("ca575930-c2e3-43a9-ace4-1e988b2c1908")
@import_pkg ColorSchemes UUID("35d6a980-a343-548e-a6ea-1d62b119f2f4")
@import_pkg FreeType2_jll UUID("d7e528f0-a631-5988-bf34-fe36492bcfd7")
@import_pkg StaticArrays UUID("90137ffa-7385-5640-81b9-e52037218182")
@import_pkg ChangesOfVariables UUID("9e997f8a-9a97-42d5-a9f1-ce6bfc15e2c0")
@import_pkg StatsBase UUID("2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91")
@import_pkg AbstractFFTs UUID("621f4979-c628-5d54-868e-fcf4e3e8185c")
@import_pkg LaTeXStrings UUID("b964fa9f-0449-5b57-a5c2-d3ea65f4040f")
@import_pkg ImageIO UUID("82e4d734-157c-48bb-816b-45c225c6df19")
@import_pkg PDMats UUID("90014a1f-27ba-587c-ab20-58faa44d9150")
@import_pkg XML2_jll UUID("02c8fc9c-b97f-50b9-bbe4-9be30ff0a78a")
@import_pkg SuiteSparse UUID("4607b0f0-06f3-5cda-b6b1-a6196a1729e9")
@import_pkg Graphite2_jll UUID("3b182d85-2403-5c21-9c21-1e1f0cc25472")
@import_pkg SignedDistanceFields UUID("73760f76-fbc4-59ce-8f25-708e95d2df96")
@import_pkg Tables UUID("bd369af6-aec1-5ad0-b16a-f7cc5008161c")
@import_pkg Random UUID("9a3f8284-a2c9-5f02-9a11-845980a1fd5c")
@import_pkg IndirectArrays UUID("9b13fd28-a010-5f03-acff-a1bbcff69959")
@import_pkg PolygonOps UUID("647866c9-e3ac-4575-94e7-e3d426903924")
@import_pkg Isoband UUID("f1662d9f-8043-43de-a69a-05efc1cc6ff4")
@import_pkg IteratorInterfaceExtensions UUID("82899510-4779-5014-852e-03e436cf321d")
@import_pkg Bzip2_jll UUID("6e34b625-4abd-537c-b88f-471c36dfa7a0")
@import_pkg TensorCore UUID("62fd8b95-f654-4bbd-a8a5-9c27f68ccd50")
@import_pkg StatsAPI UUID("82ae8749-77ed-4fe6-ae5f-f523153014b0")
@import_pkg LazyArtifacts UUID("4af54fe1-eca0-43a8-85a7-787d91b784e3")
@import_pkg Tar UUID("a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e")
@import_pkg Test UUID("8dfed614-e22c-5e08-85e1-65c5234f0b40")
@import_pkg Future UUID("9fa8497b-333b-5362-9e8d-4d0656e87820")
@import_pkg FFTW UUID("7a1cc6ca-52ef-59f5-83cd-3a7055c09341")
@import_pkg FileWatching UUID("7b1f6079-737a-58dc-b8bc-7a2ca5c1b5ee")
@import_pkg Artifacts UUID("56f22d72-fd6d-98f1-02f0-08ddc0907c33")
@import_pkg Dates UUID("ade2ca70-3891-5945-98fb-dc099432e06a")
@import_pkg CEnum UUID("fa961155-64e5-5f13-b03f-caf6b980ea82")
@import_pkg JLLWrappers UUID("692b3bcd-3c85-4b1f-b108-f13ce0eb3210")
@import_pkg OffsetArrays UUID("6fe1bfb0-de20-5000-8ca7-80f57d26f881")
@import_pkg ColorVectorSpace UUID("c3611d14-8923-5661-9e6a-0046d554d3a4")
@import_pkg Gettext_jll UUID("78b55507-aeef-58d4-861c-77aaff3498b1")
@import_pkg Downloads UUID("f43a241f-c20a-4ad4-852c-f6b1247861c6")
@import_pkg TableTraits UUID("3783bdb8-4a98-5b6b-af9a-565f29a5fe9c")
@import_pkg Rmath_jll UUID("f50d1b31-88e8-58de-be2c-1cc44531875f")
@import_pkg Match UUID("7eb4fadd-790c-5f42-8a69-bfa0b872bfbf")
@import_pkg FillArrays UUID("1a297f60-69ca-5386-bcde-b61e274b549b")
@import_pkg Serialization UUID("9e88b42a-f829-5b0c-bbe9-9e923198166b")
@import_pkg libpng_jll UUID("b53b4c65-9356-5827-b1ea-8c7a1a84506f")
@import_pkg libfdk_aac_jll UUID("f638f0a6-7fb0-5443-88ba-1cc74229b280")
@import_pkg OpenLibm_jll UUID("05823500-19ac-5b8b-9628-191a04bc5112")
@import_pkg UUIDs UUID("cf7118a7-6976-5b1a-9a39-7adc72f591a4")
@import_pkg InverseFunctions UUID("3587e190-3f89-42d0-90ee-14403ec27112")
@import_pkg Logging UUID("56ddb016-857b-54e1-b83d-db4d58db5568")
@import_pkg Distributions UUID("31c24e10-a181-5473-b8eb-7969acd0382f")
@import_pkg ArgTools UUID("0dad84c5-d112-42e6-8d28-ef12dabb789f")
@import_pkg Statistics UUID("10745b16-79ce-11e8-11f9-7d13ad32a3b2")
@import_pkg WoodburyMatrices UUID("efce3f68-66dc-5838-9240-27a6d6f5f9b6")
@import_pkg CompilerSupportLibraries_jll UUID("e66e0078-7015-5450-92f7-15fbd957f2ae")
@import_pkg MozillaCACerts_jll UUID("14a3606d-f60d-562e-9121-12d972cd8159")
@import_pkg Distributed UUID("8ba89e20-285c-5b6f-9357-94700520ee1b")
@import_pkg IterTools UUID("c8e1da08-722c-5040-9ed9-7db0dc04731e")
@import_pkg LibCURL_jll UUID("deac9b47-8bc7-5906-a0fe-35ac56dc84c0")
@import_pkg nghttp2_jll UUID("8e850ede-7688-5339-a07c-302acd2aaf8d")
@import_pkg SharedArrays UUID("1a1011a3-84de-559e-8e89-a11a2f7dc383")
@import_pkg SHA UUID("ea8e919c-243c-51af-8825-aaa63cd721ce")
@import_pkg p7zip_jll UUID("3f19e933-33d8-53b3-aaab-bd5110c3b7a0")
@import_pkg MathTeXEngine UUID("0a4f8689-d25c-4efe-a92b-7142dfc1aa53")
@import_pkg LAME_jll UUID("c1c5ebd0-6772-5130-a774-d5fcae4a789d")
@import_pkg Pixman_jll UUID("30392449-352a-5448-841d-b1acce4e97dc")
@import_pkg Cairo_jll UUID("83423d85-b0ee-5818-9007-b63ccbeb887a")
@import_pkg Preferences UUID("21216c6a-2e73-6563-6e65-726566657250")
@import_pkg EarCut_jll UUID("5ae413db-bbd1-5e63-b57d-d24a61df00f5")
@import_pkg Parsers UUID("69de0a69-1ddd-5017-9359-2bf0b02dc9f0")
@import_pkg Compat UUID("34da2185-b29b-5c13-b0c7-acf172513d20")
@import_pkg Animations UUID("27a7e980-b3e6-11e9-2bcd-0b925532e340")
@import_pkg Unicode UUID("4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5")
@import_pkg Glib_jll UUID("7746bdde-850d-59dc-9ae8-88ece973131d")
@import_pkg OrderedCollections UUID("bac558e1-5e72-5ebc-8fee-abe8a469f55d")
@import_pkg Observables UUID("510215fc-4207-5dde-b226-833fc4488ee2")
@import_pkg Requires UUID("ae029012-a4dd-5104-9daa-d747884805df")
@import_pkg Ogg_jll UUID("e7412a2a-1a6e-54c0-be00-318e2571c051")
@import_pkg HypergeometricFunctions UUID("34004b35-14d8-5ef3-9330-4cdb6864b03a")
@import_pkg DataValueInterfaces UUID("e2d170a0-9d28-54be-80f0-106bbe20a464")
@import_pkg x265_jll UUID("dfaa095f-4041-5dcd-9319-2fabd8486b76")
@import_pkg Automa UUID("67c07d97-cdcb-5c2c-af73-a7f9c32a568b")
@import_pkg Profile UUID("9abbd945-dff8-562f-b5e8-e1ebf5ef1b79")
@import_pkg x264_jll UUID("1270edf5-f2f9-52d2-97e9-ab00b5d0237a")
@import_pkg KernelDensity UUID("5ab0869b-81aa-558d-bb23-cbf5423bbe9b")
@import_pkg Reexport UUID("189a3867-3050-52da-a836-e630ba90ab69")
@import_pkg libaom_jll UUID("a4ae2306-e953-59d6-aa16-d00cac43593b")
@import_pkg Zlib_jll UUID("83775a58-1f1d-513f-b197-d71354ab007a")
@import_pkg DocStringExtensions UUID("ffbed154-4ef7-542d-bbb7-c09d3a79fcae")
@import_pkg AbstractTrees UUID("1520ce14-60c1-5f80-bbc7-55ef81b5835c")
@import_pkg IrrationalConstants UUID("92d709cd-6900-40b7-9082-c6be49f344b6")
@import_pkg IntervalSets UUID("8197267c-284f-5f27-9208-e0e47529a953")
@import_pkg GLFW_jll UUID("0656b61e-2033-5cc2-a64a-77c0f6c09b89")
@import_pkg Packing UUID("19eb6ba3-879d-56ad-ad62-d5c202156566")
@import_pkg Expat_jll UUID("2e619515-83b5-522b-bb60-26c02a35a201")
@import_pkg Markdown UUID("d6f4376e-aef5-505a-96c1-9c027394607a")
@import_pkg AxisAlgorithms UUID("13072b0f-2c55-5437-9ae7-d433b7a33950")
@import_pkg SpecialFunctions UUID("276daf66-3868-5448-9aa4-cd146d93841b")
@import_pkg TOML UUID("fa267f1f-6049-4f14-aa54-33bafae1ed76")
@import_pkg LibGit2 UUID("76f85450-5226-5b5a-8eaa-529ad045b433")
@import_pkg Mmap UUID("a63ad114-7e13-5084-954f-fe012c677804")
@import_pkg SortingAlgorithms UUID("a2af1166-a08f-5f64-846c-94a0d3cef48c")
@import_pkg Sockets UUID("6462fe0b-24de-5631-8697-dd941f90decc")
@import_pkg LZO_jll UUID("dd4b983a-f0e5-5f8d-a1b7-129d4a5fb1ac")
@import_pkg Libdl UUID("8f399da3-3557-5675-b5ff-fb832c97cbdb")
@import_pkg libvorbis_jll UUID("f27f6e37-5d2b-51aa-960f-b287f2bc3b7a")
@import_pkg Formatting UUID("59287772-0a20-5a39-b81b-1366585eb4c0")
@import_pkg DualNumbers UUID("fa6b7ba4-c1ee-5f82-b5fc-ecf0adba8f74")
@import_pkg InteractiveUtils UUID("b77e0a4c-d291-57a0-90e8-8db25a27a240")
@import_pkg ChainRulesCore UUID("d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4")
@import_pkg QuadGK UUID("1fd47b50-473d-5c70-9696-f719f8f3bcdc")
@import_pkg LibCURL UUID("b27032c2-a3e7-50c8-80cd-2d36dbcbfd21")
@import_pkg UnicodeFun UUID("1cfade01-22cf-5700-b092-accc4b62d6e1")
@import_pkg SIMD UUID("fdea26ae-647d-5447-a871-4b548cad5224")
@import_pkg TranscodingStreams UUID("3bb67fe8-82b1-5028-8e26-92a6c54297fa")
@import_pkg Fontconfig_jll UUID("a3f928ae-7b40-5064-980b-68af3947d34b")
@import_pkg Rmath UUID("79098fc4-a85e-5d69-aa6a-4863f24498fa")
@import_pkg LazyModules UUID("8cdb02fc-e678-4876-92c5-9defec4f444e")
@import_pkg NaNMath UUID("77ba4419-2d1f-58cd-9bb1-8ffee604a2e3")
@import_pkg Opus_jll UUID("91d4177d-7536-5919-b921-800302f37372")
@import_pkg Ratios UUID("c84ed2f1-dad5-54f0-aa8e-dbefe2724439")
@import_pkg MakieCore UUID("20f20a25-4f0e-4fdf-b5d1-57303727442b")
@import_pkg FFMPEG UUID("c87230d0-a227-11e9-1b43-d7ebe4e7570a")
@import_pkg FreeType UUID("b38be410-82b0-50bf-ab77-7b57e271db43")
@import_pkg DelimitedFiles UUID("8bb1440f-4735-579b-a4ab-409b98df4dab")
@import_pkg HarfBuzz_jll UUID("2e76f6c2-a576-52d4-95c1-20adfe4de566")
@import_pkg JSON UUID("682c06a0-de6a-54ab-a142-c8b1cf79cde6")
@import_pkg ColorBrewer UUID("a2cac450-b92f-5266-8821-25eda20663c8")
@import_pkg PlotUtils UUID("995b91a9-d308-5afd-9ec6-746e21dbc043")
@import_pkg Printf UUID("de0858da-6303-5e67-8744-51eddeeeb8d7")
@import_pkg PCRE_jll UUID("2f80f16e-611a-54ab-bc61-aa92de5b98fc")
@import_pkg SparseArrays UUID("2f01184e-e22b-5df5-ae63-d93ebab69eaf")
@import_pkg Libiconv_jll UUID("94ce4f54-9a6c-5748-9c1c-f9c7231a4531")
@import_pkg RelocatableFolders UUID("05181044-ff0b-4ac5-8273-598c1e38db00")
@import_pkg Adapt UUID("79e6a3ab-5dfb-504d-930d-738a2a938a0e")
@import_pkg Libffi_jll UUID("e9f186c6-92d2-5b65-8a66-fee21dc1b490")
@import_pkg Base64 UUID("2a0f44e3-6c83-55bd-87e4-b1978d98bd5f")
@import_pkg DataAPI UUID("9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a")
@import_pkg CRC32c UUID("8bf52ea8-c179-5cab-976a-9e18b702a9bc")
@import_pkg isoband_jll UUID("9a68df92-36a6-505f-a73e-abb412b6bfb4")
@import_pkg Scratch UUID("6c6a2e73-6563-6170-7368-637461726353")
@import_pkg Pkg UUID("44cfe95a-1eb2-52ea-b672-e2afdf69b78f")
@import_pkg Showoff UUID("992d4aef-0814-514b-bc4d-f2e9a6c4116f")
@import_pkg DensityInterface UUID("b429d917-457f-4dbc-8f4c-0cc954292b1d")
@import_pkg FFTW_jll UUID("f5851436-0d7a-5f13-b9de-f02708fd171a")
@import_pkg OpenSpecFun_jll UUID("efe28fd5-8261-553b-a9e1-b2916fc3738e")
@import_pkg LogExpFunctions UUID("2ab3a3ac-af41-5b50-aa03-7779005ae688")
@import_pkg FFMPEG_jll UUID("b22a6f82-2f65-5046-a5b2-351ab43fb4e5")
@import_pkg StructArrays UUID("09ab397b-f2b6-538f-b94a-2f83cf4a842a")
@import_pkg StaticArraysCore UUID("1e83bf80-4336-4d27-bf5d-d5a4f845583c")
@import_pkg ScanByte UUID("7b38b023-a4d7-4c5e-8d43-3f3097f304eb")
@import_pkg Libuuid_jll UUID("38a345b3-de98-5d2b-a5d3-14cd9215e700")
@import_pkg FriBidi_jll UUID("559328eb-81f9-559d-9380-de523a88c83c")
@import_pkg Missings UUID("e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28")

@precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOStream, Pair{Symbol, Bool}})
@precompile(Tuple{Type{Base.Multimedia.TextDisplay}, Base.IOContext{Base.IOStream}})
@precompile(Tuple{Type{REPL.Terminals.TTYTerminal}, String, Base.IOStream, Base.IOContext{Base.IOStream}, Base.IOContext{Base.IOStream}})
@precompile(Tuple{typeof(Base.something), Nothing, Base.IOContext{Base.IOStream}})
@precompile(Tuple{Type{NamedTuple{(:stderr, :stdout), T} where T<:Tuple}, Tuple{Base.IOContext{Base.IOStream}, Base.IOContext{Base.IOStream}}})
@precompile(Tuple{Base.var"#pipeline##kw", NamedTuple{(:stderr, :stdout), Tuple{Base.IOContext{Base.IOStream}, Base.IOContext{Base.IOStream}}}, typeof(Base.pipeline), Base.Cmd})
@precompile(Tuple{typeof(Base.open), Base.CmdRedirect, String, Base.IOContext{Base.IOStream}})
@precompile(Tuple{typeof(Base.setup_stdio), Base.IOContext{Base.IOStream}, Bool})
@precompile(Tuple{typeof(Rmath_jll.__init__)})
@precompile(Tuple{typeof(Rmath_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Base.invokelatest), Any})
@precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
@precompile(Tuple{typeof(Base.rand)})
@precompile(Tuple{typeof(Base.randn)})
@precompile(Tuple{typeof(Random.randexp)})
@precompile(Tuple{typeof(Rmath.__init__)})
@precompile(Tuple{typeof(OpenLibm_jll.__init__)})
@precompile(Tuple{typeof(DocStringExtensions.__init__)})
@precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
@precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
@precompile(Tuple{typeof(OpenSpecFun_jll.find_artifact_dir)})
@precompile(Tuple{typeof(OpenSSL_jll.__init__)})
@precompile(Tuple{typeof(OpenSSL_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Zlib_jll.__init__)})
@precompile(Tuple{typeof(Libiconv_jll.__init__)})
@precompile(Tuple{typeof(Libiconv_jll.find_artifact_dir)})
@precompile(Tuple{typeof(XML2_jll.__init__)})
@precompile(Tuple{typeof(XML2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Gettext_jll.__init__)})
@precompile(Tuple{typeof(Gettext_jll.find_artifact_dir)})
@precompile(Tuple{typeof(PCRE_jll.__init__)})
@precompile(Tuple{typeof(PCRE_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Libffi_jll.__init__)})
@precompile(Tuple{typeof(Libffi_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Glib_jll.__init__)})
@precompile(Tuple{typeof(Glib_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Bzip2_jll.__init__)})
@precompile(Tuple{typeof(Bzip2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FreeType2_jll.__init__)})
@precompile(Tuple{typeof(FreeType2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libpng_jll.__init__)})
@precompile(Tuple{typeof(libpng_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Graphite2_jll.__init__)})
@precompile(Tuple{typeof(Graphite2_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Expat_jll.__init__)})
@precompile(Tuple{typeof(Expat_jll.find_artifact_dir)})
@precompile(Tuple{typeof(LZO_jll.__init__)})
@precompile(Tuple{typeof(LZO_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Pixman_jll.__init__)})
@precompile(Tuple{typeof(Pixman_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Fontconfig_jll.__init__)})
@precompile(Tuple{typeof(Fontconfig_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Base.getindex), Base.EnvDict, String})
@precompile(Tuple{typeof(Cairo_jll.__init__)})
@precompile(Tuple{typeof(Cairo_jll.find_artifact_dir)})
@precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
@precompile(Tuple{typeof(HarfBuzz_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FriBidi_jll.__init__)})
@precompile(Tuple{typeof(FriBidi_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libass_jll.__init__)})
@precompile(Tuple{typeof(libass_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Requires.__init__)})
@precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
@precompile(Tuple{typeof(Ratios.__init__)})
@precompile(Tuple{typeof(Requires.isprecompiling)})
@precompile(Tuple{typeof(Base.:(==)), Int32, Int64})
@precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
@precompile(Tuple{typeof(Requires.loaded), Base.PkgId})
@precompile(Tuple{typeof(Requires.callbacks), Base.PkgId})
@precompile(Tuple{typeof(Base.recursive_prefs_merge), Base.Dict{String, Any}, Base.Dict{String, Any}, Vararg{Base.Dict{String, Any}}})
@precompile(Tuple{typeof(Base._typeddict), Base.Dict{String, Any}, Base.Dict{String, Any}, Vararg{Base.Dict{String, Any}}})
@precompile(Tuple{typeof(Base.promoteK), Type, Base.Dict{String, Any}, Base.Dict{String, Any}})
@precompile(Tuple{typeof(Base.promoteV), Type, Base.Dict{String, Any}, Base.Dict{String, Any}})
@precompile(Tuple{typeof(Interpolations.__init__)})
@precompile(Tuple{typeof(EarCut_jll.__init__)})
@precompile(Tuple{typeof(EarCut_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Base.getindex), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
@precompile(Tuple{typeof(Base.foreach), typeof(Base.invokelatest), Array{Function, 1}})
@precompile(Tuple{Ratios.var"#9#12"})
@precompile(Tuple{typeof(Requires.withpath), Any, String})
@precompile(Tuple{typeof(Base.task_local_storage)})
@precompile(Tuple{typeof(Base.haskey), Base.IdDict{Any, Any}, Symbol})
@precompile(Tuple{typeof(Base.something), String, String, Vararg{String}})
@precompile(Tuple{Ratios.var"#10#13"})
@precompile(Tuple{typeof(Requires.err), Any, Module, String, String, Any})
@precompile(Tuple{Ratios.var"#11#14"})
@precompile(Tuple{typeof(Base.getindex), Base.RefValue{Base.CoreLogging.LogLevel}})
@precompile(Tuple{typeof(Base.:(>=)), Base.CoreLogging.LogLevel, Base.CoreLogging.LogLevel})
@precompile(Tuple{typeof(Base.isassigned), Base.RefValue{Symbol}})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Symbol}, Symbol})
@precompile(Tuple{typeof(Requires.withnotifications), Any, Vararg{Any}})
@precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}})
@precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}, Int64})
@precompile(Tuple{typeof(ColorTypes.__init__)})
@precompile(Tuple{typeof(ColorVectorSpace.__init__)})
@precompile(Tuple{typeof(LazyModules.__init__)})
@precompile(Tuple{typeof(FileIO.__init__)})
@precompile(Tuple{typeof(isoband_jll.__init__)})
@precompile(Tuple{typeof(isoband_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFTW_jll.__init__)})
@precompile(Tuple{typeof(FFTW_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFTW.spawnloop), Ptr{Nothing}, Ptr{Nothing}, UInt64, Int32, Ptr{Nothing}})
@precompile(Tuple{typeof(FFTW.__init__)})
@precompile(Tuple{typeof(libfdk_aac_jll.__init__)})
@precompile(Tuple{typeof(libfdk_aac_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FreeTypeAbstraction.__init__)})
@precompile(Tuple{typeof(LAME_jll.__init__)})
@precompile(Tuple{typeof(LAME_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Any})
@precompile(Tuple{Artifacts.var"##artifact_paths#7", Bool, typeof(Artifacts.artifact_paths), Base.SHA1})
@precompile(Tuple{typeof(Parsers.__init__)})
@precompile(Tuple{typeof(Ogg_jll.__init__)})
@precompile(Tuple{typeof(Ogg_jll.find_artifact_dir)})
@precompile(Tuple{typeof(x265_jll.__init__)})
@precompile(Tuple{typeof(x265_jll.find_artifact_dir)})
@precompile(Tuple{typeof(x264_jll.__init__)})
@precompile(Tuple{typeof(x264_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libaom_jll.__init__)})
@precompile(Tuple{typeof(libaom_jll.find_artifact_dir)})
@precompile(Tuple{typeof(libvorbis_jll.__init__)})
@precompile(Tuple{typeof(libvorbis_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Opus_jll.__init__)})
@precompile(Tuple{typeof(Opus_jll.find_artifact_dir)})
@precompile(Tuple{typeof(FFMPEG_jll.__init__)})
@precompile(Tuple{typeof(FFMPEG_jll.find_artifact_dir)})
@precompile(Tuple{typeof(Makie.__init__)})
@precompile(Tuple{typeof(Base.empty!), Base.Dict{String, FreeTypeAbstraction.FTFont}})
@precompile(Tuple{typeof(GLFW_jll.__init__)})
@precompile(Tuple{typeof(GLFW_jll.find_artifact_dir)})
@precompile(Tuple{typeof(GLFW._ErrorCallbackWrapper), Int32, Base.Cstring})
@precompile(Tuple{typeof(GLFW.__init__)})
@precompile(Tuple{typeof(GLMakie.__init__)})
@precompile(Tuple{typeof(Makie.inline!), Bool})
@precompile(Tuple{typeof(Base.require), Module, Symbol})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Int64})
@precompile(Tuple{Type{NamedTuple{(:linewidth,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{typeof(Makie._validate_nt_like_keyword), Any, String})
@precompile(Tuple{typeof(Base.promote_typejoin), Any, Any})
@precompile(Tuple{Type{Base.Val{:attributes}}})
@precompile(Tuple{MakieCore.var"##s14#6", Any, Any, Any, Any, Any})
@precompile(Tuple{Makie.var"#arc##kw", NamedTuple{(:linewidth,), Tuple{Int64}}, typeof(Makie.arc), GeometryBasics.Point{2, Float32}, Vararg{Any}})
@precompile(Tuple{Makie.var"##arc#282", Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:linewidth,), Tuple{Int64}}}, typeof(Makie.arc), GeometryBasics.Point{2, Float32}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:linewidth,), Tuple{Int64}}, typeof(MakieCore.plot), Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, GeometryBasics.Point{2, Float32}, Float32, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:linewidth,), Tuple{Int64}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, GeometryBasics.Point{2, Float32}, Vararg{Any}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.deepcopy), Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, Observables.Observable{Any}, Symbol})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, MakieCore.Attributes})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, MakieCore.Attributes, Symbol})
@precompile(Tuple{typeof(Base.copy), Observables.Observable{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Any}})
@precompile(Tuple{Type{Base.Order.By{typeof(Base.first), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}}, Function, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
@precompile(Tuple{Type{Base.Order.ReverseOrdering{Fwd} where Fwd<:Base.Order.Ordering}, Base.Order.By{typeof(Base.first), Base.Order.ForwardOrdering}})
@precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{Pair{Int64, Any}, 1}, Int64, Base.Order.By{typeof(Base.first), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Function})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#8#9"{Observables.Observable{Any}}}, Observables.var"#8#9"{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#8#9"{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.copy), MakieCore.Attributes})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:camera,), Tuple{typeof(Makie.campixel!)}}, NamedTuple{(), Tuple{}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:camera,), Tuple{typeof(Makie.campixel!)}}, Type{Makie.Scene}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.MouseButtonEvent}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#2#4"{Makie.Events}}, Makie.var"#2#4"{Makie.Events}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#2#4"{Makie.Events}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.KeyEvent}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#3#5"{Makie.Events}}, Makie.var"#3#5"{Makie.Events}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#3#5"{Makie.Events}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Type{NamedTuple{(:by, :rev), T} where T<:Tuple}, Tuple{typeof(Base.first), Bool}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:by, :rev), Tuple{typeof(Base.first), Bool}}, Symbol})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.transformationmatrix), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.transformationmatrix), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.transformationmatrix), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Attributes, Symbol})
@precompile(Tuple{Type{Base.Val{:radius}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:radius}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Any}})
@precompile(Tuple{Type{Base.Val{:bias}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:bias}})
@precompile(Tuple{Type{Base.Val{:blur}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:blur}})
@precompile(Tuple{Type{Makie.SSAO}, Float32, Float32, Int32})
@precompile(Tuple{Makie.var"##Scene#68", Nothing, Makie.Events, Bool, Function, typeof(Makie.campixel!), Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Nothing, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}})
@precompile(Tuple{Type{Base.Val{:backgroundcolor}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:backgroundcolor}})
@precompile(Tuple{Type{NamedTuple{(:update,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{Type{NamedTuple{(:weak, :priority), T} where T<:Tuple}, Tuple{Bool, Int64}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:weak, :priority), Tuple{Bool, Int64}}, Symbol})
@precompile(Tuple{Type{NamedTuple{(:ignore_equal_values,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_color), Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.to_color), Symbol})
@precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(ColorTypes.basetype), Any})
@precompile(Tuple{typeof(Base.typename), DataType})
@precompile(Tuple{typeof(Core.Compiler._typename), TypeVar})
@precompile(Tuple{typeof(FixedPointNumbers.bitwidth), Type})
@precompile(Tuple{typeof(Base.typename), UnionAll})
@precompile(Tuple{typeof(ColorTypes._eltypes_supported), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.TransparentColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
@precompile(Tuple{typeof(ColorTypes._eltypes_supported), Type{ColorTypes.RGBA{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_color), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_color), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_color), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Base.Val{:resolution}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:resolution}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Int64}}})
@precompile(Tuple{typeof(Base.map), Type{StaticArrays.SOneTo{n} where n}, Tuple{Int64}})
@precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(2,)}})
@precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{2}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Tuple{StaticArrays.SOneTo{2}, Int64}, Tuple{StaticArrays.SOneTo{2}, Int64}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{2}, Int64})
@precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Tuple{StaticArrays.SOneTo{2}, Int64}}, Tuple{Tuple{StaticArrays.SOneTo{2}, Int64}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Symbol})
@precompile(Tuple{typeof(Base.map), Makie.var"#69#72", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#69#72", Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#69#72", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#69#72", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#69#72", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Makie.Camera}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#179#181", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#179#181", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#179#181", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.:(*)), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.:(*)), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.:(*)), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#180#182", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#180#182", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#180#182", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#70#73"}, Makie.var"#70#73"})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#70#73"}})
@precompile(Tuple{Type{Makie.Scene}, Nothing, Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Makie.Camera, Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Makie.SSAO, Array{Makie.AbstractLight, 1}})
@precompile(Tuple{typeof(Makie.campixel!), Makie.Scene})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.UpdatePixelCam, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.UpdatePixelCam, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Symbol, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Base.convert), Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.:(*)), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}, Any})
@precompile(Tuple{typeof(Base.:(*)), StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Base.get), MakieCore.Attributes, Symbol, Nothing})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.getproperty), Makie.Scene, Symbol})
@precompile(Tuple{Type{Base.Val{:camera}}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Scene, Base.Val{:camera}})
@precompile(Tuple{typeof(Base.getproperty), Makie.Camera, Symbol})
@precompile(Tuple{Type{Base.Val{:lights}}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Scene, Base.Val{:lights}})
@precompile(Tuple{Type{Makie.PointLight}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, ColorTypes.RGB{Float32}})
@precompile(Tuple{typeof(Base.push!), Array{Makie.AbstractLight, 1}, Makie.PointLight})
@precompile(Tuple{Type{Makie.AmbientLight}, ColorTypes.RGB{Float32}})
@precompile(Tuple{typeof(Base.push!), Array{Makie.AbstractLight, 1}, Makie.AmbientLight})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Observables.Observable{Any}})
@precompile(Tuple{Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Observables.Observable{GridLayoutBase.Outside}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Observables.Observable{GridLayoutBase.Outside}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Base.ComposedFunction{Type{GridLayoutBase.Outside}, typeof(Makie.to_rectsides)}, Observables.Observable{GridLayoutBase.Outside}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{GridLayoutBase.GridLayout}, Makie.Scene})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1104#1105", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1104#1105", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1104#1105", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Makie.var"#954#956"})
@precompile(Tuple{Makie.var"#953#955"})
@precompile(Tuple{GridLayoutBase.var"##LayoutObservables#99", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Nothing, Nothing, Bool, Type{GridLayoutBase.LayoutObservables{G} where G}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{GridLayoutBase.var"#104#105"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Tuple{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}}, Observables.var"#callback#13"{GridLayoutBase.var"#104#105"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Tuple{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{GridLayoutBase.var"#104#105"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Tuple{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GridLayoutBase.HorizontalAlignment}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.HorizontalAlignment}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.HorizontalAlignment}, Observables.Observable{GridLayoutBase.VerticalAlignment}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.VerticalAlignment}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Bool, Bool}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Bool, Bool}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Bool, Bool}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Bool, Bool}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.RectSides{Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}})
@precompile(Tuple{typeof(GridLayoutBase._reporteddimensionsobservable), Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}, Tuple{Bool, Bool}, GridLayoutBase.RectSides{Float32}, GridLayoutBase.Inside})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}}, Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.Dimensions}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}}, Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}}})
@precompile(Tuple{typeof(Core.convert), Type{GridLayoutBase.var"#11#12"{GridLayoutBase.GridLayout}}, GridLayoutBase.var"#11#12"{GridLayoutBase.GridLayout}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GridLayoutBase.var"#11#12"{GridLayoutBase.GridLayout}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GridLayoutBase.Outside}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#958#959"{GridLayoutBase.GridLayout}}, Makie.var"#958#959"{GridLayoutBase.GridLayout}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#958#959"{GridLayoutBase.GridLayout}}})
@precompile(Tuple{Makie.var"#958#959"{GridLayoutBase.GridLayout}, GridLayoutBase.Outside})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}}}, Any})
@precompile(Tuple{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{GridLayoutBase.Auto, GridLayoutBase.Auto}, Vararg{Any}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GridLayoutBase.Dimensions}, Symbol, GridLayoutBase.Dimensions})
@precompile(Tuple{typeof(Base.convert), Type{GridLayoutBase.Dimensions}, GridLayoutBase.Dimensions})
@precompile(Tuple{Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Union{GridLayoutBase.Inside, GridLayoutBase.Outside, GridLayoutBase.Mixed}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Symbol, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.HyperRectangle{2, Float32}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.reduce_empty), typeof(Base.:(+)), Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.reduce_empty), typeof(Base.add_sum), Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.BottomRF{typeof(Base.add_sum)}, Type{Tuple{Int64, Union{Union{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto}, GridLayoutBase.Fixed}, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Float32})
@precompile(Tuple{typeof(Base.Broadcast.extrude), Float32})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float32}, Int64})
@precompile(Tuple{typeof(Base.signbit), Float32})
@precompile(Tuple{typeof(Base.getindex), Float32})
@precompile(Tuple{GridLayoutBase.var"#11#12"{GridLayoutBase.GridLayout}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Symbol, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Base.iterate), Array{Union{GridLayoutBase.Aspect, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, 1}, Int64})
@precompile(Tuple{GridLayoutBase.var"#66#84"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#67#85"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#70#88"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{GridLayoutBase.var"#71#89"{Array{Bool, 1}, Array{Float64, 1}, Array{Int64, 1}}, Tuple{Int64, GridLayoutBase.Auto}})
@precompile(Tuple{Type{Makie.Figure}, Makie.Scene, Vararg{Any}})
@precompile(Tuple{typeof(Base.convert), Type{Array{T, 1} where T}, Array{Any, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Ref{Any}}, Base.RefValue{Any}})
@precompile(Tuple{typeof(Base.setproperty!), GridLayoutBase.GridLayout, Symbol, Makie.Figure})
@precompile(Tuple{Makie.var"##Scene#68", Nothing, Makie.Events, Bool, Function, Nothing, Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Nothing, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}})
@precompile(Tuple{typeof(Base.convert), Type{Type{Observables.Observable{T} where T}}, Type{Observables.Observable{T} where T}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.Point{2, Float32}, Float32, Float32, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot!#128", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.Point{2, Float32}, Vararg{Any}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}})
@precompile(Tuple{typeof(Base.getindex), Tuple, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, GeometryBasics.Point{2, Float32}, Float32, Float32, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plotfunc), Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, GeometryBasics.Point{2, Float32}, Float32, Float32, Vararg{Any}})
@precompile(Tuple{typeof(Base.intersect), Tuple{}, Base.KeySet{Symbol, Base.Dict{Symbol, Observables.Observable{T} where T}}})
@precompile(Tuple{typeof(Base.isempty), Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Tuple{}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Tuple{}})
@precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.NoConversion, GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, GeometryBasics.Point{2, Float32}, Float32, Float32, Vararg{Any}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:update,), Tuple{Bool}}, Symbol})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(tuple), Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}})
@precompile(Tuple{typeof(Base.argtail), Base.Irrational{:π}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Float32}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.Irrational{:π}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Base.:(<)), Base.Irrational{:π}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Val{:converted}}})
@precompile(Tuple{typeof(Base.first), Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.tail), Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.first), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.tail), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.first), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.tail), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.first), Tuple{Symbol}})
@precompile(Tuple{typeof(Base.isequal), Symbol})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Base.Fix2{typeof(Base.isequal), Symbol}, Symbol})
@precompile(Tuple{typeof(Base._findfirst_rec), Base.Fix2{typeof(Base.isequal), Symbol}, Int64, Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Val{:plots}}})
@precompile(Tuple{Type{Base.Val{:current_screens}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{Type{NamedTuple{(:resolution,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :transformation, :model, :visible, :transparency, :overdraw, :diffuse, :specular, :shininess, :nan_color, :ssao, :inspectable, :depth_shift, :space), T} where T<:Tuple}, Tuple{Int64, MakieCore.Automatic, MakieCore.Automatic, Bool, Bool, Bool, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, ColorTypes.RGBA{Float32}, Bool, Observables.Observable{Any}, Float32, Symbol}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, MakieCore.Automatic})
@precompile(Tuple{typeof(MakieCore.value_convert), Any})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:linewidth, :transformation, :model, :visible, :transparency, :overdraw, :diffuse, :specular, :shininess, :nan_color, :ssao, :inspectable, :depth_shift, :space), Tuple{Int64, MakieCore.Automatic, MakieCore.Automatic, Bool, Bool, Bool, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, ColorTypes.RGBA{Float32}, Bool, Observables.Observable{Any}, Float32, Symbol}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable, :space), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Observables.Observable{Any}, Symbol}})
@precompile(Tuple{Base.var"##s82#216", Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Observables.Observable{Any}, Symbol}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:linewidth, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}, Observables.Observable{Any}, Symbol}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :linestyle, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Nothing, Bool, Array{Symbol, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :shininess, :overdraw, :specular, :colormap, :visible, :space, :transformation, :cycle, :model, :depth_shift, :ssao, :color, :colorrange, :linestyle, :linewidth, :diffuse, :inspectable, :nan_color, :fxaa), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :shininess, :overdraw, :specular, :colormap, :visible, :space, :transformation, :cycle, :model, :depth_shift, :ssao, :color, :colorrange, :linestyle, :linewidth, :diffuse, :inspectable, :nan_color, :fxaa), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:resolution,), Tuple{Int64}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :colormap, :visible, :space, :transformation, :cycle, :model, :depth_shift, :ssao, :color, :colorrange, :linestyle, :linewidth, :diffuse, :inspectable, :nan_color, :fxaa), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:resolution,), Tuple{Int64}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :colormap, :visible, :space, :transformation, :cycle, :model, :depth_shift, :ssao, :color, :colorrange, :linestyle, :linewidth, :diffuse, :inspectable, :nan_color, :fxaa, :resolution), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Int64}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#642#643", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#642#643", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#642#643", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}})
@precompile(Tuple{typeof(Base.:(==)), MakieCore.Automatic, MakieCore.Automatic})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#6#7"{Observables.Observable{Any}}}, Observables.var"#6#7"{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#6#7"{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.Irrational{:π}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.Irrational{:π}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.Irrational{:π}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#286#288", Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#286#288", Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.asF64), Float32})
@precompile(Tuple{typeof(Base.min), Float32, Float32})
@precompile(Tuple{typeof(Base.promote_type), Type, Type, Type})
@precompile(Tuple{typeof(Base.prevfloat), Float32})
@precompile(Tuple{Makie.var"#286#288", GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}, Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#286#288", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#286#288", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#286#288", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Base.Irrational{:π}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Base.Val{:parent}}})
@precompile(Tuple{Type{Base.Val{:theme}}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Int64, Int64, Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Int64, Int64, Int64, Int64}}}}, Type, Tuple{Tuple{Int64, Int64, Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Int64, Int64, Int64, Int64}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float32, Float32, Float32, Float32}}, Tuple{Float32, Float32, Float32, Float32}})
@precompile(Tuple{Type{Base.Val{:transformation}}})
@precompile(Tuple{Type{Base.Val{:model}}})
@precompile(Tuple{Type{Base.Val{:transform_func}}})
@precompile(Tuple{typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, MakieCore.Attributes, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Float64})
@precompile(Tuple{Type{ColorTypes.RGBA{Float32}}, Int64, Int64, Int64, Int64})
@precompile(Tuple{Type{Base.Val{14}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(MakieCore.theme), Makie.Scene})
@precompile(Tuple{typeof(Base.haskey), MakieCore.Attributes, Symbol})
@precompile(Tuple{typeof(Base.getproperty), Makie.Transformation, Symbol})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Transformation, Base.Val{:model}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Transformation, Base.Val{:transform_func}})
@precompile(Tuple{Type{Makie.Transformation}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Makie.Transformation}, Makie.Transformation})
@precompile(Tuple{typeof(Base.:(==)), StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, MakieCore.Automatic})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Makie.is2d), Makie.Scene})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Float32})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{3, Float32}}, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.HyperRectangle{3, Float32}}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Makie.foreach_transformed), Makie.var"#674#675"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, Function})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Makie.project), StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Makie.var"#674#675"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Float32})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Int64}, Pair{Symbol, String}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Int64}, Pair{Symbol, Bool}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGB{Float32}}, Pair{Symbol, ColorTypes.RGB{Float32}}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Nothing}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Tuple{Float32, Float32}}, Pair{Symbol, Tuple{Float32, Float32}}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Makie.Mouse.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Nothing}, Pair{Symbol, Tuple{Nothing, Nothing}}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Symbol}, Pair{Symbol, Makie.IntervalsBetween}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Symbol}, Pair{Symbol, Makie.IntervalsBetween}, Pair{Symbol, typeof(Base.identity)}, Pair{Symbol, typeof(Base.identity)}}})
@precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, String}, Type{Symbol}, Type{Any}})
@precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, Any}, Base.Dict{Symbol, String}})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Int64}, Pair{Symbol, String}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Int64}, Pair{Symbol, Bool}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGB{Float32}}, Pair{Symbol, ColorTypes.RGB{Float32}}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Nothing}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Tuple{Float32, Float32}}, Pair{Symbol, Tuple{Float32, Float32}}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Makie.Mouse.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Makie.Keyboard.Button}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Nothing}, Pair{Symbol, Tuple{Nothing, Nothing}}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Symbol}, Pair{Symbol, Makie.IntervalsBetween}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Symbol}, Pair{Symbol, Makie.IntervalsBetween}, Pair{Symbol, typeof(Base.identity)}, Pair{Symbol, typeof(Base.identity)}}, Int64})
@precompile(Tuple{typeof(Base._iterate), Base.Dict{Symbol, Any}, Int64})
@precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Any}, Symbol})
@precompile(Tuple{GridLayoutBase.var"##LayoutObservables#99", Nothing, Nothing, Nothing, Bool, Type{GridLayoutBase.LayoutObservables{G} where G}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Nothing})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#6#7"{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Observables.var"#6#7"{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#6#7"{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Union{Float64, Symbol}}, Vararg{Observables.Observable{Union{Float64, Symbol}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Union{Float64, Symbol}}, Vararg{Observables.Observable{Union{Float64, Symbol}}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Union{Float64, Symbol}}, Vararg{Observables.Observable{Union{Float64, Symbol}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{Float64, Symbol}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}}, Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}}, Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.zero_origin), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.zero_origin), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.zero_origin), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Makie.var"##Scene#77", Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Function, Makie.PixelCamera, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}, Makie.Scene})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#78#79", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#78#79", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#78#79", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Type{NamedTuple{(:events, :px_area, :clear, :camera, :camera_controls, :parent, :transformation, :theme, :current_screens), T} where T<:Tuple}, Tuple{Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, typeof(Makie.campixel!), Makie.EmptyCamera, Makie.Scene, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:events, :px_area, :clear, :camera, :camera_controls, :parent, :transformation, :theme, :current_screens), Tuple{Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, typeof(Makie.campixel!), Makie.EmptyCamera, Makie.Scene, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}}}, Type{Makie.Scene}})
@precompile(Tuple{Makie.var"##Scene#68", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Makie.Events, Bool, Function, typeof(Makie.campixel!), Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Makie.Scene, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}})
@precompile(Tuple{Type{NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{Makie.var"#current_default_theme##kw", NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(Makie.current_default_theme)})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(MakieCore.node_pairs), Tuple{Base.Broadcast.Extruded{Array{Pair{Symbol, Any}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Pair{Symbol, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.setindex!), Array{Pair{Symbol, Observables.Observable{Any}}, 1}, Pair{Symbol, Observables.Observable{Any}}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Pair{Symbol, Observables.Observable{Any}}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Pair{Symbol, Observables.Observable{Any}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(MakieCore.node_pairs), Tuple{Base.Broadcast.Extruded{Array{Pair{Symbol, Any}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{Makie.Scene}, Makie.Scene, Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Makie.Camera, Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Makie.SSAO, Array{Makie.AbstractLight, 1}})
@precompile(Tuple{typeof(Base.push!), Array{Makie.Scene, 1}, Makie.Scene})
@precompile(Tuple{typeof(Base.setproperty!), Makie.Scene, Symbol, Makie.Scene})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Scene, Base.Val{:parent}})
@precompile(Tuple{Type{Makie.Axis}, Makie.Figure, GridLayoutBase.LayoutObservables{GridLayoutBase.GridLayout}, Makie.Scene})
@precompile(Tuple{typeof(Makie.init_observable!), Any, Symbol, Any, Observables.Observable{T} where T})
@precompile(Tuple{Type{Observables.Observable{FreeTypeAbstraction.FTFont}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#1006#1007"{DataType}, String})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{FreeTypeAbstraction.FTFont}, String})
@precompile(Tuple{typeof(FreeTypeAbstraction.safe_free), FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{FreeTypeAbstraction.FTFont}, Symbol, FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Base.convert), Type{FreeTypeAbstraction.FTFont}, FreeTypeAbstraction.FTFont})
@precompile(Tuple{typeof(Makie.init_observable!), Any, Symbol, Any, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{ColorTypes.RGBA{Float32}}, Symbol})
@precompile(Tuple{Type{Observables.Observable{ColorTypes.RGBA{Float32}}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{Float64}, Float32})
@precompile(Tuple{Type{Observables.Observable{Float64}}, Any})
@precompile(Tuple{Type{Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Bool})
@precompile(Tuple{Type{Observables.Observable{Bool}}, Any})
@precompile(Tuple{Type{Observables.Observable{Any}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Function})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, String})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Makie.Keyboard.Button})
@precompile(Tuple{Type{Observables.Observable{Makie.Keyboard.Button}}, Any})
@precompile(Tuple{Type{Observables.Observable{ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#1006#1007"{DataType}, Symbol})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{ColorTypes.RGBA{Float32}}, Symbol, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Symbol})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{Float64}, Int64})
@precompile(Tuple{Type{Observables.Observable{Symbol}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGB{Float32}})
@precompile(Tuple{Type{Observables.Observable{Union{MakieCore.Automatic, Float64}}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Makie.IntervalsBetween})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Makie.Mouse.Button})
@precompile(Tuple{Type{Observables.Observable{Makie.Mouse.Button}}, Any})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Tuple{Float32, Float32}})
@precompile(Tuple{Type{Observables.Observable{Tuple{Float64, Float64}}}, Any})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float64, Float64}}, Tuple{Float32, Float32}})
@precompile(Tuple{Type{Observables.Observable{FreeTypeAbstraction.FTFont}}, Any})
@precompile(Tuple{typeof(Base.keys), MakieCore.Attributes})
@precompile(Tuple{typeof(Base.keys), Base.Dict{Symbol, Observables.Observable{T} where T}})
@precompile(Tuple{typeof(MakieCore.attributes), MakieCore.Attributes})
@precompile(Tuple{typeof(Base.fieldindex), DataType, Symbol, Bool})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Bool})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Int64, Int64, Int64}}}}, Type, Tuple{Tuple{Int64, Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Int64, Int64, Int64}}}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Vec{3, Float32}}, Tuple{Float32, Float32, Float32}, Int64})
@precompile(Tuple{Type{Base.Val{:translation}}})
@precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(3,)}})
@precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{3}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{3}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Tuple{StaticArrays.SOneTo{3}, Int64}, Tuple{StaticArrays.SOneTo{3}, Int64}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{3}, Int64})
@precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Tuple{StaticArrays.SOneTo{3}, Int64}}, Tuple{Tuple{StaticArrays.SOneTo{3}, Int64}}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{2}}})
@precompile(Tuple{Type{Base.Val{36}}})
@precompile(Tuple{Type{Base.Val{37}}})
@precompile(Tuple{typeof(Observables.to_value), Symbol})
@precompile(Tuple{Type{Base.Val{:text}}})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Symbol}})
@precompile(Tuple{Type{Base.Val{:textsize}}})
@precompile(Tuple{Type{Base.Val{:font}}})
@precompile(Tuple{Type{Base.Val{:align}}})
@precompile(Tuple{Type{Base.Val{:rotation}}})
@precompile(Tuple{Type{Base.Val{:justification}}})
@precompile(Tuple{Type{Base.Val{:lineheight}}})
@precompile(Tuple{Type{Base.Val{:color}}})
@precompile(Tuple{Type{Base.Val{:strokecolor}}})
@precompile(Tuple{Type{Base.Val{:strokewidth}}})
@precompile(Tuple{Type{Base.Val{:word_wrap_width}}})
@precompile(Tuple{Type{Base.Val{:px_area}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Makie.initialize_block!), Makie.Axis})
@precompile(Tuple{typeof(Makie.defaultlimits), Tuple{Nothing, Nothing}, Function, Function})
@precompile(Tuple{typeof(GridLayoutBase.BBox), Float64, Float64, Float64, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1194#1224"{Makie.Axis}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1194#1224"{Makie.Axis}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1194#1224"{Makie.Axis}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1195#1225"{Makie.Axis}}, Makie.var"#1195#1225"{Makie.Axis}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1195#1225"{Makie.Axis}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1101#1102", Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1101#1102", GeometryBasics.HyperRectangle{2, Float32}, GeometryBasics.HyperRectangle{2, Float32}, Nothing})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1101#1102", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1101#1102", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1101#1102", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"##Scene#77", Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Nothing, Makie.PixelCamera, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}, Makie.Scene})
@precompile(Tuple{Makie.var"##Scene#68", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Makie.Events, Bool, Function, Nothing, Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Makie.Scene, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{Type{Base.Val{:visible}}})
@precompile(Tuple{Type{Base.Val{:shading}}})
@precompile(Tuple{Type{Base.Val{:colormap}}})
@precompile(Tuple{Type{Base.Val{:colorrange}}})
@precompile(Tuple{Type{Base.Val{:overdraw}}})
@precompile(Tuple{Type{Base.Val{:fxaa}}})
@precompile(Tuple{Type{Base.Val{:transparency}}})
@precompile(Tuple{Type{Base.Val{:inspectable}}})
@precompile(Tuple{Type{Base.Val{:space}}})
@precompile(Tuple{Type{Base.Val{:linestyle}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :visible, :strokecolor, :colormap, :colorrange, :strokewidth, :shading, :fxaa, :linestyle, :overdraw, :transparency, :cycle, :inspectable, :space), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Bool, Bool, Nothing, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}, Observables.Observable{Any}, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:color, :visible, :strokecolor, :colormap, :colorrange, :strokewidth, :shading, :fxaa, :linestyle, :overdraw, :transparency, :cycle, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Bool, Bool, Nothing, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}, Observables.Observable{Any}, Symbol}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Observables.to_value), MakieCore.Automatic})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.poly_convert), Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}})
@precompile(Tuple{Type{NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle, :space), T} where T<:Tuple}, Tuple{Symbol, Float32, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Bool, Observables.Observable{Any}, Array{Pair{Symbol, Symbol}, 1}, Symbol}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle, :space), Tuple{Symbol, Float32, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Bool, Observables.Observable{Any}, Array{Pair{Symbol, Symbol}, 1}, Symbol}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :inspectable, :cycle, :space), Tuple{Symbol, Float32, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Bool, Observables.Observable{Any}, Array{Pair{Symbol, Symbol}, 1}, Symbol}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :backlight, :colormap, :colorrange, :interpolate, :shading, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Float32, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Bool, Array{Pair{Symbol, Symbol}, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{Type{NamedTuple{(:visible, :shading, :fxaa, :inspectable, :transparency, :space), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:visible, :shading, :fxaa, :inspectable, :transparency, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, Nothing, Symbol})
@precompile(Tuple{typeof(Base.map), Makie.var"#546#548", Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{Type{NamedTuple{(:pointtype, :facetype), T} where T<:Tuple}, Tuple{UnionAll, DataType}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{S, T} where T where S}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GeometryBasics.meta), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.Mesh{Dim, T, Element, V} where V<:AbstractArray{Element, 1} where Element<:GeometryBasics.Polytope{Dim, T} where T<:Number where Dim}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.merge), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#546#548", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#546#548", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#546#548", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, MakieCore.Attributes, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:pointtype, :facetype), T} where T<:Tuple}, Tuple{DataType, DataType}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_line_segments), Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Symbol})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Symbol})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Symbol}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Symbol}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Symbol}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Symbol}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Vec{3, Float32}}, Symbol, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#642#643", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}, Any})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{Float64}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{Bool}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Float64}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Float64}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Bool}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1196#1226"{Makie.Scene}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1196#1226"{Makie.Scene}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1196#1226"{Makie.Scene}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1194#1224"{Makie.Axis}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.:(<=)), Float32, Float32})
@precompile(Tuple{typeof(GridLayoutBase.BBox), Float32, Float32, Float32, Float32})
@precompile(Tuple{Makie.var"#1195#1225"{Makie.Axis}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Makie.validate_limits_for_scales), GeometryBasics.HyperRectangle{2, Float32}, Function, Function})
@precompile(Tuple{typeof(Base._all), Makie.var"#1255#1256"{typeof(Base.identity)}, Tuple{Float32, Float32}, Base.Colon})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1196#1226"{Makie.Scene}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{typeof(Base.identity), typeof(Base.identity)}})
@precompile(Tuple{typeof(Makie.camera), Makie.Scene})
@precompile(Tuple{typeof(MakieCore.hasfield), Makie.Scene, Base.Val{:transformation}})
@precompile(Tuple{typeof(Observables.onany), Function, Makie.Camera, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Makie.Camera, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.update_axis_camera), Tuple{Makie.Camera, Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{typeof(Makie.update_axis_camera), Tuple{Makie.Camera, Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.update_axis_camera), Tuple{Makie.Camera, Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1197#1227", Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1197#1227", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1197#1227", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1197#1227", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1198#1228", Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1198#1228", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1198#1228", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1198#1228", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1199#1229", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1199#1229", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1199#1229", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1200#1230", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1200#1230", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1200#1230", Observables.Observable{Bool}}, Tuple{Observables.Observable{Symbol}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Bool}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1201#1231", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1201#1231", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1201#1231", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1202#1232", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1202#1232", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1202#1232", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1203#1233", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1203#1233", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1203#1233", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1204#1234", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1204#1234", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1204#1234", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1205#1235", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1205#1235", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1205#1235", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1206#1236", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1206#1236", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1206#1236", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1207#1237", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1207#1237", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1207#1237", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1208#1238", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1208#1238", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1208#1238", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.xlimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.xlimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.xlimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.ylimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.ylimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.ylimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}})
@precompile(Tuple{Type{NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :ticklabelsize, :trimspine, :ticksize, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :ticklabelsize, :trimspine, :ticksize, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Type{Makie.LineAxis}, Makie.Scene})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(MakieCore.node_pairs), Tuple{Base.Broadcast.Extruded{Array{Pair{Symbol, Observables.Observable{T} where T}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Pair{Symbol, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Pair{Symbol, Observables.Observable{Any}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(MakieCore.node_pairs), Tuple{Base.Broadcast.Extruded{Array{Pair{Symbol, Observables.Observable{T} where T}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{FreeTypeAbstraction.FTFont}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{FreeTypeAbstraction.FTFont}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Union{MakieCore.Automatic, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Union{MakieCore.Automatic, Float64}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float32, Float32}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), typeof(Makie.calculate_horizontal_extends), Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.calculate_horizontal_extends), Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_horizontal_extends), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_horizontal_extends), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_horizontal_extends), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1156#1169", Observables.Observable{Bool}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1156#1169", Observables.Observable{Bool}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1156#1169", Observables.Observable{Bool}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1157#1170", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#1157#1170", Tuple{Float32, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Float32, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1157#1170", Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1157#1170", Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1157#1170", Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1158#1171", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#1158#1171", Bool})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Bool})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Bool}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1158#1171", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1158#1171", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1158#1171", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :color, :linestyle, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_real_ticklabel_align), Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_real_ticklabel_align), Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_real_ticklabel_align), Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Makie.calculate_real_ticklabel_align), MakieCore.Automatic, Bool, Bool, Float64})
@precompile(Tuple{typeof(Base.isequal), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Symbol, Symbol}}, Symbol, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1159#1172"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1159#1172"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1159#1172"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1159#1172"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Vararg{Any}})
@precompile(Tuple{typeof(Base.isfinite), Float32})
@precompile(Tuple{typeof(Base.isequal), Float32, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1160#1173"{Observables.Observable{Any}}, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1160#1173"{Observables.Observable{Any}}, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1160#1173"{Observables.Observable{Any}}, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1161#1174", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1161#1174", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1161#1174", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1161#1174", Bool, Float64, Float64})
@precompile(Tuple{typeof(Base.isequal), Float32, Float64})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Float32}, Symbol, Float64})
@precompile(Tuple{typeof(Base.convert), Type{Float32}, Float64})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1162#1175", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1162#1175", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1162#1175", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1162#1175", Float64, Float32, Bool, Float32, Float64, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1163#1176", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Float32}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1163#1176", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1163#1176", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Float32}}}}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Base.isequal), GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Point{2, Float32}}, Symbol, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1164#1177", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1164#1177", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1164#1177", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1164#1177", Bool, Bool, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1165#1178", Observables.Observable{Float32}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1165#1178", Observables.Observable{Float32}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1165#1178", Observables.Observable{Float32}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Bool}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1165#1178", Bool, Bool})
@precompile(Tuple{Type{NamedTuple{(:text, :textsize, :color, :visible, :align, :rotation, :font, :markerspace, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:text, :textsize, :color, :visible, :align, :rotation, :font, :markerspace, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:text, :textsize, :color, :visible, :align, :rotation, :font, :markerspace, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:text, :textsize, :color, :visible, :align, :rotation, :font, :markerspace, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Float32}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Float32}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float32}}}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{Type{Base.Val{15}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :markerspace, :offset, :word_wrap_width, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Symbol, Tuple{Float64, Float64}, Int64, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :markerspace, :offset, :word_wrap_width, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Symbol, Tuple{Float64, Float64}, Int64, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :space, :markerspace, :offset, :word_wrap_width, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Symbol, Tuple{Float64, Float64}, Int64, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :font, :strokecolor, :strokewidth, :align, :rotation, :textsize, :position, :justification, :lineheight, :markerspace, :offset, :word_wrap_width), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Int64, Tuple{Symbol, Symbol}, Float64, Int64, Tuple{Float64, Float64}, MakieCore.Automatic, Float64, Symbol, Tuple{Float64, Float64}, Int64}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Symbol, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Symbol, Float64}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), MakieCore.Attributes, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Makie.parent_scene), Makie.Scene})
@precompile(Tuple{typeof(Makie.transform_func_obs), Makie.Scene})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.notify), Observables.AbstractObservable{T} where T})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, String, Float64, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Float32, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Makie._get_glyphcollection_and_linesegments), String, Int64, Float32, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{Array{FreeTypeAbstraction.FTFont, 1}}, Array{Any, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Makie.GlyphCollection, 1}}, Symbol, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Makie.GlyphCollection, 1}}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Float32, 1}}, Symbol, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Float32, 1}}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Symbol, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGBA{Float32}, 1}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Symbol, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}, Function})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.scene_to_screen), Array{GeometryBasics.Point{2, Float32}, 1}, Makie.Scene})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Vec{4, Float32}}, GeometryBasics.Vec{3, Float32}, Float64})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Vec{4, Float32}, 1}, GeometryBasics.Vec{4, Float32}, Int64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#4#5"{Makie.var"#1803#1807"{Array{GeometryBasics.Point{2, Float32}, 1}}}, Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 1}}}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 1}}}, Int64})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 1}}}, Base.var"#4#5"{Makie.var"#1803#1807"{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{Type{NamedTuple{(:position,), T} where T<:Tuple}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.length), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.length), Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.map), Makie.var"#110#112", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#110#112", Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Symbol})
@precompile(Tuple{typeof(Base.length), Array{Float32, 1}})
@precompile(Tuple{Makie.var"#110#112", Array{Float32, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Float32, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Float32, 1}}, Symbol})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1166#1179", Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1166#1179", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Tuple{Float32, Float32}, MakieCore.Automatic, MakieCore.Automatic, Function})
@precompile(Tuple{typeof(Makie.get_ticks), MakieCore.Automatic, Function, MakieCore.Automatic, Float32, Float32})
@precompile(Tuple{typeof(Makie.get_tickvalues), MakieCore.Automatic, typeof(Base.identity), Float32, Float32})
@precompile(Tuple{typeof(Makie.get_ticklabels), MakieCore.Automatic, Array{Float64, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1166#1179", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1166#1179", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1166#1179", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1167#1180"{MakieCore.Attributes, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1167#1180"{MakieCore.Attributes, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1167#1180"{MakieCore.Attributes, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1168#1181"{MakieCore.Attributes, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}}, Observables.var"#callback#13"{Makie.var"#1168#1181"{MakieCore.Attributes, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1168#1181"{MakieCore.Attributes, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Observables.Observable{Bool}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.update_tick_obs), Tuple{Observables.Observable{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{typeof(Makie.update_tick_obs), Tuple{Observables.Observable{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.update_tick_obs), Tuple{Observables.Observable{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Observables.Observable{Bool}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.update_ticklabel_node), Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Observables.Observable{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Float32}, Observables.Observable{Bool}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{AbstractString, 1}}}}}, Observables.var"#callback#13"{typeof(Makie.update_ticklabel_node), Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Observables.Observable{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Float32}, Observables.Observable{Bool}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{AbstractString, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.update_ticklabel_node), Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Observables.Observable{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Float32}, Observables.Observable{Bool}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{AbstractString, 1}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{AbstractString, 1}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(Makie.create_linepoints), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Makie.create_linepoints), Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Float64, Bool, Array{GeometryBasics.Point{2, Float32}, 1}, Float64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.create_linepoints), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.create_linepoints), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.create_linepoints), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :visible, :color, :inspectable, :linestyle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool, Nothing}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_protrusion), Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_protrusion), Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_protrusion), Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Makie.calculate_protrusion), Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Bool, String, Bool, Float64, Float32, Bool, Float32, Float64, FreeTypeAbstraction.FTFont, FreeTypeAbstraction.FTFont, Float64, Float64})
@precompile(Tuple{typeof(Base.convert), Type{Float32}, Float32})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Tuple{Float32, Float32}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1166#1179", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Symbol, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Float64, 1}, Array{String, 1}}}, Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Array{Float64, 1}, Array{String, 1}}, Bool, typeof(Base.identity)})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Makie.var"#1146#1149"{Tuple{Float32, Float32}}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Makie.var"#1146#1149"{Tuple{Float32, Float32}}, Tuple{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.isequal), Array{Float32, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Float32, 1}}, Symbol, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Float32, 1}}, Array{Float64, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1167#1180"{MakieCore.Attributes, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1167#1180"{MakieCore.Attributes, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}}, Array{Float32, 1}, Makie.IntervalsBetween})
@precompile(Tuple{typeof(Makie.get_minor_tickvalues), Makie.IntervalsBetween, Function, Array{Float32, 1}, Float32, Float32})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1168#1181"{MakieCore.Attributes, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}, Any})
@precompile(Tuple{typeof(Makie.update_minor_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Tuple{Float32, Float32}, Tuple{Float32, Tuple{Float32, Float32}, Bool}, Array{Float32, 1}, typeof(Base.identity), Bool})
@precompile(Tuple{typeof(Base.isequal), Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{typeof(Makie.update_tick_obs), Tuple{Observables.Observable{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Observables.Observable{Bool}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Makie.update_tick_obs), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Array{GeometryBasics.Point{2, Float32}, 1}, Float64, Float64, Float64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Symbol, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{typeof(Makie.update_ticklabel_node), Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}}}, Observables.Observable{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Float32}, Observables.Observable{Bool}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{AbstractString, 1}}}}, Any})
@precompile(Tuple{typeof(Base.:(+)), Float64, Float32})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1159#1172"{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Any}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.create_linepoints), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.isequal), Array{AbstractString, 1}, Array{String, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{AbstractString, 1}}, Symbol, Array{String, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{AbstractString, 1}}, Array{String, 1}})
@precompile(Tuple{Type{NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :markerspace, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :markerspace, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :markerspace, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:align, :rotation, :textsize, :font, :color, :visible, :markerspace, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.first), Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.first), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{String}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{String, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.first), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{String, 1}})
@precompile(Tuple{typeof(Base._array_for), Type{GeometryBasics.Point{3, Float32}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Base.HasShape{1}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.last), Tuple{String, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{2, Float32}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Point{3, Float32}, 1}, GeometryBasics.Point{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{NamedTuple{(:text,), T} where T<:Tuple}, Tuple{Observables.Observable{Array{String, 1}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:text,), Tuple{Observables.Observable{Array{String, 1}}}}, MakieCore.Attributes})
@precompile(Tuple{Type{NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:text,), Tuple{Observables.Observable{Array{String, 1}}}}, NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{String, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{String, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Array{String, 1}, Float64, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Float64, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1802#1806"{Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.RefValue{Array{Int64, 1}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}, Function})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Makie.scene_to_screen), Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Scene})
@precompile(Tuple{Type{NamedTuple{(:position,), T} where T<:Tuple}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:position,), Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :offset, :markerspace, :inspectable, :linewidth, :diffuse, :position), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Observables.on), Any, Observables.AbstractObservable{T} where T})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}}, Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}}})
@precompile(Tuple{typeof(Makie.boundingbox), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.boundingbox), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.boundingbox), MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{GeometryBasics.Point{3, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Makie.to_rotation), Float64})
@precompile(Tuple{typeof(Makie.boundingbox), Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Makie.Quaternion{Float64}})
@precompile(Tuple{typeof(Makie.isfinite_rect), GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Makie.boundingbox), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.parent), Makie.Transformation})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(Base.foreach), Makie.var"#677#679"{Makie.var"#719#720", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}})
@precompile(Tuple{typeof(Base.:(*)), StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{GeometryBasics.var"##s21#25", Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#26#36", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryBasics.var"#26#36"}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, Float32}}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.height), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Float32}, Symbol, Float32})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1160#1173"{Observables.Observable{Any}}, Tuple{Observables.Observable{Float32}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1160#1173"{Observables.Observable{Any}}, Float32, MakieCore.Automatic})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Float32})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1162#1175", Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1163#1176", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Bool}, Observables.Observable{Float32}}}, Any})
@precompile(Tuple{Makie.var"#1163#1176", Tuple{Float32, Tuple{Float32, Float32}, Bool}, Bool, Float32})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float32}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}, Symbol, Tuple{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.Point{2, Float32}}}, Tuple{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float32}}}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Symbol, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Symbol, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}, Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Point{3, Float32}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.:(!=)), Array{String, 1}, Array{String, 1}})
@precompile(Tuple{typeof(Base.:(!=)), Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_protrusion), Observables.Observable{Float32}}, Tuple{Observables.Observable{Tuple{Observables.Observable{Bool}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Float32}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Bool})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Bool})
@precompile(Tuple{typeof(Base.convert), Type{Array{String, 1}}, Array{AbstractString, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#6#7"{Observables.Observable{Array{String, 1}}}}, Observables.var"#6#7"{Observables.Observable{Array{String, 1}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#6#7"{Observables.Observable{Array{String, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :trimspine, :ticklabelsize, :ticksize, :flip_vertical_label, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:endpoints, :limits, :flipped, :ticklabelrotation, :ticklabelalign, :labelsize, :labelpadding, :ticklabelpad, :labelvisible, :label, :labelfont, :ticklabelfont, :ticklabelcolor, :labelcolor, :tickalign, :ticklabelspace, :ticks, :tickformat, :ticklabelsvisible, :ticksvisible, :spinevisible, :spinecolor, :spinewidth, :trimspine, :ticklabelsize, :ticksize, :flip_vertical_label, :reversed, :tickwidth, :tickcolor, :minorticksvisible, :minortickalign, :minorticksize, :minortickwidth, :minortickcolor, :minorticks, :scale), Tuple{Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Tuple{Symbol, Symbol}}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Union{MakieCore.Automatic, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Type{Makie.LineAxis}, Makie.Scene})
@precompile(Tuple{typeof(GeometryBasics.width), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1209#1239", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1209#1239", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float64}, Observables.Observable{Symbol}}})
@precompile(Tuple{Makie.var"#1209#1239", GeometryBasics.HyperRectangle{2, Int64}, Float64, Symbol})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1209#1239", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1209#1239", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1209#1239", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1210#1240", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1210#1240", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{Makie.var"#1210#1240", GeometryBasics.HyperRectangle{2, Int64}, Float64, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1210#1240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1210#1240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1210#1240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}}})
@precompile(Tuple{Type{Ref{T} where T}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Makie.mirror_ticks), Array{GeometryBasics.Point{2, Float32}, 1}, Float64, Float64, Base.RefValue{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Symbol})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.mirror_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Base.RefValue{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Symbol}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.mirror_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Base.RefValue{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.mirror_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Base.RefValue{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1211#1241", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1211#1241", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1211#1241", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1212#1242", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1212#1242", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1212#1242", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1213#1243", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1213#1243", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1213#1243", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1214#1244", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1214#1244", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1214#1244", Observables.Observable{Bool}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1215#1245"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Makie.var"#1215#1245"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1215#1245"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1216#1246"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Makie.var"#1216#1246"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1216#1246"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1217#1247"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}}, Makie.var"#1217#1247"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1217#1247"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1218#1248"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}}, Makie.var"#1218#1248"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1218#1248"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}}})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), Makie.var"#1219#1249", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1219#1249", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}}})
@precompile(Tuple{Makie.var"#1219#1249", GeometryBasics.HyperRectangle{2, Int64}, Float64, Symbol, Symbol, Float32})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1219#1249", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1219#1249", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1219#1249", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1220#1250", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1220#1250", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1220#1250", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Symbol}}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{FreeTypeAbstraction.FTFont}})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, String, Float64, FreeTypeAbstraction.FTFont, Tuple{Symbol, Symbol}, Float64, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{Base.var"#map##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, typeof(Base.map), typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}, Observables.Observable{Float64}, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.calculate_title_position), GeometryBasics.HyperRectangle{2, Int64}, Float64, Float64, Symbol, Symbol, Float32, Float64, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.iswhitespace), String})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}, Observables.Observable{Float64}, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}, Observables.Observable{Float64}, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}, Observables.Observable{Float64}, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.compute_protrusions), Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.compute_protrusions), Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.compute_protrusions), Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Makie.compute_protrusions), String, Float64, Float64, Bool, Float64, Bool, Bool, Bool, Bool, Float32, Float32, Symbol, Symbol, String, Bool, Float64, Float64, Float64, Float64, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{GeometryBasics.Point{2, Float32}, 1}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Makie.to_ndim), Tuple{Base.RefValue{Type{GeometryBasics.Point{3, Float32}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}}})
@precompile(Tuple{typeof(Base.getproperty), GeometryBasics.HyperRectangle{3, Float32}, Symbol})
@precompile(Tuple{typeof(Base.getindex), GeometryBasics.Vec{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.:(+)), Float32, Float64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase._reporteddimensionsobservable), Observables.Observable{GridLayoutBase.Dimensions}}, Tuple{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Tuple{Bool, Bool}}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{GridLayoutBase.var"#107#109"{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Base.RefValue{Union{Nothing, GridLayoutBase.GridContent{GridLayoutBase.GridLayout}}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GridLayoutBase.Dimensions}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1101#1102", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.isequal), GeometryBasics.HyperRectangle{2, Int64}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, String})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, String})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, Symbol, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Makie.GlyphCollection, 1}}}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Makie.GlyphCollection, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Makie.GlyphCollection, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Tuple{Observables.Observable{Tuple{Array{Makie.GlyphCollection, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{Float32, 1}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Array{Float32, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.compute_protrusions), Observables.Observable{GridLayoutBase.RectSides{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Float64}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GridLayoutBase.RectSides{Float32}}, Symbol, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GridLayoutBase.RectSides{Float32}}, GridLayoutBase.RectSides{Float32}})
@precompile(Tuple{Observables.var"#callback#13"{GridLayoutBase.var"#106#108"{Observables.Observable{GridLayoutBase.Dimensions}, Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Observables.Observable{Tuple{Union{Nothing, Float32}, Union{Nothing, Float32}}}, Observables.Observable{Any}, Observables.Observable{GridLayoutBase.RectSides{Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Tuple{Float32, Float32}}}}, Any})
@precompile(Tuple{typeof(Makie.register_events!), Makie.Axis, Makie.Scene})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1089#1091"{Makie.Scene, Makie.var"#is_mouse_over_relevant_area#1086"{Makie.Scene, Tuple{}}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Module}}, Makie.var"#1089#1091"{Makie.Scene, Makie.var"#is_mouse_over_relevant_area#1086"{Makie.Scene, Tuple{}}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Module}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1089#1091"{Makie.Scene, Makie.var"#is_mouse_over_relevant_area#1086"{Makie.Scene, Tuple{}}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Module}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1090#1092"{Makie.Scene, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Float64}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Float64, Module}}, Makie.var"#1090#1092"{Makie.Scene, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Float64}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Float64, Module}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1090#1092"{Makie.Scene, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Float64}, Base.RefValue{Float64}, Base.RefValue{Bool}, Base.RefValue{Bool}, Base.RefValue{Union{Nothing, Makie.Mouse.Button}}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{GeometryBasics.Point{2, Float32}}, Base.RefValue{Makie.Mouse.Action}, Observables.Observable{Makie.MouseEvent}, Float64, Module}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1189#1191"{Makie.Scene, Observables.Observable{Makie.ScrollEvent}}}, Makie.var"#1189#1191"{Makie.Scene, Observables.Observable{Makie.ScrollEvent}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1189#1191"{Makie.Scene, Observables.Observable{Makie.ScrollEvent}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1190#1192"{Makie.Events, Observables.Observable{Makie.KeysEvent}}}, Makie.var"#1190#1192"{Makie.Events, Observables.Observable{Makie.KeysEvent}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1190#1192"{Makie.Events, Observables.Observable{Makie.KeysEvent}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.MouseEvent}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.MouseEvent}}}}, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.MouseEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.MouseEvent}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.ScrollEvent}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.ScrollEvent}}}}, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.ScrollEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.ScrollEvent}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.KeysEvent}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.KeysEvent}}}}, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.KeysEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{typeof(Makie.process_axis_event), Tuple{Makie.Axis, Observables.Observable{Makie.KeysEvent}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Vararg{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie._selection_vertices), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie._selection_vertices), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie._selection_vertices), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.plotfunc), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{3}}})
@precompile(Tuple{typeof(Base.length), Core.SimpleVector})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{3}}})
@precompile(Tuple{StaticArraysCore.var"##s4#4", Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base.ntuple), StaticArraysCore.var"#5#6", Base.Val{3}})
@precompile(Tuple{GeometryBasics.var"##s19#65", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#66#75", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryBasics.var"#66#75"}})
@precompile(Tuple{typeof(Base.cmp), Int64, Int64})
@precompile(Tuple{GeometryBasics.var"##s19#27", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#28#37", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryBasics.var"#28#37"}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(Core.Compiler.return_type), Any, DataType})
@precompile(Tuple{Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Makie.var"#156#158"{Array{Int64, 2}}, Tuple{Base.Broadcast.Extruded{Base.UnitRange{Int64}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Makie.var"#156#158"{Array{Int64, 2}}, Tuple{Base.Broadcast.Extruded{Base.UnitRange{Int64}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:normals,), Tuple{Array{GeometryBasics.Vec{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.tuple_type_cons), Type{GeometryBasics.Point{3, Float32}}, Type{Tuple{GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{Base.var"##s78#211", Any, Any, Any})
@precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.UnitRange{Int64}, Base.HasShape{1}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#212#214"{DataType, Array{Int64, 1}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#212#214"{DataType, Array{Int64, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#212#214"{DataType, Array{Int64, 1}}}, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
@precompile(Tuple{typeof(GeometryBasics.normal_mesh), Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1221#1251"{Makie.Axis}}, Makie.var"#1221#1251"{Makie.Axis}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1221#1251"{Makie.Axis}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1222#1252"{Makie.Axis, Observables.Observable{Bool}}}, Makie.var"#1222#1252"{Makie.Axis, Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1222#1252"{Makie.Axis, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1223#1253"{Makie.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}, Observables.var"#callback#13"{Makie.var"#1223#1253"{Makie.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1223#1253"{Makie.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}})
@precompile(Tuple{Makie.var"#1221#1251"{Makie.Axis}, Tuple{Nothing, Nothing}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Observables.to_value), Bool})
@precompile(Tuple{Makie.var"#1222#1252"{Makie.Axis, Observables.Observable{Bool}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.intersect!), Base.Set{Makie.Axis}, Array{Makie.Axis, 1}})
@precompile(Tuple{typeof(Base.vectorfilter), Type, Base.var"#131#132"{typeof(Base.in), typeof(Base.pop!), Base.Set{Makie.Axis}}, Array{Makie.Axis, 1}})
@precompile(Tuple{typeof(Base.collect), Type{Makie.Axis}, Base.Generator{Base.Iterators.Filter{Base.var"#133#134"{Base.var"#131#132"{typeof(Base.in), typeof(Base.pop!), Base.Set{Makie.Axis}}}, Array{Makie.Axis, 1}}, typeof(Base.identity)}})
@precompile(Tuple{typeof(Base.setdiff!), Base.Set{Makie.Axis}, Array{Makie.Axis, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1223#1253"{Makie.Axis}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, Any})
@precompile(Tuple{typeof(Base.isequal), GeometryBasics.HyperRectangle{2, Float32}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{typeof(Makie.update_axis_camera), Tuple{Makie.Camera, Observables.Observable{Any}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{typeof(Makie.update_axis_camera), Makie.Camera, Tuple{typeof(Base.identity), typeof(Base.identity)}, GeometryBasics.HyperRectangle{2, Float32}, Bool, Bool})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.xlimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, Any})
@precompile(Tuple{typeof(Makie.xlimits), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Float32, Float32}, Tuple{Float32, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.ylimits), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, Any})
@precompile(Tuple{typeof(Makie.ylimits), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie._selection_vertices), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Int64, 2}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}, Symbol, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Int64, 2}}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Symbol, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.filter), Makie.var"#997#999"{Makie.Axis}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Makie.connect_block_layoutobservables!), Any, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.getproperty), Makie.Axis, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#17#18"{Observables.Observable{Any}}}, Observables.var"#17#18"{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#17#18"{Observables.Observable{Any}}}})
@precompile(Tuple{Observables.var"#17#18"{Observables.Observable{Any}}, Nothing})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Nothing})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Nothing})
@precompile(Tuple{Observables.var"#callback#13"{GridLayoutBase.var"#104#105"{Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Tuple{Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}, Observables.Observable{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Symbol, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}, Union{Nothing, Float32, GridLayoutBase.Auto, GridLayoutBase.Fixed, GridLayoutBase.Relative}}}, Tuple{Nothing, Nothing}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#17#18"{Observables.Observable{Bool}}}, Observables.var"#17#18"{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#17#18"{Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Bool}})
@precompile(Tuple{Observables.var"#17#18"{Observables.Observable{Bool}}, Bool})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Bool, Bool}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Bool, Bool}}, Symbol, Tuple{Bool, Bool}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#17#18"{Observables.Observable{Union{Float64, Symbol}}}}, Observables.var"#17#18"{Observables.Observable{Union{Float64, Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#17#18"{Observables.Observable{Union{Float64, Symbol}}}}})
@precompile(Tuple{Observables.var"#17#18"{Observables.Observable{Union{Float64, Symbol}}}, Symbol})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Union{Float64, Symbol}}, Observables.Observable{Union{Float64, Symbol}}}}, Any})
@precompile(Tuple{Observables.var"#15#16"{typeof(GridLayoutBase.align_shift_tuple), Observables.Observable{Tuple{Float32, Float32}}}, Symbol, Vararg{Symbol}})
@precompile(Tuple{typeof(GridLayoutBase.align_shift_tuple), Symbol, Symbol})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Float32, Float32}}, Symbol, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float32, Float32}}, Tuple{Float32, Float32}})
@precompile(Tuple{Observables.var"#17#18"{Observables.Observable{Any}}, GridLayoutBase.Inside})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, GridLayoutBase.Inside})
@precompile(Tuple{typeof(Base.in), Makie.Axis, Array{Any, 1}})
@precompile(Tuple{typeof(Makie.current_axis!), Makie.Figure, Makie.Axis})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Any}, Makie.Axis})
@precompile(Tuple{typeof(Base.setindex!), Makie.Figure, Makie.Axis, Int64, Int64})
@precompile(Tuple{typeof(GridLayoutBase.reporteddimensionsobservable), Makie.Axis})
@precompile(Tuple{typeof(Core.convert), Type{GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis}}, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis}}})
@precompile(Tuple{typeof(Base.isnothing), Function})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.Axis, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.Axis, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.suggestedbboxobservable), Makie.Axis})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Symbol, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.HyperRectangle{2, Int64}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#78#79", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#78#79", GeometryBasics.HyperRectangle{2, Int64}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#179#181", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#179#181", GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#180#182", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#180#182", GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Vec{2, Float32}}, Symbol, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{2, Float32}}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1197#1227", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#1197#1227", Symbol, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.isequal), Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Symbol, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_horizontal_extends), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.isequal), Tuple{Float32, Tuple{Float32, Float32}, Bool}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Symbol, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1156#1169", Observables.Observable{Bool}}, Tuple{Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}}}, Any})
@precompile(Tuple{Makie.var"#1156#1169", Tuple{Float32, Tuple{Float32, Float32}, Bool}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Bool}, Symbol, Bool})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_real_ticklabel_align), Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1164#1177", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1165#1178", Observables.Observable{Float32}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Symbol, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{GeometryBasics.Point{3, Float32}, 1}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Symbol, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.mirror_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Base.RefValue{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Symbol}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1215#1245"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#1217#1247"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1198#1228", Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#1198#1228", Symbol, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1216#1246"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#1218#1248"{Makie.Axis, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Makie.Scene}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1209#1239", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1210#1240", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1219#1249", Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_title_position), Observables.Observable{GeometryBasics.Point{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Float64}, Observables.Observable{Float64}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{Float32}, Observables.Observable{Float64}, Makie.Axis, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}, Symbol, Tuple{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.poly, Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Int64, Int64})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Symbol, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}, Symbol, Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}, Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}, Any})
@precompile(Tuple{typeof(Makie.poly_convert), Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Symbol, Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Symbol, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#546#548", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Symbol, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Symbol, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Symbol}, Symbol, Symbol})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Symbol})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Symbol})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Symbol})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{Base.Val{:cycle}}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.Point{2, Float32}, Float32, Float32, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot!#1279", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.Point{2, Float32}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}})
@precompile(Tuple{Type{Makie.Cycle}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{Makie.arc, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base._array_for), Type{Array{ColorTypes.RGBA{Float32}, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.ndims), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Array{ColorTypes.RGBA{Float32}, 1}, Base.Generator{Array{Symbol, 1}, Makie.var"#1268#1277"{MakieCore.Attributes}}, Int64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.var"#1269#1278", Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}})
@precompile(Tuple{Type{Tuple}, Base.Generator{Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Makie.var"#1269#1278"}})
@precompile(Tuple{Type{Base.IteratorsMD.CartesianIndices{N, R} where R<:Tuple{Vararg{Base.OrdinalRange{Int64, Int64}, N}} where N}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.length), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}})
@precompile(Tuple{typeof(Base.getindex), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}, Int64})
@precompile(Tuple{Type{Tuple}, Base.IteratorsMD.CartesianIndex{1}})
@precompile(Tuple{typeof(Base.getindex), Array{Array{ColorTypes.RGBA{Float32}, 1}, 1}, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGBA{Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, ColorTypes.RGBA{Float32}, Symbol})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Makie.expandlimits), Tuple{Float32, Float32}, Float64, Float64, typeof(Base.identity)})
@precompile(Tuple{typeof(Base.:(<=)), Float64, Float64})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{Float32, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1157#1170", Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{String, 1}}, Symbol, Array{String, 1}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Array{String, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{String, 1}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Array{String, 1}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Array{String, 1}}}, Array{AbstractString, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{String, 1}}, Symbol, Array{AbstractString, 1}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{typeof(Makie.get_scene), Makie.FigureAxisPlot})
@precompile(Tuple{typeof(Base.Broadcast._bcsm), Base.OneTo{Int64}, Base.OneTo{Int64}})
@precompile(Tuple{typeof(Base.Broadcast.axistype), Base.OneTo{Int64}, Base.OneTo{Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{Type{GLFW.Monitor}, Ptr{Nothing}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{Nothing}}, Int64})
@precompile(Tuple{Type{NamedTuple{(:minfilter, :x_repeat), T} where T<:Tuple}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}}, Ptr{Nothing}})
@precompile(Tuple{GLMakie.GLAbstraction.var"##s63#29", Any, Any, Any})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), Type})
@precompile(Tuple{typeof(Base.checkbounds), String, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}})
@precompile(Tuple{GLMakie.GLAbstraction.var"##s63#28", Any, Any, Any})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}})
@precompile(Tuple{typeof(Base.typejoin_union_tuple), DataType})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:minfilter, :x_repeat), Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Symbol, Tuple{Symbol, Symbol}, NamedTuple{(:minfilter, :x_repeat), Tuple{Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:minfilter, :x_repeat), Tuple{Symbol, Symbol}}, Symbol})
@precompile(Tuple{typeof(Base.structdiff), NamedTuple{(:minfilter, :x_repeat), Tuple{Symbol, Symbol}}, Type{NamedTuple{(:internalformat, :texturetype, :format, :mipmap), T} where T<:Tuple}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{GeometryBasics.Vec{2, UInt32}}}, Ptr{Nothing}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, UInt32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{GeometryBasics.Vec{2, UInt32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{GeometryBasics.Vec{2, UInt32}}})
@precompile(Tuple{Type{Ptr{GLMakie.GLAbstraction.DepthStencil_24_8}}, Ptr{Nothing}})
@precompile(Tuple{Type{NamedTuple{(:minfilter, :x_repeat, :internalformat, :format), T} where T<:Tuple}, Tuple{Symbol, Symbol, UInt32, UInt32}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:minfilter, :x_repeat, :internalformat, :format), Tuple{Symbol, Symbol, UInt32, UInt32}}, Symbol})
@precompile(Tuple{typeof(Base.structdiff), NamedTuple{(:minfilter, :x_repeat, :internalformat, :format), Tuple{Symbol, Symbol, UInt32, UInt32}}, Type{NamedTuple{(:internalformat, :texturetype, :format, :mipmap), T} where T<:Tuple}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{ColorTypes.RGBA{Float16}}}, Ptr{Nothing}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{ColorTypes.RGBA{Float16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{ColorTypes.RGBA{Float16}}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{FixedPointNumbers.Normed{UInt8, 8}}}, Ptr{Nothing}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, UInt32})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{GeometryBasics.Vec{3, Float32}}}, Ptr{Nothing}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Ptr{GeometryBasics.Vec{4, Float16}}}, Ptr{Nothing}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{4, Float16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{GeometryBasics.Vec{4, Float16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{GeometryBasics.Vec{4, Float16}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Float64})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float64}, Base.IteratorsMD.CartesianIndex{0}})
@precompile(Tuple{typeof(LinearAlgebra.norm), Float64})
@precompile(Tuple{typeof(Base.float), Float64})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(LinearAlgebra.norm), typeof(Base.max)}, Type{Float64}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Base.ComposedFunction{typeof(Base.float), typeof(LinearAlgebra.norm)}, typeof(Base.:(+))}, Type{Float64}})
@precompile(Tuple{typeof(Base.abs), Float64})
@precompile(Tuple{typeof(Base.abs2), Float64})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(LinearAlgebra.norm), typeof(Base.min)}, Type{Float64}})
@precompile(Tuple{typeof(Base.prevfloat), Float64})
@precompile(Tuple{typeof(Base.eps), Float64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GLMakie.var"#81#87"{Float32, Float32, Int64}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, GLMakie.var"#81#87"{Float32, Float32, Int64}}, Base.HasShape{1}})
@precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Float64, Base.Val{2}})
@precompile(Tuple{typeof(Base.:(*)), Float32, Float64})
@precompile(Tuple{typeof(Base.Iterators.product), Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}}})
@precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GLMakie.var"#82#88", Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
@precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Int64})
@precompile(Tuple{typeof(Base.cconvert), Type, Tuple{VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}, VecElement{UInt64}}})
@precompile(Tuple{typeof(Base.Broadcast.extrude), Float64})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float64}, Int64})
@precompile(Tuple{typeof(Base.getindex), Float64})
@precompile(Tuple{StaticArrays.var"##s25#302", Any, Any, Any, Any})
@precompile(Tuple{StaticArrays.var"##s25#158", Any, Any, Any})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{DataType}})
@precompile(Tuple{StaticArrays.var"#159#162", Type})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Type{Array{Expr, 1}}, UndefInitializer, Int64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#161#164"{Int64}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#161#164"{Int64}}})
@precompile(Tuple{typeof(Base.setindex!), Array{Expr, 1}, Expr, Int64})
@precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, GLMakie.var"#82#88"}, Base.HasShape{2}})
@precompile(Tuple{typeof(Base.Iterators._piterate), Base.UnitRange{Int64}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.map), Base.Iterators.var"#20#21", Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
@precompile(Tuple{typeof(Base.to_shape), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
@precompile(Tuple{typeof(Base.first), Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
@precompile(Tuple{typeof(Base.tail), Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
@precompile(Tuple{typeof(Base.Iterators._piterate1), Tuple{Base.UnitRange{Int64}}, Tuple{Tuple{Int64, Int64}}})
@precompile(Tuple{typeof(Base.first), Tuple{Base.UnitRange{Int64}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, LinearAlgebra.UniformScaling{Bool}})
@precompile(Tuple{typeof(Base.promote_typejoin_union), Type{Int32}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Tuple{Symbol, UInt32, Int32}, 1}}})
@precompile(Tuple{Base.Iterators.var"#1#2"{Tuple{Array{String, 1}, Array{String, 1}}}, Int64})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataType, 1}}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{String, 1}, Array{String, 1}}}, Int64})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.HasShape{1}, 1}}})
@precompile(Tuple{typeof(Printf.base), Type})
@precompile(Tuple{typeof(Base.:(<<)), UInt32, UInt32})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Int32})
@precompile(Tuple{typeof(Base.:(/)), FixedPointNumbers.Normed{UInt8, 8}, Int64})
@precompile(Tuple{typeof(Base.FastMath.minmax_fast), Int64, Int64})
@precompile(Tuple{typeof(Base.FastMath.min_fast), Int64, Int64})
@precompile(Tuple{typeof(Base.FastMath.max_fast), Int64, Int64})
@precompile(Tuple{typeof(Base.:(<=)), Float32, Int64})
@precompile(Tuple{Type{FixedPointNumbers.Normed{UInt8, 8}}, UInt8, Int64})
@precompile(Tuple{typeof(Base.:(+)), FixedPointNumbers.Normed{UInt8, 8}, Float32})
@precompile(Tuple{typeof(Base.:(<)), Int64, Float32})
@precompile(Tuple{typeof(ColorTypes._rem), Int64, Type{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{typeof(Base.convert), Type{FixedPointNumbers.Normed{UInt8, 8}}, FixedPointNumbers.Normed{UInt8, 8}})
@precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}, ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{Type{Base.IteratorsMD.CartesianIndex{N} where N}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{NamedTuple{(:priority,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{Type{Observables.Consume}, Bool})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:priority,), Tuple{Int64}}, Symbol})
@precompile(Tuple{Type{Base.Val{:events}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Int32}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{2}})
@precompile(Tuple{typeof(Base.ntuple), StaticArraysCore.var"#5#6", Base.Val{2}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Float64}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Float64}}})
@precompile(Tuple{GeometryBasics.var"##s7#31", Any, Any, Any, Any, Type, Any, Any})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Tuple{Int64}})
@precompile(Tuple{StaticArrays.var"##s25#148", Any, Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#149#151", Core.SimpleVector})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Core.SimpleVector, StaticArrays.var"#149#151"}})
@precompile(Tuple{StaticArrays.var"#149#151", Type})
@precompile(Tuple{typeof(Base._array_for), Type{Tuple{Int64}}, Base.HasLength, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Tuple{Int64}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Int64}, 1}, Tuple{Int64}, Base.Generator{Core.SimpleVector, StaticArrays.var"#149#151"}, Int64})
@precompile(Tuple{typeof(Base.similar), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}, Type{Expr}})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64}, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}, Base.Iterators.Enumerate{Array{Tuple{Int64}, 1}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.Iterators.Enumerate{Array{Tuple{Int64}, 1}}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.Iterators.Enumerate{Array{Tuple{Int64}, 1}}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Base.IteratorsMD.CartesianIndices{1, Tuple{Base.OneTo{Int64}}}}, Tuple{Int64, Base.IteratorsMD.CartesianIndex{1}}})
@precompile(Tuple{StaticArrays.var"##s25#169", Any, Any, Any, Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#170#172", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#170#172"}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#171#173"{Int64}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#171#173"{Int64}}})
@precompile(Tuple{Type{Base.Val{:children}}})
@precompile(Tuple{typeof(GLFW._WindowRefreshCallbackWrapper), GLFW.Window})
@precompile(Tuple{typeof(GLFW._KeyCallbackWrapper), GLFW.Window, GLFW.Key, Int32, GLFW.Action, Int32})
@precompile(Tuple{typeof(GLFW._CursorEnterCallbackWrapper), GLFW.Window, Int32})
@precompile(Tuple{typeof(GLFW._WindowFocusCallbackWrapper), GLFW.Window, Int32})
@precompile(Tuple{typeof(GLFW._DropCallbackWrapper), GLFW.Window, Int32, Ptr{Base.Cstring}})
@precompile(Tuple{typeof(GLFW._CharCallbackWrapper), GLFW.Window, UInt32})
@precompile(Tuple{typeof(GLFW._ScrollCallbackWrapper), GLFW.Window, Float64, Float64})
@precompile(Tuple{typeof(GLFW._MouseButtonCallbackWrapper), GLFW.Window, GLFW.MouseButton, GLFW.Action, Int32})
@precompile(Tuple{typeof(GLFW._WindowCloseCallbackWrapper), GLFW.Window})
@precompile(Tuple{typeof(Makie.backend_display), Makie.Scene})
@precompile(Tuple{typeof(Base.promote_typeof), Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Tuple{UInt32, Int64}, Tuple{UInt32, Bool}, Vararg{Tuple{UInt32, Bool}}})
@precompile(Tuple{typeof(Base.promote_typeof), Tuple{UInt32, Bool}, Tuple{UInt32, Bool}, Vararg{Tuple{UInt32, Bool}}})
@precompile(Tuple{Type{Array{Tuple{UInt32, Integer}, 1}}, UndefInitializer, Int64})
@precompile(Tuple{typeof(Base.copyto!), Array{Tuple{UInt32, Integer}, 1}, Tuple{Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Bool}, Tuple{UInt32, Bool}, Tuple{UInt32, Bool}}})
@precompile(Tuple{typeof(Base.promote_typeof), Tuple{UInt32, Int64}, Tuple{UInt32, Int32}, Vararg{Any}})
@precompile(Tuple{typeof(Base.copyto!), Array{Tuple{UInt32, Integer}, 1}, Tuple{Tuple{UInt32, Int64}, Tuple{UInt32, Int64}, Tuple{UInt32, Int32}, Tuple{UInt32, UInt32}}})
@precompile(Tuple{typeof(GLFW.WindowHint), UInt32, Int64})
@precompile(Tuple{typeof(GLFW.WindowHint), UInt32, Int32})
@precompile(Tuple{typeof(GLFW.WindowHint), UInt32, UInt32})
@precompile(Tuple{typeof(GLFW.WindowHint), UInt32, Bool})
@precompile(Tuple{typeof(FileIO.match), Base.IOStream, Array{UInt8, 1}})
@precompile(Tuple{Type{FileIO.File{FileIO.DataFormat{:PNG}, Name} where Name}, String})
@precompile(Tuple{typeof(Base.require), Base.PkgId})
@precompile(Tuple{typeof(ImageIO.load), FileIO.File{FileIO.DataFormat{:PNG}, String}})
@precompile(Tuple{LazyModules.LazyFunction, String})
@precompile(Tuple{Type{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, N} where N}, UndefInitializer, UInt32, UInt32})
@precompile(Tuple{typeof(ImageIO.enforce_canonical_type), FileIO.File{FileIO.DataFormat{:PNG}, String}, Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(FileIO.load), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Filesystem.joinpath), Tuple{Base.RefValue{String}, Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Type{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}}})
@precompile(Tuple{typeof(Base.setindex!), Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}, Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(FileIO.load), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.Filesystem.joinpath), Tuple{Base.RefValue{String}, Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.map), Function, Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.var"#951#952", Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}})
@precompile(Tuple{typeof(ColorTypes.ccolor), Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}, Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}}})
@precompile(Tuple{typeof(Base.:(/)), UInt8, UInt16})
@precompile(Tuple{typeof(Base.collect_similar), Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}, Base.Generator{Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt16, 16}}, 2}, 1}, Makie.var"#951#952"}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{Tuple{UInt8, UInt8, UInt8, UInt8}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{Tuple{UInt8, UInt8, UInt8, UInt8}}}, Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.reinterpret), Tuple{Base.RefValue{Type{Tuple{UInt8, UInt8, UInt8, UInt8}}}, Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Int64}, UInt64})
@precompile(Tuple{typeof(Base.datatype_alignment), DataType})
@precompile(Tuple{typeof(Base.:(!=)), UInt64, Int64})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.reinterpret), Tuple{Base.RefValue{Type{Tuple{UInt8, UInt8, UInt8, UInt8}}}, Array{Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, 1}}}})
@precompile(Tuple{Base.var"##s880#562", Any, Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Symbol, Expr, Vararg{Expr}})
@precompile(Tuple{typeof(Base.isperm), Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLFW.SetWindowIcon), GLFW.Window, Array{Base.ReinterpretArray{Tuple{UInt8, UInt8, UInt8, UInt8}, 2, ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, false}, 1}})
@precompile(Tuple{typeof(Base.:(==)), GLFW.Window, Nothing})
@precompile(Tuple{typeof(Base.:(==)), GLFW.Window, GLFW.Window})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{Tuple{Int64, Int64}, Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(/)), Tuple{Tuple{Int64, Int64}, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Base.:(==)), Tuple{Int32, Int32}, Tuple{Float64, Float64}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.TextureParameters{NDim} where NDim}, Symbol, Symbol, Tuple{Symbol, Symbol}, Float32, Array{UInt32, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.map_texture_paramers), Symbol})
@precompile(Tuple{typeof(Base._array_for), Type{Tuple{Symbol, UInt32}}, Base.HasLength, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Tuple{Symbol, UInt32}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, UInt32}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{2}}}, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.map_texture_paramers), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, Tuple{UInt32, UInt32}}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Symbol, Any}, 1}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{2}}}, Int64, Int64})
@precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{Symbol, Any}, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, UInt32, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}, UInt32, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}, UInt32, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}, UInt32, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}, UInt32, Float32})
@precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}}, Type{Symbol}, Type{GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}})
@precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}, Symbol})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Tuple{Pair{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}}}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}, Symbol})
@precompile(Tuple{Type{GLMakie.GLFramebuffer}, Observables.Observable{Tuple{Int64, Int64}}, UInt32, Base.Dict{Symbol, UInt32}, Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, 2} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Array{UInt32, 1}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}, Symbol})
@precompile(Tuple{typeof(GLMakie.OIT_postprocessor), GLMakie.GLFramebuffer, GLMakie.GLAbstraction.ShaderCache})
@precompile(Tuple{Type{Pair{A, B} where B where A}, UInt32, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, UInt32, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}}, Vararg{Pair{A, B} where B where A}})
@precompile(Tuple{typeof(Base.haskey), Base.Dict{Any, Any}, Symbol})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{typeof(Base.all), Function, Tuple{String, String}})
@precompile(Tuple{typeof(Base._all), GLMakie.GLAbstraction.var"#51#56", Tuple{String, String}, Base.Colon})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String}}, Tuple{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.get_template!), GLMakie.GLAbstraction.ShaderCache, String, Base.Dict{String, String}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, String}, String, Base.SubString{String}})
@precompile(Tuple{typeof(Base.setindex!), Array{Array{String, 1}, 1}, Array{String, 1}, Int64})
@precompile(Tuple{typeof(Base._array_for), Type{String}, Array{String, 1}, Base.HasShape{1}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{String, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.mustache2replacement), String, Base.Dict{String, String}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.get!), GLMakie.GLAbstraction.var"#54#59"{GLMakie.GLAbstraction.ShaderCache, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Tuple{String, String}}, Base.Dict{Any, GLMakie.GLAbstraction.GLProgram}, Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{typeof(Base.isequal), Base.Dict{String, String}, Array{String, 1}})
@precompile(Tuple{typeof(Base.setindex!), Array{GLMakie.GLAbstraction.Shader, 1}, GLMakie.GLAbstraction.Shader, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.compile_program), Array{GLMakie.GLAbstraction.Shader, 1}, Array{Tuple{Int64, String}, 1}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLVertexArray{Int64}}, GLMakie.GLAbstraction.GLProgram, UInt32, Int64, Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, Int64})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{Int64}, Function, Nothing, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, UInt32, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{Type{Base.Broadcast.BroadcastStyle}, Base.Broadcast.DefaultArrayStyle{0}, StaticArrays.StaticArrayStyle{1}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}})
@precompile(Tuple{Type{StaticArrays.Size{()}}})
@precompile(Tuple{typeof(Base._array_for), Type{Tuple{}}, Base.HasLength, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Tuple{}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{}, 1}, Tuple{}, Base.Generator{Core.SimpleVector, StaticArrays.var"#149#151"}, Int64})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{}, 1}, Tuple{Int64}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Vararg{Int64}}, 1}, Base.Generator{Core.SimpleVector, StaticArrays.var"#149#151"}, Int64, Int64})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Vararg{Int64}}, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}, Base.Iterators.Enumerate{Array{Tuple{Vararg{Int64}}, 1}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.Iterators.Enumerate{Array{Tuple{Vararg{Int64}}, 1}}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}}})
@precompile(Tuple{StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}, Tuple{Int64, Tuple{}}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.Iterators.Enumerate{Array{Tuple{Vararg{Int64}}, 1}}, StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}}, Tuple{Int64, Int64}})
@precompile(Tuple{StaticArrays.var"#150#152"{Base.IteratorsMD.CartesianIndex{1}}, Tuple{Int64, Tuple{Int64}}})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Float32, Base.IteratorsMD.CartesianIndex{1}})
@precompile(Tuple{typeof(GLMakie.fxaa_postprocessor), GLMakie.GLFramebuffer, GLMakie.GLAbstraction.ShaderCache})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, UInt32, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Pair{Symbol, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}}, Vararg{Pair{A, B} where B where A}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{typeof(Base.isequal), Base.Dict{String, String}, Base.Dict{String, String}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{Int64}, GLMakie.PostprocessPrerender, Nothing, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Int64, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rcpframe), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Tuple{Int64, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rcpframe), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Tuple{Int64, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rcpframe), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Tuple{Int64, Int64}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.to_screen_postprocessor), GLMakie.GLFramebuffer, GLMakie.GLAbstraction.ShaderCache})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.vect), GLMakie.PostProcessor{GLMakie.var"#73#74"}, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), GLMakie.PostProcessor{GLMakie.var"#73#74"}, GLMakie.PostProcessor{GLMakie.var"#77#80"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), GLMakie.PostProcessor{GLMakie.var"#77#80"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}}, GLMakie.PostProcessor{GLMakie.var"#95#98"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), GLMakie.PostProcessor{GLMakie.var"#95#98"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}}, GLMakie.PostProcessor{GLMakie.var"#100#102"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}}})
@precompile(Tuple{typeof(Base.promote_type), Type{GLMakie.PostProcessor{GLMakie.var"#77#80"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}}}, Type{GLMakie.PostProcessor{F} where F}})
@precompile(Tuple{typeof(Base.promote_type), Type{GLMakie.PostProcessor{GLMakie.var"#73#74"}}, Type{GLMakie.PostProcessor{F} where F}})
@precompile(Tuple{Type{Array{GLMakie.PostProcessor{F} where F, 1}}, UndefInitializer, Int64})
@precompile(Tuple{typeof(Base.copyto!), Array{GLMakie.PostProcessor{F} where F, 1}, Tuple{GLMakie.PostProcessor{GLMakie.var"#73#74"}, GLMakie.PostProcessor{GLMakie.var"#77#80"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}}, GLMakie.PostProcessor{GLMakie.var"#95#98"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}}, GLMakie.PostProcessor{GLMakie.var"#100#102"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}}}})
@precompile(Tuple{typeof(Base.convert), Type{Float64}, Float32})
@precompile(Tuple{typeof(ColorTypes._rem), Float64, Type{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{typeof(GLMakie.get_loading_image), Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.size), Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{typeof(Base.:(==)), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.size), Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, Int64})
@precompile(Tuple{typeof(Base.setindex!), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, Array{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}, GLMakie.GLAbstraction.GLVertexArray{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{GLMakie.var"#99#101"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.var"#271#272"{Observables.Observable{Bool}}}, GLMakie.var"#271#272"{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.var"#271#272"{Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#907#910"{Makie.Scene, GLMakie.Screen}}, Makie.var"#907#910"{Makie.Scene, GLMakie.Screen}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#907#910"{Makie.Scene, GLMakie.Screen}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Nothing}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, GLMakie.WindowAreaUpdater})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.WindowAreaUpdater}})
@precompile(Tuple{Makie.var"#907#910"{Makie.Scene, GLMakie.Screen}, Bool})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, GLMakie.MousePositionUpdater})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.MousePositionUpdater}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Bool}, Symbol, Int32})
@precompile(Tuple{GLMakie.WindowAreaUpdater, Nothing})
@precompile(Tuple{Makie.var"#70#73", GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{typeof(Base.:(!=)), GeometryBasics.HyperRectangle{2, Int64}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{GLMakie.MousePositionUpdater, Nothing})
@precompile(Tuple{Type{Base.Val{:clear}}})
@precompile(Tuple{typeof(Makie.pixelarea), Nothing})
@precompile(Tuple{GLMakie.var"#125#127"{GLMakie.Screen}, GLFW.Window})
@precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Float32, 1}})
@precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.:(!=)), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(ModernGL.glScissor), Int64, Int64, Int64, Int64})
@precompile(Tuple{GLMakie.var"#73#74", GLMakie.Screen})
@precompile(Tuple{GLMakie.var"#77#80"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}, GLMakie.Screen})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}, GLMakie.GLAbstraction.GLVertexArray{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{GLMakie.var"#76#79"{GLMakie.GLAbstraction.RenderObject{GLMakie.var"#75#78"}}})
@precompile(Tuple{GLMakie.var"#95#98"{UInt32, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}, GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}, GLMakie.Screen})
@precompile(Tuple{typeof(ModernGL.glDrawBuffer), UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{GLMakie.var"#93#96"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}})
@precompile(Tuple{GLMakie.GLAbstraction.var"##s66#62", Any, Any, Any, Any})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._size), Type})
@precompile(Tuple{Type{Tuple}, StaticArrays.Size{(2,)}})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.uniformfunc), DataType, Tuple{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.opengl_postfix), Type{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._ndims), Type})
@precompile(Tuple{typeof(Base.ndims), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{GLMakie.var"#94#97"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}})
@precompile(Tuple{GLMakie.var"#100#102"{GLMakie.GLAbstraction.RenderObject{GLMakie.PostprocessPrerender}}, GLMakie.Screen})
@precompile(Tuple{typeof(Base.hash), Any, UInt64})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{4}})
@precompile(Tuple{Type{StaticArrays.SOneTo{16}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{16}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Tuple{StaticArrays.SOneTo{16}, Int64}, Tuple{StaticArrays.SOneTo{16}, Int64}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{16}, Int64})
@precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Tuple{StaticArrays.SOneTo{16}, Int64}}, Tuple{Tuple{StaticArrays.SOneTo{16}, Int64}}}})
@precompile(Tuple{typeof(StaticArrays.has_size1), Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{4, 4}}})
@precompile(Tuple{StaticArraysCore.var"##s4#1", Any, Any, Any, Any, Any, Type, Type, Type, Any})
@precompile(Tuple{typeof(Base._all), StaticArraysCore.var"#2#3", Core.SimpleVector, Base.Colon})
@precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{4, 4}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{4, 4}}})
@precompile(Tuple{typeof(Base.minimum), Tuple{Int64, Int64}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{4, 4}}})
@precompile(Tuple{Type{Base.Val{16}}})
@precompile(Tuple{typeof(Base.ntuple), StaticArraysCore.var"#5#6", Base.Val{16}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{Type{NamedTuple{(:x_repeat, :minfilter), T} where T<:Tuple}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Type{GeometryBasics.Vec{4, Float32}}, Int64})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Float32}}, Int64})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:transparency}}})
@precompile(Tuple{Type{MakieCore.Key{:mesh}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Bool}})
@precompile(Tuple{typeof(Base._array_for), Type{Pair{Symbol, Observables.Observable{Bool}}}, Base.HasLength, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64})
@precompile(Tuple{Type{MakieCore.Key{:specular}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:mesh}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64, Int64})
@precompile(Tuple{Type{MakieCore.Key{:visible}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:space}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:mesh}}, Symbol})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Symbol}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:mesh}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:mesh}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:mesh}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Symbol}})
@precompile(Tuple{Type{MakieCore.Key{:ssao}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:backlight}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:mesh}}, Float32})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Float32})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Float32}})
@precompile(Tuple{Type{MakieCore.Key{:nan_color}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{MakieCore.Key{:shininess}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:mesh}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:interpolate}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:overdraw}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:cycle}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:mesh}}, Array{Pair{Symbol, Symbol}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Pair{Symbol, Symbol}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Pair{Symbol, Symbol}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:mesh}}, Observables.Observable{Array{Pair{Symbol, Symbol}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:mesh}}, Observables.Observable{Array{Pair{Symbol, Symbol}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:mesh}}, Observables.Observable{Array{Pair{Symbol, Symbol}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Pair{Symbol, Symbol}, 1}}})
@precompile(Tuple{Type{MakieCore.Key{:model}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:mesh}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:mesh}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:mesh}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:mesh}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{Type{MakieCore.Key{:depth_shift}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:color}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:shading}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:inspectable}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:fxaa}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:linewidth}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:diffuse}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Array{Pair{Symbol, B} where B, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Makie.var"#75#76"{DataType}, Tuple{Array{Makie.AbstractLight, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Makie.var"#75#76"{DataType}, Tuple{Array{Makie.AbstractLight, 1}}}})
@precompile(Tuple{typeof(Base.isempty), Array{Int64, 1}})
@precompile(Tuple{typeof(Base.getindex), Array{Makie.AbstractLight, 1}, Int64})
@precompile(Tuple{typeof(Base.isnothing), Makie.PointLight})
@precompile(Tuple{typeof(Base.isnothing), Makie.AmbientLight})
@precompile(Tuple{typeof(GLMakie.connect_camera!), Base.Dict{Symbol, Any}, Makie.Camera, Observables.Observable{Symbol}})
@precompile(Tuple{typeof(Base.get!), Base.Dict{Symbol, Any}, Symbol, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(Base.get!), Base.Dict{Symbol, Any}, Symbol, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.get!), Base.Dict{Symbol, Any}, Symbol, Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#158#166", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#158#166", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#158#166", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{S, T} where T where S}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{GeometryBasics.Vec{S, T} where T where S}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{3, Int64}}})
@precompile(Tuple{typeof(Base.argtail), StaticArrays.Size{(4,)}})
@precompile(Tuple{StaticArrays.var"##s25#139", Any, Any, Any, Any})
@precompile(Tuple{typeof(StaticArrays.out_index_size), Type{StaticArrays.Size{(3,)}}, Vararg{Type{StaticArrays.Size{(3,)}}}})
@precompile(Tuple{typeof(StaticArrays._out_index_size), Tuple{}, Type{StaticArrays.Size{(3,)}}, Type})
@precompile(Tuple{typeof(StaticArrays._out_index_size), Tuple{Int64}, Type{StaticArrays.Size{(3,)}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(StaticArrays.linear_index_size), Type{StaticArrays.Size{(3,)}}, Vararg{Type{StaticArrays.Size{(3,)}}}})
@precompile(Tuple{typeof(StaticArrays._linear_index_size), Tuple{}, Type{StaticArrays.Size{(3,)}}, Type})
@precompile(Tuple{typeof(StaticArrays._linear_index_size), Tuple{Int64}, Type{StaticArrays.Size{(3,)}}})
@precompile(Tuple{Type{Array{Expr, N} where N}, UndefInitializer, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.isempty), Array{Expr, 2}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#140#141"{Array{Int64, 1}, Core.SimpleVector}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#140#141"{Array{Int64, 1}, Core.SimpleVector}}})
@precompile(Tuple{typeof(StaticArrays._ind), Int64, Int64, Type{GeometryBasics.Vec{3, Int64}}})
@precompile(Tuple{typeof(Base._array_for), Type{Expr}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Expr, 1}, Expr, Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#140#141"{Array{Int64, 1}, Core.SimpleVector}}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Array{Expr, 2}, Expr, Int64, Int64})
@precompile(Tuple{StaticArrays.var"##s25#113", Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base.getindex), StaticArrays.Size{(4, 4)}, Int64})
@precompile(Tuple{Type{StaticArrays.SOneTo{9}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{9}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Tuple{StaticArrays.SOneTo{9}, Int64}, Tuple{StaticArrays.SOneTo{9}, Int64}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{9}, Int64})
@precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Tuple{StaticArrays.SOneTo{9}, Int64}}, Tuple{Tuple{StaticArrays.SOneTo{9}, Int64}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#160#168", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#160#168", Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#160#168", Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#160#168", Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#162#170"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#162#170"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#162#170"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#164#172"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#164#172"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#164#172"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}}}}})
@precompile(Tuple{typeof(GLMakie.mesh_inner), GLMakie.GLAbstraction.ShaderCache, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Function})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{GeometryBasics.var"##s7#69", Any, Any, Any, Any, Type, Any, Any})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{2, Float32}, 1, 3}}})
@precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{2, Float32}, 1, 3}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{2, Float32}, 1, 3}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.NgonFace{3, GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{2, Float32}, 1, 3}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{3}}})
@precompile(Tuple{typeof(Base.:(*)), Int64})
@precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{3}}})
@precompile(Tuple{typeof(Base.minimum), Tuple{Int64}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{3}}})
@precompile(Tuple{Type{NamedTuple{(:buffertype, :usage), T} where T<:Tuple}, Tuple{UInt32, UInt32}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:buffertype, :usage), Tuple{UInt32, UInt32}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, UInt32, Tuple{Symbol, Symbol}, NamedTuple{(:buffertype, :usage), Tuple{UInt32, UInt32}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:buffertype, :usage), Tuple{UInt32, UInt32}}, Symbol})
@precompile(Tuple{typeof(GLMakie.to_opengl_mesh!), Base.Dict{Symbol, Any}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Nothing})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#14#16", Tuple{String, String, String, String}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple}, Tuple{String, String, String, String}})
@precompile(Tuple{typeof(GLMakie.assemble_robj), Base.Dict{Symbol, Any}, GLMakie.GLVisualizeShader, GeometryBasics.HyperRectangle{3, Float32}, UInt32, Nothing, Nothing})
@precompile(Tuple{Type{GLMakie.GLAbstraction.StandardPrerender}, Observables.Observable{Bool}, Observables.Observable{Bool}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{Pre} where Pre}, Base.Dict{Symbol, Any}, GLMakie.GLVisualizeShader, GLMakie.GLAbstraction.StandardPrerender, Nothing, GeometryBasics.HyperRectangle{3, Float32}, Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Bool}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Bool}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{UInt8}}, Tuple{Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{UInt8}}, Tuple{Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{UInt8}}, Tuple{Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGBA{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Bool})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Bool})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(ColorTypes._eltypes_supported), Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Color{T, 3} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
@precompile(Tuple{typeof(ColorTypes._eltypes_supported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGB{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGB{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGB{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGB{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{ColorTypes.RGB{Float32}}}, Tuple{Observables.Observable{ColorTypes.RGB{Float32}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{typeof(Base.all), Function, Tuple{String, String, String, String}})
@precompile(Tuple{typeof(Base._all), GLMakie.GLAbstraction.var"#51#56", Tuple{String, String, String, String}, Base.Colon})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String}}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.opengl_prefix), Type{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.glsl_typename), Type{Nothing}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.glsl_typename), Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Nothing})
@precompile(Tuple{typeof(Base.get!), GLMakie.GLAbstraction.var"#54#59"{GLMakie.GLAbstraction.ShaderCache, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Tuple{String, String, String, String}}, Base.Dict{Any, GLMakie.GLAbstraction.GLProgram}, Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(ModernGL.glVertexAttribPointer), Int32, Int64, UInt32, UInt32, Int64, Ptr{Nothing}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}, String})
@precompile(Tuple{typeof(Base.:(==)), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, Int64})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}}, GLMakie.GLAbstraction.GLProgram, UInt32, Int64, Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}, GLMakie.GLAbstraction.StandardPrerender, Nothing, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, Symbol, GLMakie.GLAbstraction.StandardPostrender})
@precompile(Tuple{typeof(Base.getproperty), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, UInt32})
@precompile(Tuple{typeof(Base.push!), GLMakie.Screen, Makie.Scene, GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}})
@precompile(Tuple{typeof(Base.isequal), Makie.Scene, Makie.Scene})
@precompile(Tuple{Type{NamedTuple{(:x_repeat,), T} where T<:Tuple}, Tuple{Symbol}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:lines}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:lines}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64, Int64})
@precompile(Tuple{Type{MakieCore.Key{:colormap}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:lines}}, Symbol})
@precompile(Tuple{typeof(ColorTypes.ccolor), Type{ColorTypes.RGBA{Float32}}, Type{ColorTypes.RGB{Float64}}})
@precompile(Tuple{typeof(ColorTypes._rem), Float64, Type{Float32}})
@precompile(Tuple{typeof(Makie.to_colormap), ColorSchemes.ColorScheme{Array{ColorTypes.RGB{Float64}, 1}, String, String}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:lines}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:lines}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:lines}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:lines}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:linestyle}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linestyle}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:lines}}, Nothing})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Nothing})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Nothing}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:lines}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:lines}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:lines}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Nothing}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:lines}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:lines}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:lines}}, Array{Symbol, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Symbol, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:lines}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:lines}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:lines}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Symbol, 1}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:lines}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:lines}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:lines}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:lines}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:lines}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Symbol})
@precompile(Tuple{typeof(ColorTypes.ccolor), Type{ColorTypes.RGBA{Float32}}, Type{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}}})
@precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:lines}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:lines}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:lines}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:lines}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:lines}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Nothing}})
@precompile(Tuple{typeof(GLMakie.handle_view), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Makie.apply_transform), Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Makie.var"#656#657", Function, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{GeometryBasics.var"##s9#13", Any, Any, Any, Any, Type, Any, Any})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{2, Bool}}})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{DataType, DataType}})
@precompile(Tuple{typeof(GLMakie.draw_lines), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vec), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vec), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vec), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.get!), Base.Dict{Symbol, Any}, Symbol, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#23#27", Observables.Observable{Int32}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#23#27", Observables.Observable{Int32}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#23#27", Observables.Observable{Int32}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.signal_convert), Type, Observables.Observable{Int32}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Type{Int32}})
@precompile(Tuple{typeof(Base.map), typeof(Base.convert), Observables.Observable{DataType}, Observables.Observable{Int32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Int32})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Int32}, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Int32}, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{DataType}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int32}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int32}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Int32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.signal_convert), Type, Observables.Observable{Float32}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Type{Float32}})
@precompile(Tuple{typeof(Base.map), typeof(Base.convert), Observables.Observable{DataType}, Observables.Observable{Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Float32}, Observables.Observable{DataType}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Float32}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Float32}}}}})
@precompile(Tuple{typeof(Base.__cat_offset!), Array{UInt32, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Base.UnitRange{Int64}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#24#28", Observables.Observable{Array{UInt32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#24#28", Observables.Observable{Array{UInt32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#24#28", Observables.Observable{Array{UInt32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Function, Observables.Observable{Array{UInt32, 1}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#14#16", Tuple{String, String, String, String, String}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple}, Tuple{String, String, String, String, String}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#25#29", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#25#29", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#25#29", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(GLMakie.intensity_convert), Nothing, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{Float32}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{Float32}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{Float32}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), typeof(GLMakie.to_index_buffer), Observables.Observable{Array{UInt32, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{UInt32, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{UInt32}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{UInt32}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{UInt32}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Int32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Int32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), UInt32})
@precompile(Tuple{typeof(Base.all), Function, Tuple{String, String, String, String, String}})
@precompile(Tuple{typeof(Base._all), GLMakie.GLAbstraction.var"#51#56", Tuple{String, String, String, String, String}, Base.Colon})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String}}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.glsl_typename), Type{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(Base.get!), GLMakie.GLAbstraction.var"#54#59"{GLMakie.GLAbstraction.ShaderCache, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Tuple{String, String, String, String, String}}, Base.Dict{Any, GLMakie.GLAbstraction.GLProgram}, Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{Float32}, String})
@precompile(Tuple{typeof(Base.:(==)), GLMakie.GLAbstraction.GLBuffer{UInt32}, Int64})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{UInt32}}}, GLMakie.GLAbstraction.GLProgram, UInt32, Int64, Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{UInt32}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{UInt32}}, GLMakie.GLAbstraction.StandardPrerender, Nothing, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, UInt32})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:linesegments}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:linesegments}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:linesegments}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:linesegments}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:linesegments}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:linesegments}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}}, Nothing})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:linesegments}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:linesegments}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:linesegments}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:linesegments}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.draw_linesegments), Any, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Function, Observables.Observable{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.Shape})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), typeof(GLMakie.to_index_buffer), Observables.Observable{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{Float32}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.:(==)), Observables.Observable{Int64}, Int64})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLVertexArray{Observables.Observable{Int64}}}, GLMakie.GLAbstraction.GLProgram, UInt32, Int64, Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Int64}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{Observables.Observable{Int64}}, GLMakie.GLAbstraction.StandardPrerender, Nothing, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, UInt32})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.tail), Tuple{Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.tail), Tuple{Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.tail), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex_evalf), typeof(Base.round), Type, Int64})
@precompile(Tuple{typeof(Base.round), Type{Int64}, Int64})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Int64}}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{2, Int64}}, GeometryBasics.Vec{2, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{Float16}, Float16})
@precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{2}})
@precompile(Tuple{typeof(Base.identity), Float64})
@precompile(Tuple{typeof(Base.add_sum), Float64, Float64})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:dims,), Tuple{Base.Colon}}, Symbol})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Bool}}})
@precompile(Tuple{typeof(Base.Broadcast.make_makeargs), Function, Tuple{}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{Int64}, 1}, Tuple{}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.cat_nested), Int64})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Int64, Base.IteratorsMD.CartesianIndex{1}})
@precompile(Tuple{typeof(Base.last), Base.StepRange{Char, Int64}})
@precompile(Tuple{typeof(Base.step), Base.StepRange{Char, Int64}})
@precompile(Tuple{Type{NamedTuple{(:minfilter, :magfilter, :anisotropic, :mipmap), T} where T<:Tuple}, Tuple{Symbol, Symbol, Float32, Bool}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{Float16}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{Float16}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:minfilter, :magfilter, :anisotropic, :mipmap), Tuple{Symbol, Symbol, Float32, Bool}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:minfilter, :magfilter, :anisotropic, :mipmap), Tuple{Symbol, Symbol, Float32, Bool}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:minfilter, :magfilter, :anisotropic, :mipmap), Tuple{Symbol, Symbol, Float32, Bool}}, Symbol})
@precompile(Tuple{typeof(Base.structdiff), NamedTuple{(:minfilter, :magfilter, :anisotropic, :mipmap), Tuple{Symbol, Symbol, Float32, Bool}}, Type{NamedTuple{(:internalformat, :texturetype, :format, :mipmap), T} where T<:Tuple}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:minfilter, :magfilter, :anisotropic), Tuple{Symbol, Symbol, Float32}}})
@precompile(Tuple{typeof(Base.ntuple), StaticArraysCore.var"#5#6", Base.Val{4}})
@precompile(Tuple{Type{GeometryBasics.Vec{4, Float32}}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Int64, Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{4, Float32}}, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(4,)}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{4}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Tuple{StaticArrays.SOneTo{4}, Int64}, Tuple{StaticArrays.SOneTo{4}, Int64}}})
@precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{4}, Int64})
@precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Tuple{StaticArrays.SOneTo{4}, Int64}}, Tuple{Tuple{StaticArrays.SOneTo{4}, Int64}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:text}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:text}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}}, Int64})
@precompile(Tuple{Type{MakieCore.Key{:strokecolor}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:strokecolor}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:text}}, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{ColorTypes.RGBA{Float32}}}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:text}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:position}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:position}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:text}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:text}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:text}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:word_wrap_width}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:word_wrap_width}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:word_wrap_width}, MakieCore.Key{:text}}, Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Int64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Int64}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:word_wrap_width}, MakieCore.Key{:text}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:word_wrap_width}, MakieCore.Key{:text}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:word_wrap_width}, MakieCore.Key{:text}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Int64}})
@precompile(Tuple{Type{MakieCore.Key{:justification}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:justification}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:justification}, MakieCore.Key{:text}}, MakieCore.Automatic})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, MakieCore.Automatic})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{MakieCore.Automatic}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:justification}, MakieCore.Key{:text}}, Observables.Observable{MakieCore.Automatic}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:justification}, MakieCore.Key{:text}}, Observables.Observable{MakieCore.Automatic}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:justification}, MakieCore.Key{:text}}, Observables.Observable{MakieCore.Automatic}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{MakieCore.Automatic}})
@precompile(Tuple{Type{MakieCore.Key{:font}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:font}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, FreeTypeAbstraction.FTFont})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, FreeTypeAbstraction.FTFont})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{FreeTypeAbstraction.FTFont}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{FreeTypeAbstraction.FTFont}})
@precompile(Tuple{Type{MakieCore.Key{:align}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:align}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:align}, MakieCore.Key{:text}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:align}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:align}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:align}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Type{MakieCore.Key{:textsize}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:textsize}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:text}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:text}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:strokewidth}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:strokewidth}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:text}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:rotation}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:rotation}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Float32})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Makie.Quaternion{Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Makie.Quaternion{Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:text}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:lineheight}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:lineheight}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:lineheight}, MakieCore.Key{:text}}, Float64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Float64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Float64}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:lineheight}, MakieCore.Key{:text}}, Observables.Observable{Float64}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:lineheight}, MakieCore.Key{:text}}, Observables.Observable{Float64}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:lineheight}, MakieCore.Key{:text}}, Observables.Observable{Float64}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Float64}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:text}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:text}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:text}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:text}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:text}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:offset}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:offset}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:offset}, MakieCore.Key{:text}}, Tuple{Float64, Float64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Float64, Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:offset}, MakieCore.Key{:text}}, Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:offset}, MakieCore.Key{:text}}, Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:offset}, MakieCore.Key{:text}}, Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:text}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:text}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:markerspace}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:markerspace}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:text}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:text}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:text}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:text}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:text}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:text}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:text}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:text}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:text}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}})
@precompile(Tuple{Type{Base.Broadcast.BroadcastStyle}, Base.Broadcast.DefaultArrayStyle{1}, StaticArrays.StaticArrayStyle{1}})
@precompile(Tuple{Base.Broadcast.var"#15#17"})
@precompile(Tuple{Base.Broadcast.var"#25#26"})
@precompile(Tuple{GLMakie.var"#204#215", Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Tuple{Float64, Float64}, Function})
@precompile(Tuple{typeof(Base.Iterators.zip), Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.var"#716#717", Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{Type{Base.Iterators.Flatten{I} where I}, Base.Generator{Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Makie.var"#716#717"}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Int64})
@precompile(Tuple{typeof(Base.collect), Base.Iterators.Flatten{Base.Generator{Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Makie.var"#716#717"}}})
@precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{Base.Dict{Symbol, Any}}})
@precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, DataType})
@precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{Base.Dict{Tuple{Char, String}, Int64}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Char, String}, Int64}, Int64, Tuple{Char, String}})
@precompile(Tuple{typeof(Base.prod), Tuple{Int64, Int64}})
@precompile(Tuple{Type{Array{Float16, N} where N}, UndefInitializer, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Float16, 2}})
@precompile(Tuple{Type{Array{GeometryBasics.Vec{4, Float32}, 1}}, UndefInitializer, Int64})
@precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{GeometryBasics.Vec{4, Float32}, 1}})
@precompile(Tuple{typeof(Base.map), Makie.var"#14#19"{Base.Dict{Symbol, Any}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.copy), Array{GeometryBasics.Vec{4, Float32}, 1}})
@precompile(Tuple{Type{Makie.TextureAtlas}, Packing.RectanglePacker{Int64}, Base.Dict{Tuple{Char, String}, Int64}, Int64, Array{Float16, 2}, Array{GeometryBasics.Vec{4, Float32}, 1}})
@precompile(Tuple{typeof(Base.length), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{Array{GeometryBasics.Vec{3, Float32}, 1}}, UndefInitializer, Int64})
@precompile(Tuple{Type{Array{GeometryBasics.Vec{2, Float32}, 1}}, UndefInitializer, Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#205#216"{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Int64, Int64, Int64, Int64, Int64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Vec{3, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Vec{4, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64}}}})
@precompile(Tuple{Type{Base.BottomRF{typeof(Base.vcat)}}, Function})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#207#218", Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#207#218", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#207#218", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#207#218", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#209#220", Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#209#220", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#209#220", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#209#220", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#211#222", Observables.Observable{Array{Makie.GlyphCollection, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#211#222", Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#211#222", Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#211#222", Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.GlyphCollection, 1}}}}}})
@precompile(Tuple{typeof(Base.get!), GLMakie.var"#2#4"{Makie.TextureAtlas}, Base.Dict{Any, Tuple{GLMakie.GLAbstraction.Texture{Float16, 2}, Function}}, GLFW.Window})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float16, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float16, 2}, UInt32, Float32})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Float64, Vararg{Any}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Int64, Int64, Int64, Int64, Float64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Float64, Int64, Int64}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Tuple{Float64, Int64, Int64, Int64, Int64, Float64, Int64, Int64, Int64, Int64, Int64, Int64, Float64, Float64, Int64, Int64}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#213#224"{Makie.Camera}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#213#224"{Makie.Camera}, Observables.Observable{Symbol}, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}})
@precompile(Tuple{GLMakie.var"#213#224"{Makie.Camera}, Symbol, Symbol, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#213#224"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#213#224"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#213#224"{Makie.Camera}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GLMakie.Shape, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GLMakie.Shape, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Int64, Int64})
@precompile(Tuple{typeof(Base.get!), Base.Dict{Symbol, Any}, Symbol, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(GLMakie.vec2quaternion), Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}}}})
@precompile(Tuple{typeof(Observables.to_value), GLMakie.Shape})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), GLMakie.Shape})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#62#63", Observables.Observable{GLMakie.Shape}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GLMakie.Shape}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GLMakie.Shape}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GLMakie.Shape}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GLMakie.Shape}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float16, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.length), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.:(==)), Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(GLMakie.position_calc), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.Iterators.filter), Function, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}})
@precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}}, Int64})
@precompile(Tuple{typeof(GLMakie._position_calc), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Type{GLMakie.GLAbstraction.GLBuffer{T} where T}})
@precompile(Tuple{Type{NamedTuple{(:view,), T} where T<:Tuple}, Tuple{Base.Dict{String, String}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:view,), Tuple{Base.Dict{String, String}}}, Type{GLMakie.GLVisualizeShader}, GLMakie.GLAbstraction.ShaderCache, String, String, String, String, String})
@precompile(Tuple{typeof(GLMakie.intensity_convert), Nothing, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Int64}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Int64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{Int64}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{Int64}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Int32}}, Tuple{Observables.Observable{Int64}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float16, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Float64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Float64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.opengl_prefix), Type{Float16}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{Float16, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), ColorTypes.RGBA{Float32}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}, String})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}, String})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}, String})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}, String})
@precompile(Tuple{typeof(Base.length), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.bind), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.cardinality), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.eltype), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.julia2glenum), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}, String})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}, UInt32})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Array{Float32, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:position}, MakieCore.Key{:text}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Float64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Makie.Quaternion{Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Makie.Quaternion{Float64}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Makie.Quaternion{Float64}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Vararg{Any}})
@precompile(Tuple{GLMakie.var"#204#215", Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Tuple{Float64, Float64}, Function})
@precompile(Tuple{typeof(Base.Iterators.zip), Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Makie.var"#716#717", Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{Type{Base.Iterators.Flatten{I} where I}, Base.Generator{Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Makie.var"#716#717"}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Int64})
@precompile(Tuple{typeof(Base.collect), Base.Iterators.Flatten{Base.Generator{Base.Iterators.Zip{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}}}, Makie.var"#716#717"}}})
@precompile(Tuple{typeof(Base.unsafe_wrap), Type{Array{T, N} where N where T}, Ptr{UInt8}, UInt32})
@precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{UInt8, 2}, Array{UInt8, 1}, Base.Slice{Base.OneTo{Int64}}, Int64})
@precompile(Tuple{typeof(Base.:(+)), Ptr{UInt8}, Int32})
@precompile(Tuple{GLMakie.var"#callback#5", Array{Float16, 2}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.getproperty), GLMakie.GLAbstraction.Texture{Float16, 2}, Symbol})
@precompile(Tuple{typeof(ShaderAbstractions.context_alive), GLFW.Window})
@precompile(Tuple{typeof(Base.setindex!), GLMakie.GLAbstraction.Texture{Float16, 2}, Array{Float16, 2}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(ShaderAbstractions.switch_context!), GLFW.Window})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Vec{2, Float32}, 1}, GeometryBasics.Vec{2, Float64}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Vec{3, Float32}, 1}, GeometryBasics.Point{3, Float32}, Int64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#204#215", Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Vec{4, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.mesh_inner), GLMakie.GLAbstraction.ShaderCache, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#662#663", Function})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{typeof(Base.identity), typeof(Base.identity)}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, 3}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.NgonFace{3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(GLMakie.to_opengl_mesh!), Base.Dict{Symbol, Any}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.map), typeof(GeometryBasics.metafree), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}}}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, UInt32})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{Type{MakieCore.Key{:resolution}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:resolution}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:resolution}, MakieCore.Key{:lines}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:resolution}, MakieCore.Key{:lines}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:resolution}, MakieCore.Key{:lines}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:resolution}, MakieCore.Key{:lines}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{Makie.var"#656#657", Tuple{typeof(Base.identity), typeof(Base.identity)}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{NamedTuple{(:resize_buffers,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{typeof(Makie.colorbuffer), GLMakie.Screen})
@precompile(Tuple{GLMakie.var"#sortby#141"{GLMakie.Screen}, Tuple{Int64, UInt8, GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), Makie.Scene})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{AbstractString, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.arc, Tuple{GeometryBasics.Point{2, Float32}, Float32, Float32, Base.Irrational{:π}}}})
@precompile(Tuple{GLMakie.var"#138#142", GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{UInt8}})
@precompile(Tuple{Type{Bool}, UInt8})
@precompile(Tuple{GLMakie.var"#139#143", GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Int64}})
@precompile(Tuple{typeof(Base.iterate), GeometryBasics.Vec{2, Int64}, Tuple{StaticArrays.SOneTo{2}, Int64}})
@precompile(Tuple{typeof(ModernGL.glViewport), Int64, Int64, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, UInt32})
@precompile(Tuple{typeof(Base.eltype), Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.uniformfunc), DataType, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._size), Type{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._ndims), Type{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, UInt8})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{Float32}})
@precompile(Tuple{GLMakie.GLAbstraction.StandardPostrender})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{UInt32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{UInt32}}, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, GLMakie.GLAbstraction.GLVertexArray{Observables.Observable{Int64}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.GLVertexArray{Observables.Observable{Int64}}, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{Float16, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Float32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{Int32}})
@precompile(Tuple{GLMakie.var"#140#144", GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}})
@precompile(Tuple{typeof(GLMakie.fast_color_data!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 2}, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.PermutedDimsArrays.var"#1#2"{(2, 1), (2, 1)}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Base.PermutedDimsArrays.var"#1#2"{(2, 1), (2, 1)}}, Base.HasShape{1}})
@precompile(Tuple{Type{Base.PermutedDimsArrays.PermutedDimsArray{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 2, (2, 1), (2, 1), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 2}}}, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{N, Int64} where N}, Int64, Int64, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:strokewidth, :strokecolor, :color), T} where T<:Tuple}, Tuple{Int64, Symbol, Tuple{Symbol, Float64}}})
@precompile(Tuple{Makie.var"#poly##kw", NamedTuple{(:strokewidth, :strokecolor, :color), Tuple{Int64, Symbol, Tuple{Symbol, Float64}}}, typeof(Makie.poly), GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{Type{Base.Val{:mesh}}})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(Makie.point_iterator), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Makie.var"#664#665"}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Base.Iterators.Flatten{Base.Generator{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}})
@precompile(Tuple{Type{Makie.Cycle}, Array{Pair{Symbol, Symbol}, 1}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis}, GridLayoutBase.Dimensions})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.poly, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Vararg{Any}})
@precompile(Tuple{GLMakie.var"#204#215", Array{GeometryBasics.Point{2, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Tuple{Float64, Float64}, Function})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Observables.Observable{Tuple{Float64, Float64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#204#215", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}, Vararg{Any}})
@precompile(Tuple{GLMakie.var"#204#215", Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.GlyphCollection, 1}, Tuple{Float64, Float64}, Function})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{UInt32}}})
@precompile(Tuple{typeof(ShaderAbstractions.is_context_active), GLFW.Window})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLVertexArray{Observables.Observable{Int64}}})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{typeof(Base.identity), typeof(Base.identity)}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{N, T} where T where N}, Int64, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.vect), GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Makie.poly), Array{GeometryBasics.HyperRectangle{2, Int64}, 1}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}, 1}}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Tuple{Int64, Int64}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#89#91"{GeometryBasics.var"#quad#90"{Base.LinearIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
@precompile(Tuple{typeof(IterTools.ivec), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, GeometryBasics.var"#89#91"{GeometryBasics.var"#quad#90"{Base.LinearIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}}})
@precompile(Tuple{Type{StaticArrays.Size{(0,)}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{0}}})
@precompile(Tuple{Type{Tuple}, StaticArrays.Size{(0,)}})
@precompile(Tuple{typeof(Base.prod), StaticArrays.Size{(0,)}})
@precompile(Tuple{typeof(StaticArrays._length_match_size), Int64, Tuple{}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{0}}})
@precompile(Tuple{StaticArrays.var"##s25#2", Any, Any, Any})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:pointtype, :facetype), Tuple{DataType, DataType}}, Symbol})
@precompile(Tuple{GeometryBasics.var"#89#91"{GeometryBasics.var"#quad#90"{Base.LinearIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}, Tuple{Int64, Int64}})
@precompile(Tuple{GeometryBasics.var"##s89#184", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, Int64, Vararg{Int64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}})
@precompile(Tuple{typeof(Base.iterate), IterTools.IVec{Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, GeometryBasics.var"#89#91"{GeometryBasics.var"#quad#90"{Base.LinearIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}}}}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Float64})
@precompile(Tuple{typeof(Base.rem), UInt16, Type{UInt32}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.HyperRectangle{2, Int64}, 1}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.triangle_mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.triangle_mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}}}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.HyperRectangle{2, Int64}, 1}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Makie.FigureAxisPlot, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Makie.FigureAxisPlot, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:color, :markersize), T} where T<:Tuple}, Tuple{Symbol, Int64}})
@precompile(Tuple{MakieCore.var"#scatter!##kw", NamedTuple{(:color, :markersize), Tuple{Symbol, Int64}}, typeof(MakieCore.scatter!), GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.getindex), Base.RefValue{Any}})
@precompile(Tuple{Type{Base.Val{:markersize}}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :markersize), Tuple{Symbol, Int64}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Makie.Axis, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.plotsym), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :space, :markerspace, :fxaa, :cycle, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, Symbol, Symbol, Bool, Array{Symbol, 1}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :space, :markerspace, :fxaa, :cycle, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, Symbol, Symbol, Bool, Array{Symbol, 1}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :space, :markerspace, :fxaa, :cycle, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, Symbol, Symbol, Bool, Array{Symbol, 1}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :marker, :markersize, :strokecolor, :strokewidth, :glowcolor, :glowwidth, :rotations, :marker_offset, :transform_marker, :distancefield, :uv_offset_width, :markerspace, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Tuple{Symbol, Float64}, Float64, MakieCore.Billboard{Float32}, MakieCore.Automatic, Bool, Nothing, Tuple{Float64, Float64, Float64, Float64}, Symbol, Bool, Array{Symbol, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float64, Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float64, Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperRectangle{2, Int64}}}}}}})
@precompile(Tuple{Type{MakieCore.Billboard{T} where T<:Union{Float32, Array{Float32, 1}}}, Float32})
@precompile(Tuple{Type{Base.Val{19}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), Makie.var"#99#105", Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#99#105", Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}, Symbol})
@precompile(Tuple{typeof(Base.:(==)), Symbol, MakieCore.Automatic})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.foreach_transformed), Makie.var"#674#675"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{GeometryBasics.Point{2, Float32}, 1}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, Function})
@precompile(Tuple{typeof(Makie.get_scene), Makie.Figure})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{Type{Base.Val{:rotations}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:scatter}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64})
@precompile(Tuple{Type{MakieCore.Key{:glowcolor}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:glowcolor}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:glowcolor}, MakieCore.Key{:scatter}}, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowcolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowcolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowcolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:strokecolor}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:scatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokecolor}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:scatter}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:scatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:scatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:scatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:scatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:scatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:glowwidth}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:glowwidth}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:glowwidth}, MakieCore.Key{:scatter}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowwidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowwidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:glowwidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:markersize}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:markersize}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:rotations}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:rotations}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, MakieCore.Billboard{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Makie.Quaternion{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:marker_offset}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:scatter}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:distancefield}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:distancefield}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:distancefield}, MakieCore.Key{:scatter}}, Nothing})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:distancefield}, MakieCore.Key{:scatter}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:distancefield}, MakieCore.Key{:scatter}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:distancefield}, MakieCore.Key{:scatter}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:scatter}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:strokewidth}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:scatter}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:strokewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:scatter}}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:scatter}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:scatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:scatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:scatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:scatter}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:marker}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:marker}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Type})
@precompile(Tuple{Type{GeometryBasics.HyperSphere{2, T} where T}, GeometryBasics.Point{2, Float32}, Float32})
@precompile(Tuple{typeof(Makie.to_spritemarker), Type{GeometryBasics.HyperSphere{2, T} where T}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.HyperSphere{2, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:markerspace}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:scatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markerspace}, MakieCore.Key{:scatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:uv_offset_width}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:uv_offset_width}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:uv_offset_width}, MakieCore.Key{:scatter}}, Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Vec{4, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:uv_offset_width}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:uv_offset_width}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:uv_offset_width}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:scatter}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:scatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:scatter}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:transform_marker}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transform_marker}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transform_marker}, MakieCore.Key{:scatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transform_marker}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transform_marker}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transform_marker}, MakieCore.Key{:scatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert), Symbol, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}, MakieCore.Key{:marker}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#192#196", Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#192#196", Observables.Observable{Symbol}, Observables.Observable{Symbol}, Vararg{Any}})
@precompile(Tuple{GLMakie.var"#192#196", Symbol, Symbol, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#192#196", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#192#196", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#192#196", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Symbol}, Observables.Observable{Symbol}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#193#197", Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#193#197", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#193#197", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#193#197", Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(Base.:(==)), GeometryBasics.Vec{4, Float32}, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.vec2quaternion), Observables.Observable{Makie.Quaternion{Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float32}}}}}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{Type{Int32}, GLMakie.Shape})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#62#63", Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(Base.map), typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}})
@precompile(Tuple{typeof(GLMakie.primitive_distancefield), Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.length), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.position_calc), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.Iterators.filter), Function, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}})
@precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Nothing, Nothing, Nothing, UnionAll}}, Int64})
@precompile(Tuple{typeof(GLMakie._position_calc), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Type{GLMakie.GLAbstraction.GLBuffer{T} where T}})
@precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Int64}, String})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.hashindex), Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}, Int64})
@precompile(Tuple{typeof(Base.hashindex), Tuple{Tuple{String, String}, Array{Array{String, 1}, 1}}, Int64})
@precompile(Tuple{typeof(Base.hashindex), Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Int64}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{UInt8}})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.ndims), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Tuple}, StaticArrays.Size{(4,)}})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(Base.ndims), Type{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(IntervalSets.:(..)), Int64, Int64})
@precompile(Tuple{typeof(Base.rand), Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Array{Float64, 1}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Array{Float64, 1}, Int64}}})
@precompile(Tuple{Type{NamedTuple{(:markersize,), T} where T<:Tuple}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#scatter##kw", NamedTuple{(:markersize,), Tuple{Array{Float64, 1}}}, typeof(MakieCore.scatter), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##scatter#43", Base.Pairs{Symbol, Array{Float64, 1}, Tuple{Symbol}, NamedTuple{(:markersize,), Tuple{Array{Float64, 1}}}}, typeof(MakieCore.scatter), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:markersize,), Tuple{Array{Float64, 1}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.PointBased, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}, Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Array{Float64, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Array{Float64, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float32}, Base.IteratorsMD.CartesianIndex{0}})
@precompile(Tuple{Makie.var"#99#105", Array{Float64, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#99#105", Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Symbol})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker_offset}, MakieCore.Key{:scatter}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{Type{Base.LinRange{T, L} where L<:Integer where T}, Int64, Int64, Int64})
@precompile(Tuple{typeof(MakieCore.scatter), Base.LinRange{Float64, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##scatter#43", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.scatter), Base.LinRange{Float64, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Base.LinRange{Float64, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, Base.LinRange{Float64, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Base.LinRange{Float64, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.scatter, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}, Base.LinRange{Float64, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Base.LinRange{Float64, Int64}}, Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}, Observables.Observable{Base.LinRange{Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Base.LinRange{Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Base.LinRange{Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.LinRange{Float64, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Base.LinRange{Float64, Int64}}, Observables.Observable{Array{Float64, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Base.LinRange{Float64, Int64}}, Observables.Observable{Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Base.LinRange{Float64, Int64}}, Observables.Observable{Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{Base.LinRange{Float64, Int64}, Array{Float64, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Base.LinRange{Float64, Int64}}, Observables.Observable{Array{Float64, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, Base.LinRange{Float64, Int64}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.scatter), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##scatter#43", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.scatter), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(Observables.to_value), Function})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex_evalf), typeof(Observables.to_value), Function})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(Base.rem), UInt32, Type{Int64}})
@precompile(Tuple{typeof(Base.:(&)), Int64, UInt32})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, PlotUtils.var"#27#29"{Main.var"#1#2"}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, PlotUtils.var"#27#29"{Main.var"#1#2"}, Tuple{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.isfinite), Tuple{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isfinite), Tuple{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.any), Base.BitArray{1}})
@precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Base.BitArray{1}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Base.ExtremaMap{typeof(Base.identity)}, typeof(Base._extrema_rf)}, Type{Float64}})
@precompile(Tuple{typeof(Base.extrema), Array{Float64, 1}})
@precompile(Tuple{typeof(Base.:(==)), Float64, Int64})
@precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
@precompile(Tuple{typeof(Base.all), Base.BitArray{1}})
@precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Int64})
@precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.zeros), Type{Float64}, Int64})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.PointBased, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(Makie.to_plotspec), Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Makie.PlotSpec{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}})
@precompile(Tuple{typeof(Base.:(==)), Function, Function})
@precompile(Tuple{typeof(Base.isequal), Function, Function})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Main.var"#1#2"}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}, Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Main.var"#1#2"}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Main.var"#1#2"}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Main.var"#1#2"}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Main.var"#1#2"}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, Tuple{IntervalSets.Interval{:closed, :closed, Int64}, Main.var"#1#2"}}}, MakieCore.Attributes, Tuple{Observables.Observable{IntervalSets.Interval{:closed, :closed, Int64}}, Observables.Observable{Main.var"#1#2"}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{MakieCore.var"#lines##kw", NamedTuple{(:linewidth,), Tuple{Int64}}, typeof(MakieCore.lines), GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(MakieCore.plotsym), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Float64, Vararg{Any}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Float64}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Base.vect), GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Type{NamedTuple{(:markersize, :markerspace, :marker), T} where T<:Tuple}, Tuple{Int64, Symbol, Char}})
@precompile(Tuple{MakieCore.var"#scatter!##kw", NamedTuple{(:markersize, :markerspace, :marker), Tuple{Int64, Symbol, Char}}, typeof(MakieCore.scatter!), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:markersize, :markerspace, :marker), Tuple{Int64, Symbol, Char}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Makie.Axis, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Char})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Char})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Char}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Char}})
@precompile(Tuple{typeof(GLMakie.lift_convert), Symbol, Observables.Observable{Char}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Char}, MakieCore.Key{:marker}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Char}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Char}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Char}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:scatter}}, Observables.Observable{Char}}, Tuple{Observables.Observable{Char}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Char}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Observables.Observable{Char}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Observables.Observable{Char}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Char}})
@precompile(Tuple{typeof(Base.get), Base.Dict{Symbol, Any}, Symbol, Observables.Observable{FreeTypeAbstraction.FTFont}})
@precompile(Tuple{typeof(Base.get), Base.Dict{Symbol, Any}, Symbol, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(Base.map), typeof(GLMakie.rescale_glyph), Observables.Observable{Char}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Char}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Char}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Char}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rescale_glyph), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Char}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rescale_glyph), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Char}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rescale_glyph), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Char}, Observables.Observable{FreeTypeAbstraction.FTFont}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), Observables.Observable{Char}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#62#63", Observables.Observable{Char}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{Char}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{Char}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#62#63", Observables.Observable{Int32}}, Tuple{Observables.Observable{Char}}}}})
@precompile(Tuple{typeof(Base.map), typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{Char}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Char}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Char}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.primitive_uv_offset_width), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Char}}}}})
@precompile(Tuple{typeof(GLMakie.primitive_distancefield), Observables.Observable{Char}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth), T} where T<:Tuple}, Tuple{Array{Float64, 1}, Int64}})
@precompile(Tuple{MakieCore.var"#lines##kw", NamedTuple{(:color, :linewidth), Tuple{Array{Float64, 1}, Int64}}, typeof(MakieCore.lines), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"##lines#31", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:color, :linewidth), Tuple{Array{Float64, 1}, Int64}}}, typeof(MakieCore.lines), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:color, :linewidth), Tuple{Array{Float64, 1}, Int64}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{Float64, 1}, Array{Float64, 1}}}}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 1}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Observables.Observable{Array{Float64, 1}}, Vararg{Observables.Observable{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{Float64, 1}}, Vararg{Observables.Observable{Array{Float64, 1}}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{Float64, 1}}, Vararg{Observables.Observable{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{Float64, 1}, Array{Float64, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.distinct_extrema_nan), Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float64, Float64}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Tuple{Float64, Float64}}, Symbol})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{Type{MakieCore.Key{:colorrange}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:lines}, MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:lines}}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:lines}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#189#190", Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#189#190", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#189#190", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#189#190", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Base.:(==)), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{Float32}})
@precompile(Tuple{typeof(GLMakie.intensity_convert), Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, UInt32}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{1}}}, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.map_texture_paramers), Tuple{Symbol}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, Tuple{UInt32}}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Symbol, Any}, 1}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{1}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}, UInt32, Float32})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(ColorTypes.ccolor), Type{ColorTypes.RGBA{Float32}}, Type{ColorTypes.RGBA{Float64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}}, Function, Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}, Float64}}}, Function, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}, Float64}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}, Float64}}})
@precompile(Tuple{typeof(Base.ntuple), Base.Broadcast.var"#29#30"{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Int64, Int64, Int64, Int64}, Tuple{Int64, Int64, Int64, Int64}}}, Float64}}}, Base.Val{4}})
@precompile(Tuple{typeof(Base.:(==)), Int64})
@precompile(Tuple{Base.Fix2{typeof(Base.:(==)), Int64}, Float64})
@precompile(Tuple{typeof(Base.rand), Type{ColorTypes.RGBA{Float32}}, Int64})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth), T} where T<:Tuple}, Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Int64}})
@precompile(Tuple{MakieCore.var"#lines##kw", NamedTuple{(:color, :linewidth), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Int64}}, typeof(MakieCore.lines), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"##lines#31", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:color, :linewidth), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Int64}}}, typeof(MakieCore.lines), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:color, :linewidth), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Int64}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(MakieCore.lines), GeometryBasics.HyperSphere{2, Float32}})
@precompile(Tuple{typeof(Base.:(*)), Int64, Base.Irrational{:π}})
@precompile(Tuple{typeof(Base.:(-)), Float64, Int64})
@precompile(Tuple{typeof(Base.:(/)), Float64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{Base.LinRange{Float64, Int64}}, Base.LinRange{Float64, Int64}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.iterate), Base.LinRange{Float64, Int64}})
@precompile(Tuple{typeof(Base.:(+)), Float64, Base.Irrational{:π}})
@precompile(Tuple{typeof(Base.isinf), Float64})
@precompile(Tuple{typeof(Base.Math.poshighword), Float64})
@precompile(Tuple{typeof(Base.Math.cody_waite_ext_pio2), Float64, UInt32})
@precompile(Tuple{typeof(Base.Math.sin_kernel), Base.Math.DoubleFloat64})
@precompile(Tuple{typeof(Base.Math.cos_kernel), Base.Math.DoubleFloat64})
@precompile(Tuple{typeof(Base.iterate), Base.LinRange{Float64, Int64}, Int64})
@precompile(Tuple{typeof(Base.Math.cody_waite_2c_pio2), Float64, Float64, Int64})
@precompile(Tuple{typeof(Base.length), Base.LinRange{Float64, Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperSphere{2, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperSphere{2, Float32}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.HyperSphere{2, Float32}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, GeometryBasics.HyperSphere{2, Float32}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:lines}}, Float64})
@precompile(Tuple{typeof(MakieCore.lines), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines#31", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.lines), IntervalSets.Interval{:closed, :closed, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Attributes, IntervalSets.Interval{:closed, :closed, Int64}, Function})
@precompile(Tuple{Type{NamedTuple{(:stop, :length), T} where T<:Tuple}, Tuple{Float64, Int64}})
@precompile(Tuple{Base.var"#range##kw", NamedTuple{(:stop, :length), Tuple{Float64, Int64}}, typeof(Base.range), Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.DefaultArrayStyle{1}, Function, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.sin), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.cos), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.sin), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.cos), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{GeometryBasics.Point{2, Float32}}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.sin), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.cos), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{GeometryBasics.Point{2, Float32}}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.sin), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.cos), Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}}})
@precompile(Tuple{typeof(Base.:(-)), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}})
@precompile(Tuple{Type{Makie.DataAspect}})
@precompile(Tuple{Type{NamedTuple{(:aspect,), T} where T<:Tuple}, Tuple{Makie.DataAspect}})
@precompile(Tuple{Type{NamedTuple{(:markersize, :markerspace, :rotations, :marker, :axis), T} where T<:Tuple}, Tuple{Float64, Symbol, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Char, NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}, Tuple{Symbol}})
@precompile(Tuple{Type{Pair{Symbol, Makie.DataAspect}}, Symbol, Makie.DataAspect})
@precompile(Tuple{MakieCore.var"#scatter##kw", NamedTuple{(:markersize, :markerspace, :rotations, :marker, :axis), Tuple{Float64, Symbol, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Char, NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}}}, typeof(MakieCore.scatter), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Makie.var"#99#105", Float64})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}, Symbol})
@precompile(Tuple{typeof(Base.convert), Type{Union{Float64, Symbol}}, Symbol})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:aspect,), Tuple{Makie.DataAspect}}, Type{Makie.Axis}, Makie.Figure})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Makie.DataAspect})
@precompile(Tuple{Makie.var"#1101#1102", GeometryBasics.HyperRectangle{2, Float32}, GeometryBasics.HyperRectangle{2, Float32}, Makie.DataAspect})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{NamedTuple{(:markersize, :color), T} where T<:Tuple}, Tuple{Int64, Symbol}})
@precompile(Tuple{MakieCore.var"#scatter!##kw", NamedTuple{(:markersize, :color), Tuple{Int64, Symbol}}, typeof(MakieCore.scatter!), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:markersize, :color), Tuple{Int64, Symbol}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Makie.Axis, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:scatter}}, Float64})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Makie.Quaternion{Float64}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}})
@precompile(Tuple{typeof(GLMakie.vec2quaternion), Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#42#43", Observables.Observable{Array{GeometryBasics.Vec{4, Float32}, 1}}}, Tuple{Observables.Observable{Array{Makie.Quaternion{Float64}, 1}}}}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.rand), Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:colormap,), T} where T<:Tuple}, Tuple{Tuple{Symbol, Float64}}})
@precompile(Tuple{MakieCore.var"#heatmap##kw", NamedTuple{(:colormap,), Tuple{Tuple{Symbol, Float64}}}, typeof(MakieCore.heatmap), Array{Float64, 2}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{T} where T, 1}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{Float32, 2}}, 1}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{Float32, 1}}, 1}}})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float64, 2}}}}, Array{Float64, 2}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float64, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 2}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}})
@precompile(Tuple{Type{NamedTuple{(:colormap, :colorrange, :linewidth, :interpolate, :levels, :fxaa, :lowclip, :highclip, :inspectable, :space), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, MakieCore.Automatic, Float64, Bool, Int64, Bool, Nothing, Nothing, Observables.Observable{Any}, Symbol}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:colormap, :colorrange, :linewidth, :interpolate, :levels, :fxaa, :lowclip, :highclip, :inspectable, :space), Tuple{Observables.Observable{Any}, MakieCore.Automatic, Float64, Bool, Int64, Bool, Nothing, Nothing, Observables.Observable{Any}, Symbol}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:colormap, :colorrange, :linewidth, :interpolate, :levels, :fxaa, :lowclip, :highclip, :inspectable, :space), Tuple{Observables.Observable{Any}, MakieCore.Automatic, Float64, Bool, Int64, Bool, Nothing, Nothing, Observables.Observable{Any}, Symbol}}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :colormap, :colorrange, :interpolate, :levels, :fxaa, :lowclip, :highclip), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float64, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Bool, Int64, Bool, Nothing, Nothing}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Observables.Observable{Array{Float32, 2}}, Symbol})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.distinct_extrema_nan), Array{Float32, 2}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Observables.Observable{Tuple{Float32, Float32}}, Symbol})
@precompile(Tuple{Type{Base.Val{:x}}})
@precompile(Tuple{Type{Base.Val{:y}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Float32, 1}, Array{Float32, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Float32, Vararg{Any}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float32, Float32, Int64}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Tuple{Float32, Float32, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Float64, Float64}}, Symbol, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float64, Float64}}, Tuple{Int64, Int64}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Type{NamedTuple{(:minfilter,), T} where T<:Tuple}, Tuple{Symbol}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, T} where T}, Float32, Float32, Float32, Float32})
@precompile(Tuple{typeof(Base.extrema), GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcastable), Tuple{Tuple{Int64, Int64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, Type{Base.LinRange{T, L} where L<:Integer where T}, Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{2, Float32}, Tuple{Int64, Int64}}}}, Type, Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{2, Float32}, Tuple{Int64, Int64}}, Nothing})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{2}}, Type{Base.LinRange{T, L} where L<:Integer where T}, Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{2, Float32}, Tuple{Int64, Int64}}}}, Type, Tuple{GeometryBasics.Vec{2, Float32}, GeometryBasics.Vec{2, Float32}, Tuple{Int64, Int64}}, Tuple{StaticArrays.SOneTo{2}}})
@precompile(Tuple{typeof(Base.:(/)), Float32, Int64})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Base.LinRange{Float32, Int64}}}, Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}})
@precompile(Tuple{typeof(Base.Iterators.product), Base.LinRange{Float32, Int64}, Vararg{Base.LinRange{Float32, Int64}}})
@precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#92#93", Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}}})
@precompile(Tuple{typeof(IterTools.ivec), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}}, GeometryBasics.var"#92#93"}})
@precompile(Tuple{typeof(GeometryBasics.metafree), IterTools.IVec{Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}}, GeometryBasics.var"#92#93"}}})
@precompile(Tuple{typeof(Base.Iterators._piterate), Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}})
@precompile(Tuple{typeof(Base.map), Base.Iterators.var"#20#21", Tuple{Tuple{Float32, Int64}, Tuple{Float32, Int64}}})
@precompile(Tuple{GeometryBasics.var"#92#93", Tuple{Float32, Float32}})
@precompile(Tuple{typeof(GeometryBasics.convert_simplex), Type{GeometryBasics.Point{2, Float32}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.iterate), IterTools.IVec{Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float32, Int64}, Base.LinRange{Float32, Int64}}}, GeometryBasics.var"#92#93"}}, Tuple{Tuple{Float32, Int64}, Tuple{Float32, Int64}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:heatmap}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:heatmap}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}}, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:heatmap}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:heatmap}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:heatmap}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:heatmap}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:highclip}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:highclip}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#185#186", Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{GLMakie.var"#185#186", Nothing, Tuple{Symbol, Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{ColorTypes.RGBA{Float32}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#185#186", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#185#186", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#185#186", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:heatmap}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:interpolate}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:interpolate}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:heatmap}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:heatmap}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:heatmap}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:heatmap}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:heatmap}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:heatmap}}, Array{Float32, 2}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Float32, 2}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:heatmap}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:heatmap}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:heatmap}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:heatmap}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:heatmap}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:levels}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:levels}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:levels}, MakieCore.Key{:heatmap}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:levels}, MakieCore.Key{:heatmap}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:levels}, MakieCore.Key{:heatmap}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:levels}, MakieCore.Key{:heatmap}}, Observables.Observable{Int64}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:heatmap}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:heatmap}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:lowclip}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:lowclip}, MakieCore.Key{:heatmap}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#187#188", Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{GLMakie.var"#187#188", Nothing, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#187#188", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#187#188", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#187#188", Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Tuple{typeof(Base.identity), typeof(Base.identity)}, Array{Float32, 1}, Array{Float32, 1}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.first), Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.last), Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:minfilter,), Tuple{Symbol}}, Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.TextureParameters{NDim} where NDim}, Symbol, Symbol, Tuple{Symbol}, Float32, Array{UInt32, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 1}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 1}, UInt32, Float32})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 1}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 1}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 1}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#229#234", Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Int64}, Observables.Observable{Array{Float32, 1}}, Vararg{Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{Float32, 1}}, Vararg{Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{Float32, 1}}, Vararg{Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#229#234", Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#229#234", Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#229#234", Observables.Observable{Int64}}, Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Makie.el32convert), Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.el32convert), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.el32convert), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.el32convert), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:minfilter,), Tuple{Symbol}}, Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 2}, UInt32, Float32})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 2}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 2}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 2}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.HyperRectangle{2, Float32}})
@precompile(Tuple{typeof(GLMakie.to_opengl_mesh!), Base.Dict{Symbol, Any}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.signal_convert), Type, Observables.Observable{Int64}})
@precompile(Tuple{typeof(Base.map), typeof(Base.convert), Observables.Observable{DataType}, Observables.Observable{Int64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int64}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int64}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.convert), Observables.Observable{Float32}}, Tuple{Observables.Observable{DataType}, Observables.Observable{Int64}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#14#16", Tuple{String, String, String}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple}, Tuple{String, String, String}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(Base.all), Function, Tuple{String, String, String}})
@precompile(Tuple{typeof(Base._all), GLMakie.GLAbstraction.var"#51#56", Tuple{String, String, String}, Base.Colon})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String}}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(Base.get!), GLMakie.GLAbstraction.var"#54#59"{GLMakie.GLAbstraction.ShaderCache, Array{Array{String, 1}, 1}, Array{Array{String, 1}, 1}, Tuple{String, String, String}}, Base.Dict{Any, GLMakie.GLAbstraction.GLProgram}, Tuple{Tuple{String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.StandardPostrenderInstanced{T} where T}, Observables.Observable{Int32}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}, UInt32})
@precompile(Tuple{typeof(Base.setproperty!), GLMakie.GLAbstraction.RenderObject{GLMakie.GLAbstraction.StandardPrerender}, Symbol, GLMakie.GLAbstraction.StandardPostrenderInstanced{Observables.Observable{Int32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{GLMakie.GLAbstraction.StandardPostrenderInstanced{Observables.Observable{Int32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.renderinstanced), GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}, Int32, UInt32})
@precompile(Tuple{typeof(Makie.contour), Array{Float64, 2}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, 1}}})
@precompile(Tuple{Type{Base.Val{:levels}}})
@precompile(Tuple{Type{Base.Val{:linewidth}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.contour, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.contour, Tuple{Array{Float64, 2}}}}, Array{Float64, 2}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :levels, :linewidth, :linestyle, :alpha, :enable_depth, :transparency), T} where T<:Tuple}, Tuple{Nothing, Observables.Observable{Any}, MakieCore.Automatic, Int64, Float64, Nothing, Float64, Bool, Bool}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :colormap, :colorrange, :levels, :linewidth, :linestyle, :alpha, :enable_depth, :transparency), Tuple{Nothing, Observables.Observable{Any}, MakieCore.Automatic, Int64, Float64, Nothing, Float64, Bool, Bool}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :colormap, :colorrange, :levels, :linewidth, :linestyle, :alpha, :enable_depth, :transparency), Tuple{Nothing, Observables.Observable{Any}, MakieCore.Automatic, Int64, Float64, Nothing, Float64, Bool, Bool}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :levels, :linestyle, :alpha, :enable_depth), Tuple{Bool, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float64, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Nothing, Observables.Observable{Any}, MakieCore.Automatic, Int64, Nothing, Float64, Bool}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Base.ntuple), Base.var"#71#72"{Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}}, Base.UnitRange{Int64}}, Int64})
@precompile(Tuple{typeof(Base.map), typeof(Makie.nan_extrema), Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.nan_extrema), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.nan_extrema), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.nan_extrema), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#415#418", Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Makie.var"#415#418", Int64, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Base.StepRangeLen{Float32, Float64, Float64, Int64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}})
@precompile(Tuple{typeof(Makie.replace_automatic!), Makie.var"#416#419"{Observables.Observable{GeometryBasics.Vec{2, Float32}}}, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Symbol})
@precompile(Tuple{typeof(Base.map), typeof(Makie.color_per_level), Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(Makie.color_per_level), Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{typeof(Makie.color_per_level), Nothing, Symbol, GeometryBasics.Vec{2, Float32}, Float64, Base.StepRangeLen{Float32, Float64, Float64, Int64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Float32})
@precompile(Tuple{typeof(Base.map), Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:VT,), Tuple{Nothing}}, Symbol})
@precompile(Tuple{typeof(Base.abs), Float32})
@precompile(Tuple{typeof(Base.abs2), Float32})
@precompile(Tuple{typeof(Base.rem), UInt128, Type{UInt64}})
@precompile(Tuple{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.getindex), Type{Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Base.push!), Array{Tuple{Float32, Float32}, 1}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.reverse!), Array{Tuple{Float32, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.first), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.last), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth, :inspectable, :transparency, :linestyle), T} where T<:Tuple}, Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:color, :linewidth, :inspectable, :transparency, :linestyle), Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :linewidth, :inspectable, :transparency, :linestyle), Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :linewidth, :inspectable, :transparency, :linestyle), Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.hash), Tuple{Int64}, UInt64})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{Base.ComposedFunction{typeof(Base.extrema), typeof(Observables.to_value)}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Type{GeometryBasics.Point{2, Float32}}, Float32, Vararg{Float32}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Float32}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.contour, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{Makie.contour, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{Makie.contour, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.randn), Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:levels,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{Makie.var"#contour##kw", NamedTuple{(:levels,), Tuple{Int64}}, typeof(Makie.contour), Array{Float64, 2}})
@precompile(Tuple{Type{NamedTuple{(:levels,), T} where T<:Tuple}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{Makie.var"#contour##kw", NamedTuple{(:levels,), Tuple{Array{Float64, 1}}}, typeof(Makie.contour), Array{Float64, 2}})
@precompile(Tuple{Makie.var"#415#418", Array{Float64, 1}, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Float64, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#415#418", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Makie.color_per_level), Nothing, Symbol, GeometryBasics.Vec{2, Float32}, Float64, Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Float64, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.color_per_level), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}, Array{Float64, 1}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#417#420"{MakieCore.Combined{Makie.contour, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.vect), Symbol, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Symbol, Symbol, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Symbol, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Tuple{Symbol, Symbol, Tuple{Symbol, Float64}}})
@precompile(Tuple{Type{NamedTuple{(:levels, :color, :linewidth), T} where T<:Tuple}, Tuple{Array{Float64, 1}, Array{Any, 1}, Int64}})
@precompile(Tuple{Makie.var"#contour##kw", NamedTuple{(:levels, :color, :linewidth), Tuple{Array{Float64, 1}, Array{Any, 1}, Int64}}, typeof(Makie.contour), Array{Float64, 2}})
@precompile(Tuple{typeof(Makie.color_per_level), Array{Any, 1}, Symbol, GeometryBasics.Vec{2, Float32}, Float64, Array{Float64, 1}})
@precompile(Tuple{typeof(Base._similar_for), Array{Any, 1}, Type{ColorTypes.RGBA{Float32}}, Base.Generator{Array{Any, 1}, typeof(Makie.to_color)}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{ColorTypes.RGBA{Float32}, 1}, ColorTypes.RGBA{Float32}, Base.Generator{Array{Any, 1}, typeof(Makie.to_color)}, Int64})
@precompile(Tuple{typeof(Makie.to_color), Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 2}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Array{Float64, 2}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(*)), Tuple{Array{Float64, 2}, Int64}}, Int64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(*)), Tuple{Array{Float64, 2}, Int64}}, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(*)), Tuple{Array{Float64, 2}, Int64}}, Int64}}})
@precompile(Tuple{typeof(Base.vect), Tuple{Symbol, Float64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Tuple{Symbol, Float64}, Symbol, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_type), Type{Tuple{Symbol, Float64}}, Type{Any}})
@precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Tuple{Tuple{Symbol, Float64}, Symbol, Symbol, Symbol, Tuple{Symbol, Float64}}})
@precompile(Tuple{Type{NamedTuple{(:levels, :colormap, :colorrange), T} where T<:Tuple}, Tuple{Array{Float64, 1}, Array{Any, 1}, Tuple{Float64, Float64}}})
@precompile(Tuple{Makie.var"#contour##kw", NamedTuple{(:levels, :colormap, :colorrange), Tuple{Array{Float64, 1}, Array{Any, 1}, Tuple{Float64, Float64}}}, typeof(Makie.contour), Array{Float64, 2}})
@precompile(Tuple{typeof(Base.:(==)), Tuple{Float64, Float64}, MakieCore.Automatic})
@precompile(Tuple{typeof(Makie.color_per_level), Nothing, Array{Any, 1}, Tuple{Float64, Float64}, Float64, Array{Float64, 1}})
@precompile(Tuple{Type{NamedTuple{(:arrow_size,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{Makie.var"#streamplot##kw", NamedTuple{(:arrow_size,), Tuple{Int64}}, typeof(Makie.streamplot), Function, Vararg{Any}})
@precompile(Tuple{Makie.var"##streamplot#589", Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:arrow_size,), Tuple{Int64}}}, typeof(Makie.streamplot), Function, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:arrow_size,), Tuple{Int64}}, typeof(MakieCore.plot), Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}, Function, IntervalSets.Interval{:closed, :closed, Int64}, Vararg{IntervalSets.Interval{:closed, :closed, Int64}}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:arrow_size,), Tuple{Int64}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}, Function, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}, MakieCore.Attributes, Function, IntervalSets.Interval{:closed, :closed, Int64}, IntervalSets.Interval{:closed, :closed, Int64}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}, Function, IntervalSets.Interval{:closed, :closed, Int64}, IntervalSets.Interval{:closed, :closed, Int64}})
@precompile(Tuple{typeof(MakieCore.plotfunc), Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, Function, IntervalSets.Interval{:closed, :closed, Int64}, IntervalSets.Interval{:closed, :closed, Int64}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, 1}}})
@precompile(Tuple{Type{Base.Val{:f}}})
@precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Symbol, Symbol}})
@precompile(Tuple{Type{Base.Val{:limits}}})
@precompile(Tuple{Type{Base.Val{:gridsize}}})
@precompile(Tuple{Type{Base.Val{:stepsize}}})
@precompile(Tuple{Type{Base.Val{:maxsteps}}})
@precompile(Tuple{Type{Base.Val{:density}}})
@precompile(Tuple{Type{Base.Val{:quality}}})
@precompile(Tuple{Type{Base.Val{:arrow_head}}})
@precompile(Tuple{Type{Base.Val{:arrow_size}}})
@precompile(Tuple{Type{NamedTuple{(:stepsize, :gridsize, :maxsteps, :colormap, :colorrange, :arrow_size, :arrow_head, :density, :quality), T} where T<:Tuple}, Tuple{Float64, Tuple{Int64, Int64, Int64}, Int64, Observables.Observable{Any}, MakieCore.Automatic, Int64, MakieCore.Automatic, Float64, Int64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:stepsize, :gridsize, :maxsteps, :colormap, :colorrange, :arrow_size, :arrow_head, :density, :quality), Tuple{Float64, Tuple{Int64, Int64, Int64}, Int64, Observables.Observable{Any}, MakieCore.Automatic, Int64, MakieCore.Automatic, Float64, Int64}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Int64, Int64, Int64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Int64, Int64, Int64}}})
@precompile(Tuple{typeof(Base.merge), MakieCore.Attributes, MakieCore.Attributes})
@precompile(Tuple{Type{GeometryBasics.Point{3, Float32}}, Int64})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.LinRange{Float64, Int64}, 1}}})
@precompile(Tuple{typeof(Base.:(-)), Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Base.StepRange{Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(^)), Tuple{Float64, Base.StepRange{Int64, Int64}}}}, Function, Tuple{Float64, Base.StepRange{Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.combine_axes), Float64, Base.StepRange{Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.StepRange{Int64, Int64}}}}, Function, Tuple{Float64, Base.StepRange{Int64, Int64}}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.axes), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.StepRange{Int64, Int64}}}})
@precompile(Tuple{typeof(Base.convert), Type{Base.Broadcast.Broadcasted{Nothing, Axes, F, Args} where Args<:Tuple where F where Axes}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.StepRange{Int64, Int64}}}})
@precompile(Tuple{typeof(Base.axes), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.StepRange{Int64, Int64}}}})
@precompile(Tuple{typeof(Base.tail), Tuple{Float64, Base.StepRange{Int64, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.extrude), Base.StepRange{Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}}}, Function, Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.eachindex), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}}})
@precompile(Tuple{typeof(Base.SimdLoop.simd_index), Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.checkbounds), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}}, Int64})
@precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}, Int64})
@precompile(Tuple{typeof(Base.axes), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(^)), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}}})
@precompile(Tuple{typeof(Base.tail), Tuple{Float64, Base.Broadcast.Extruded{Base.StepRange{Int64, Int64}, Tuple{Bool}, Tuple{Int64}}}})
@precompile(Tuple{typeof(Base.first), Base.StepRange{Int64, Int64}})
@precompile(Tuple{typeof(Base.step_hp), Base.StepRange{Int64, Int64}})
@precompile(Tuple{GeometryBasics.var"##s5#9", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#10#19", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryBasics.var"#10#19"}})
@precompile(Tuple{Makie.var"#600#607", Function, GeometryBasics.HyperRectangle{2, Int64}, Tuple{Int64, Int64, Int64}, Float64, Int64, Float64})
@precompile(Tuple{typeof(Base.rem), Float64, Int64})
@precompile(Tuple{typeof(Base.ceil), Type{Int64}, Float64})
@precompile(Tuple{typeof(Base.Math.clamp), Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.getindex), Base.BitArray{2}, Base.IteratorsMD.CartesianIndex{2}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.ntuple), Makie.var"#595#599"{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}, Base.IteratorsMD.CartesianIndex{2}}, Int64})
@precompile(Tuple{Type{GeometryBasics.Point{2, T} where T}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(StaticArrays._norm), StaticArrays.Size{(2,)}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.push!), Array{GeometryBasics.Point{2, Float32}, 1}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{2, Float64}, Float64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{GeometryBasics.Point{2, Float64}, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{GeometryBasics.Point{2, Float64}, Float64}}})
@precompile(Tuple{typeof(Base.push!), Array{GeometryBasics.Vec{2, Float32}, 1}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.push!), Array{Float64, 1}, Float64})
@precompile(Tuple{typeof(Base.setindex!), Base.BitArray{2}, Bool, Base.IteratorsMD.CartesianIndex{2}})
@precompile(Tuple{typeof(Base.push!), Array{GeometryBasics.Point{2, Float32}, 1}, GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.push!), Array{Float64, 1}, Float64, Float64})
@precompile(Tuple{typeof(Base.in), GeometryBasics.Point{2, Float64}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}}, Float64})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}}, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{2, Float64}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}}, Float64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{GeometryBasics.Point{2, Float64}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}}, Float64}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{2, Float64}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(/)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Int64, GeometryBasics.Point{2, Float32}}}, GeometryBasics.Point{2, Float64}}}, Float64}}}}})
@precompile(Tuple{Type{Tuple}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}, Tuple{Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.Sort.searchsortedlast), Tuple{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}, Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.Sort.searchsortedlast), Tuple{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.:(!=)), Base.IteratorsMD.CartesianIndex{2}, Base.IteratorsMD.CartesianIndex{2}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#601#608", Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#601#608", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#601#608", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#601#608", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.last), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :linestyle, :linewidth, :inspectable, :transparency), T} where T<:Tuple}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.ndims), GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64})
@precompile(Tuple{GeometryBasics.var"##s7#11", Any, Any, Any})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GeometryBasics.size_or), Type{GeometryBasics.Point{S, T} where T where S}, Tuple{Int64}})
@precompile(Tuple{Type{Float32}, Float32})
@precompile(Tuple{StaticArrays.var"##s25#430", Any, Any, Any, Any, Any, Type, Any, Any, Any})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), Function, Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), StaticArrays.var"#431#433"{Tuple{Int64, Int64}}, Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Symbol})
@precompile(Tuple{Type{GeometryBasics.Vec{S, T} where T where S}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.Broadcast.cat_nested), Float32})
@precompile(Tuple{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Float32, Float32, Vararg{Float32}})
@precompile(Tuple{Base.Broadcast.var"#15#17", Float32, Vararg{Float32}})
@precompile(Tuple{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, Float32, Float32})
@precompile(Tuple{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Float32, Float32})
@precompile(Tuple{Base.Broadcast.var"#25#26", Float32})
@precompile(Tuple{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#9#11"}, Float32})
@precompile(Tuple{Type{Float64}, Float32})
@precompile(Tuple{typeof(Base.map), Makie.var"#602#609"{Makie.Scene}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.setindex!), Array{Float32, 1}, Float32, Int64})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#602#609"{Makie.Scene}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#602#609"{Makie.Scene}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#602#609"{Makie.Scene}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Makie.scatterfun), Int64})
@precompile(Tuple{typeof(Base.map), typeof(Base.first), Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#605#612"{Int64}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Int64, Vararg{Int64}})
@precompile(Tuple{typeof(StaticArraysCore.convert_ntuple), Type{Float32}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Float32, Float32, Float32}}, Tuple{Float32, Float32, Float32}})
@precompile(Tuple{StructArrays.var"##s3#89", Any, Any, Any, Any, Any, Any})
@precompile(Tuple{typeof(Base.Iterators.zip), Tuple{Symbol, Symbol}, Core.SimpleVector})
@precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}})
@precompile(Tuple{Type{Base.Iterators.Zip{Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}}}, Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}}, Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}})
@precompile(Tuple{typeof(StructArrays.array_names_types), Type{StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}}})
@precompile(Tuple{typeof(StructArrays._foreachfield), Base.Iterators.Zip{Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}}, Int64})
@precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Symbol, Symbol}}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Symbol, Symbol}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(StructArrays.apply_f_to_vars_fields), Base.Iterators.Zip{Tuple{Tuple{Symbol, Symbol}, Core.SimpleVector}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Makie.var"#605#612"{Int64}, Int64, MakieCore.Automatic})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Char}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Char}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#605#612"{Int64}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#605#612"{Int64}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#605#612"{Int64}, Observables.Observable{Char}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#606#613", Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#606#613", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#606#613", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#606#613", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{Type{NamedTuple{(:markersize, :marker, :color, :rotations, :colormap, :colorrange, :inspectable, :transparency), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Char}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Char}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Tuple{Float64, Float64}}, Symbol})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}, MakieCore.Attributes, Function, IntervalSets.Interval{:closed, :closed, Int64}, IntervalSets.Interval{:closed, :closed, Int64}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{Makie.streamplot, ArgType} where ArgType}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#602#609"{Makie.Scene}, Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#602#609"{Makie.Scene}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Float64, 1}, Array{Float64, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{MakieCore.Billboard{Array{Float32, 1}}}, Symbol, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{MakieCore.Billboard{Array{Float32, 1}}}, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, MakieCore.Billboard{Array{Float32, 1}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Makie.Quaternion{Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:scatter}, MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:scatter}}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:scatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:scatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{Base.var"#range##kw", NamedTuple{(:stop, :length), Tuple{Float64, Int64}}, typeof(Base.range), Float64})
@precompile(Tuple{Type{NamedTuple{(:show_axis,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{Type{NamedTuple{(:algorithm, :isorange, :axis), T} where T<:Tuple}, Tuple{Symbol, Float32, NamedTuple{(:show_axis,), Tuple{Bool}}}})
@precompile(Tuple{MakieCore.var"#volume##kw", NamedTuple{(:algorithm, :isorange, :axis), Tuple{Symbol, Float32, NamedTuple{(:show_axis,), Tuple{Bool}}}}, typeof(MakieCore.volume), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##volume#23", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:algorithm, :isorange, :axis), Tuple{Symbol, Float32, NamedTuple{(:show_axis,), Tuple{Bool}}}}}, typeof(MakieCore.volume), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:algorithm, :isorange, :axis), Tuple{Symbol, Float32, NamedTuple{(:show_axis,), Tuple{Bool}}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(:show_axis,), Tuple{Bool}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:algorithm, :isorange), Tuple{Symbol, Float32}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot!#128", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plotfunc), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.VolumeLike, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Function})
@precompile(Tuple{typeof(Base.ntuple), Base.Returns{Bool}, Base.Val{3}})
@precompile(Tuple{typeof(Base.tail), Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(tuple), Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, 1}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{Float32, 3}}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}})
@precompile(Tuple{Type{NamedTuple{(:algorithm, :isovalue, :isorange, :color, :colormap, :colorrange, :fxaa, :inspectable, :space), T} where T<:Tuple}, Tuple{Symbol, Float64, Float64, Nothing, Observables.Observable{Any}, Tuple{Int64, Int64}, Bool, Observables.Observable{Any}, Symbol}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:algorithm, :isovalue, :isorange, :color, :colormap, :colorrange, :fxaa, :inspectable, :space), Tuple{Symbol, Float64, Float64, Nothing, Observables.Observable{Any}, Tuple{Int64, Int64}, Bool, Observables.Observable{Any}, Symbol}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:algorithm, :isovalue, :isorange, :color, :colormap, :colorrange, :fxaa, :inspectable, :space), Tuple{Symbol, Float64, Float64, Nothing, Observables.Observable{Any}, Tuple{Int64, Int64}, Bool, Observables.Observable{Any}, Symbol}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :algorithm, :isovalue, :isorange, :color, :colormap, :colorrange, :fxaa), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Float64, Float64, Nothing, Observables.Observable{Any}, Tuple{Int64, Int64}, Bool}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Int64, Int64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 3}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 3}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 3}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{typeof(Base.map), Base.ComposedFunction{typeof(Base.extrema), typeof(Observables.to_value)}, Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{Type{GeometryBasics.Point{3, Float32}}, Float64, Vararg{Float64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Makie.foreach_transformed), Makie.var"#674#675"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{GeometryBasics.Point{3, Float32}, 1}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, Function})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Makie.project), StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{Makie.var"#674#675"{Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:show_axis,), Tuple{Bool}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:show_axis,), Tuple{Bool}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:show_axis,), Tuple{Bool}}, Type{Makie.LScene}, Makie.Figure})
@precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, Nothing}, Type{Symbol}, Type{Union{Nothing, Bool}}})
@precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, Union{Nothing, Bool}}, Base.Dict{Symbol, Nothing}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Union{Nothing, Bool}}, Bool, Symbol})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Union{Nothing, Bool}}, Tuple{Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Bool}}, Int64})
@precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, Union{Nothing, Bool}}, Type{Symbol}, Type{Any}})
@precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, Any}, Base.Dict{Symbol, Union{Nothing, Bool}}})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Bool}}, Int64})
@precompile(Tuple{Type{Makie.LScene}, Makie.Figure, GridLayoutBase.LayoutObservables{GridLayoutBase.GridLayout}, Makie.Scene})
@precompile(Tuple{Type{NamedTuple{(:clear, :camera), T} where T<:Tuple}, Tuple{Bool, typeof(Makie.cam3d!)}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:clear, :camera), Tuple{Bool, typeof(Makie.cam3d!)}}, NamedTuple{(), Tuple{}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:clear, :camera), Tuple{Bool, typeof(Makie.cam3d!)}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:clear, :camera), Tuple{Bool, typeof(Makie.cam3d!)}}}})
@precompile(Tuple{Type{Base.Val{:camera_controls}}})
@precompile(Tuple{Type{ColorTypes.RGB{Float32}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:clear, :camera), Tuple{Bool, typeof(Makie.cam3d!)}}})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:ticks,), Tuple{NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}}}, Tuple{Symbol}})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(MakieCore.node_pairs), Base.Pairs{Symbol, MakieCore.Automatic, Tuple{Symbol, Symbol}, NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}}})
@precompile(Tuple{Type{Pair{Symbol, MakieCore.Automatic}}, Symbol, MakieCore.Automatic})
@precompile(Tuple{Type{Base.Val{:ticks}}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Val{:padding}}})
@precompile(Tuple{Type{Base.Val{:scale}}})
@precompile(Tuple{Makie.var"#350#354"{Int64}, Int64})
@precompile(Tuple{typeof(Base.ntuple), GeometryBasics.var"#1#2"{Int64}, Base.Val{3}})
@precompile(Tuple{typeof(GeometryBasics.unit), Type{GeometryBasics.Vec{3, Float32}}, Int64})
@precompile(Tuple{Type{Char}, UInt16})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:by,), Tuple{Base.var"#96#97"{typeof(Makie.isaxis)}}}, Symbol})
@precompile(Tuple{Type{Base.Order.By{Base.var"#96#97"{typeof(Makie.isaxis)}, Base.Order.ForwardOrdering}}, Function, Base.Order.ForwardOrdering})
@precompile(Tuple{typeof(Makie.initialize_block!), Makie.LScene})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.round_to_IRect2D), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.round_to_IRect2D), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.round_to_IRect2D), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}}})
@precompile(Tuple{Type{NamedTuple{(:events, :px_area, :clear, :camera, :camera_controls, :parent, :transformation, :theme, :current_screens), T} where T<:Tuple}, Tuple{Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, typeof(Makie.cam3d!), Makie.EmptyCamera, Makie.Scene, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:events, :px_area, :clear, :camera, :camera_controls, :parent, :transformation, :theme, :current_screens), Tuple{Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, typeof(Makie.cam3d!), Makie.EmptyCamera, Makie.Scene, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}}}, Type{Makie.Scene}})
@precompile(Tuple{Makie.var"##Scene#68", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Makie.Events, Bool, Function, typeof(Makie.cam3d!), Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Makie.Scene, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Makie.Scene}})
@precompile(Tuple{Type{NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), T} where T<:Tuple}, Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}})
@precompile(Tuple{typeof(Base.keys), NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}})
@precompile(Tuple{typeof(MakieCore.node_pairs), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, MakieCore.var"#3#4", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}})
@precompile(Tuple{Type{Base.Generator{Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}, MakieCore.var"#3#4"}}, Function, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}})
@precompile(Tuple{typeof(Base.convert), Type{Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:up_key, :down_key, :left_key, :right_key, :forward_key, :backward_key, :zoom_in_key, :zoom_out_key, :stretch_view_key, :contract_view_key, :pan_left_key, :pan_right_key, :tilt_up_key, :tilt_down_key, :roll_clockwise_key, :roll_counterclockwise_key, :translation_button, :scroll_mod, :rotation_button, :fix_x_key, :fix_y_key, :fix_z_key, :reset, :keyboard_rotationspeed, :keyboard_translationspeed, :keyboard_zoomspeed, :mouse_rotationspeed, :mouse_translationspeed, :mouse_zoomspeed, :circular_rotation, :fov, :near, :far, :rotation_center, :update_rate, :projectiontype, :fixed_axis, :zoom_shift_lookat, :cad, :selected), Tuple{Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Mouse.Button, Bool, Makie.Mouse.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Makie.Keyboard.Button, Float32, Float32, Float32, Float32, Float32, Float32, Tuple{Bool, Bool, Bool}, Float32, MakieCore.Automatic, MakieCore.Automatic, Symbol, Float64, Makie.ProjectionEnum, Bool, Bool, Bool, Bool}}}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Makie.Keyboard.Button})
@precompile(Tuple{typeof(Makie.cameracontrols), Nothing})
@precompile(Tuple{typeof(Makie.deselect_all_cameras!), Nothing})
@precompile(Tuple{Type{Base.Val{:selected}}})
@precompile(Tuple{Type{GeometryBasics.Vec{2, Float32}}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{NamedTuple{(:zoom_shift_lookat, :fixed_axis), T} where T<:Tuple}, Tuple{Bool, Bool}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:zoom_shift_lookat, :fixed_axis), Tuple{Bool, Bool}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:zoom_shift_lookat, :fixed_axis), Tuple{Bool, Bool}}})
@precompile(Tuple{typeof(Makie.cam3d!), Makie.Scene})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Bool, Bool, Bool}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Bool, Bool, Bool}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Bool, Bool, Bool}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Float32})
@precompile(Tuple{Type{Makie.Camera3D}, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Float32}, Observables.Observable{Float64}, MakieCore.Attributes})
@precompile(Tuple{typeof(Base.getproperty), Makie.Camera3D, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#210#219"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}}, Makie.var"#210#219"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#210#219"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#212#221"{Makie.Scene, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#212#221"{Makie.Scene, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#212#221"{Makie.Scene, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#214#223"{Makie.Scene, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#214#223"{Makie.Scene, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#229#233"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#229#233"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#229#233"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#230#234"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#230#234"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#230#234"{Makie.Scene, Makie.Camera3D, Makie.var"#compute_diff#232"{Makie.Scene, Makie.Camera3D}, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#231#235"{Makie.Scene, Makie.Camera3D, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#231#235"{Makie.Scene, Makie.Camera3D, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#231#235"{Makie.Scene, Makie.Camera3D, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#236#238"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#236#238"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#236#238"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Makie.MouseButtonEvent}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#237#239"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#237#239"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#237#239"{Makie.Scene, Makie.Camera3D, Makie.Events, Base.RefValue{Bool}, Base.RefValue{GeometryBasics.Vec{2, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}, Tuple{Observables.Observable{Tuple{Float64, Float64}}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#215#224"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#215#224"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#215#224"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.on), Function, Makie.Camera, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"##on#178", Int64, typeof(Observables.on), Function, Makie.Camera, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#216#225"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#216#225"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#216#225"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Makie.CameraLift{F, Args} where Args where F}, Makie.var"#217#226"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Makie.CameraLift{Makie.var"#217#226"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.CameraLift{Makie.var"#217#226"{Makie.Scene, Makie.Camera3D, MakieCore.Attributes}, Tuple{Observables.Observable{Makie.KeyEvent}}}}})
@precompile(Tuple{typeof(StaticArrays.has_size1), Type{StaticArraysCore.SArray{Tuple{4, S2}, T, 2, L} where L where T where S2}})
@precompile(Tuple{Type{StaticArrays.Length{L} where L}, Int64})
@precompile(Tuple{Type{StaticArrays.Length{16}}})
@precompile(Tuple{Type{Int64}, StaticArrays.Length{16}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}})
@precompile(Tuple{StaticArrays.var"##s25#438", Any, Any, Any, Any, Any, Any, Any, Any, Any})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64, Vararg{Int64}})
@precompile(Tuple{typeof(Base.:(==)), Type, Int64})
@precompile(Tuple{StaticArrays.var"##s25#448", Any, Any, Any, Any, Any, Type, Any, Any, Any})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#449#455", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#449#455"}})
@precompile(Tuple{typeof(Base.Iterators.product), Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}}})
@precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#450#456", Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
@precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Int64})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, StaticArrays.var"#450#456"}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#451#457"{Array{Symbol, 1}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#451#457"{Array{Symbol, 1}}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#452#458"{Tuple{Int64, Int64}, Array{Symbol, 2}, Array{Symbol, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, StaticArrays.var"#452#458"{Tuple{Int64, Int64}, Array{Symbol, 2}, Array{Symbol, 1}}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#453#459"{Tuple{Int64, Int64}, Array{Symbol, 1}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#453#459"{Tuple{Int64, Int64}, Array{Symbol, 1}}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#454#460"{Tuple{Int64, Int64}, Array{Symbol, 2}, Array{Symbol, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, StaticArrays.var"#454#460"{Tuple{Int64, Int64}, Array{Symbol, 2}, Array{Symbol, 1}}}})
@precompile(Tuple{typeof(Base.:(*)), Float32, Float32})
@precompile(Tuple{typeof(Base.muladd), Float32, Float32, Float32})
@precompile(Tuple{typeof(Makie.update_cam!), Makie.Scene, Makie.Camera3D})
@precompile(Tuple{typeof(Base.:(==)), Makie.ProjectionEnum, Makie.ProjectionEnum})
@precompile(Tuple{typeof(Base.Math.clamp), Float32, Float32, Float32})
@precompile(Tuple{typeof(Base.:(/)), Base.Irrational{:π}, Int64})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, L} where L}, LinearAlgebra.UniformScaling{Bool}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}})
@precompile(Tuple{typeof(Makie.perspectiveprojection), Float32, Float32, Float32, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1654#1657"{Makie.LScene}}, Makie.var"#1654#1657"{Makie.LScene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1654#1657"{Makie.LScene}}})
@precompile(Tuple{Makie.var"#1654#1657"{Makie.LScene}, Bool})
@precompile(Tuple{typeof(Base.filter), Makie.var"#997#999"{Makie.LScene}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.getproperty), Makie.LScene, Symbol})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.round_to_IRect2D), Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Float32}}}}, Any})
@precompile(Tuple{typeof(Base.in), Makie.LScene, Array{Any, 1}})
@precompile(Tuple{typeof(Makie.can_be_current_axis), Makie.LScene})
@precompile(Tuple{typeof(Makie.current_axis!), Makie.Figure, Makie.LScene})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Any}, Makie.LScene})
@precompile(Tuple{typeof(Base.setindex!), Makie.Figure, Makie.LScene, Int64, Int64})
@precompile(Tuple{typeof(GridLayoutBase.reporteddimensionsobservable), Makie.LScene})
@precompile(Tuple{typeof(Core.convert), Type{GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.LScene}}, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.LScene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.LScene}}})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.LScene, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.LScene, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.suggestedbboxobservable), Makie.LScene})
@precompile(Tuple{Makie.CameraLift{Makie.var"#215#224"{Makie.Scene, Makie.Camera3D}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{3, Float64}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{3, Float64}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.LScene, Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot!#1651", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.plot!), Makie.LScene, Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(Base.foreach), Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}})
@precompile(Tuple{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{typeof(Base.foreach), Makie.var"#672#673"{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}}, Array{Makie.Scene, 1}})
@precompile(Tuple{typeof(Makie.update_cam!), Makie.Scene, Makie.Camera3D, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Vec{3, Float32}}, Symbol, GeometryBasics.Vec{3, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Vec{3, Float64}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.LScene, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Float64, Vararg{Any}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Int64, Int64}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Tuple{Float64, Int64, Int64}})
@precompile(Tuple{Type{NamedTuple{(:translation,), T} where T<:Tuple}, Tuple{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{Type{NamedTuple{(:algorithm, :transformation), T} where T<:Tuple}, Tuple{Symbol, NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}}})
@precompile(Tuple{MakieCore.var"#volume!##kw", NamedTuple{(:algorithm, :transformation), Tuple{Symbol, NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}}}, typeof(MakieCore.volume!), Makie.LScene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##volume!#24", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:algorithm, :transformation), Tuple{Symbol, NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}}}}, typeof(MakieCore.volume!), Makie.LScene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:algorithm, :transformation), Tuple{Symbol, NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, Makie.LScene, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot!#1652", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:algorithm, :transformation), Tuple{Symbol, NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.volume, ArgType} where ArgType}, Makie.LScene, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), NamedTuple{(:translation,), Tuple{GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(Observables.to_value), MakieCore.Attributes})
@precompile(Tuple{typeof(Observables.to_value), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, Type{Float32}, Tuple{GeometryBasics.Vec{3, Float32}}}}, Type, Tuple{GeometryBasics.Vec{3, Float32}}, Nothing})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, Type{Float32}, Tuple{GeometryBasics.Vec{3, Float32}}}}, Type, Tuple{GeometryBasics.Vec{3, Float32}}, Tuple{StaticArrays.SOneTo{3}}})
@precompile(Tuple{typeof(Base.Broadcast.flatten), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, Type{Float32}, Tuple{GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(StaticArrays._broadcast), Type, StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(StaticArrays.__broadcast), Type{Float32}, StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, Tuple{Float32, Float32, Float32}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Vec{3, Float32}, Int64})
@precompile(Tuple{typeof(Observables.to_value), Float64})
@precompile(Tuple{typeof(Makie.transform!), Makie.Transformation, MakieCore.Attributes})
@precompile(Tuple{Type{NamedTuple{(:translation,), T} where T<:Tuple}, Tuple{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:translation,), Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:translation,), Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{Makie.var"#transform!##kw", NamedTuple{(:translation,), Tuple{Observables.Observable{Any}}}, typeof(Makie.transform!), Makie.Transformation})
@precompile(Tuple{typeof(Makie.translate!), Makie.Transformation, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:volume}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:volume}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:volume}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:volume}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:volume}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:volume}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:volume}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:volume}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:volume}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:volume}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:isovalue}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:isovalue}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:isovalue}, MakieCore.Key{:volume}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isovalue}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isovalue}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isovalue}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:algorithm}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:algorithm}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Makie.RaymarchAlgorithm})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:algorithm}, MakieCore.Key{:volume}}, Symbol})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Int32}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:algorithm}, MakieCore.Key{:volume}}, Observables.Observable{Int32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:algorithm}, MakieCore.Key{:volume}}, Observables.Observable{Int32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:algorithm}, MakieCore.Key{:volume}}, Observables.Observable{Int32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Int32}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:volume}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:volume}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:volume}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:volume}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:volume}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:volume}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:volume}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:volume}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:volume}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:volume}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:volume}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:volume}}, Nothing})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:volume}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:volume}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:volume}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:isorange}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:isorange}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:isorange}, MakieCore.Key{:volume}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isorange}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isorange}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:isorange}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:volume}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:volume}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:volume}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:volume}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:volume}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:volume}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:volume}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#266#268", Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#266#268", Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{GLMakie.var"#266#268", StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.minimum), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.minimum), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.maximum), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.maximum), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Float64, Float64, Float64}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Tuple{Float64, Float64, Float64}, Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Float64, Float64, Float64}, Tuple{Float64, Float64, Float64}}}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Int64, Int64, Int64, Int64, Float64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Int64}})
@precompile(Tuple{typeof(StaticArrays.construct_type), Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, StaticArrays.Args{Tuple{Float64, Int64, Int64, Int64, Int64, Float64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Int64}}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Tuple{Float64, Int64, Int64, Int64, Int64, Float64, Int64, Int64, Int64, Int64, Float64, Int64, Float64, Float64, Float64, Int64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#266#268", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#266#268", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#266#268", Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.meta), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.Mesh{Dim, T, Element, V} where V<:AbstractArray{Element, 1} where Element<:GeometryBasics.Polytope{Dim, T} where T<:Number where Dim}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.triangle_mesh), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.triangle_mesh), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.triangle_mesh), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{3, Float32}, 1, 3}}})
@precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{3, Float32}, 1, 3}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{3, Float32}, 1, 3}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.NgonFace{3, GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.Point{3, Float32}, 1, 3}}})
@precompile(Tuple{typeof(GLMakie.to_opengl_mesh!), Base.Dict{Symbol, Any}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 3}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.inv), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.inv), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.inv), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.inv), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}}}})
@precompile(Tuple{Type{GLMakie.VolumePrerender}, Observables.Observable{Bool}, Observables.Observable{Bool}})
@precompile(Tuple{typeof(GLMakie.assemble_robj), Base.Dict{Symbol, Any}, GLMakie.GLVisualizeShader, GeometryBasics.HyperRectangle{3, Float32}, UInt32, GLMakie.VolumePrerender, GLMakie.var"#31#32"})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{Pre} where Pre}, Base.Dict{Symbol, Any}, GLMakie.GLVisualizeShader, GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}, Nothing, GeometryBasics.HyperRectangle{3, Float32}, Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.VolumePrerender})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.var"#31#32"})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 3}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, UInt32}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{3}}}, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.map_texture_paramers), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{Symbol, UInt32}, 1}, Tuple{Symbol, Tuple{UInt32, UInt32, UInt32}}, Int64})
@precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Symbol, Any}, 1}, Base.Generator{Tuple{Symbol, Symbol, Symbol}, GLMakie.GLAbstraction.var"#34#35"{GLMakie.GLAbstraction.TextureParameters{3}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 3}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{Float32, 3}, UInt32, Float32})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Float32, 3}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 3}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 3}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.Texture{Float32, 3}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), Observables.Observable{Nothing}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Nothing}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Nothing}}, Tuple{Observables.Observable{Nothing}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Nothing}}, Tuple{Observables.Observable{Nothing}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.GLAbstraction.gl_convert), Observables.Observable{Nothing}}, Tuple{Observables.Observable{Nothing}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{Float32, 3}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{Nothing}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}}, Nothing, Base.Dict{Symbol, Any}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}, Function, Nothing, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.getproperty), GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}, UInt32})
@precompile(Tuple{typeof(Base.push!), GLMakie.Screen, Makie.Scene, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:isorange}, MakieCore.Key{:volume}}, Float64})
@precompile(Tuple{GLMakie.var"#sortby#141"{GLMakie.Screen}, Tuple{Int64, UInt8, GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.volume, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 3}}}})
@precompile(Tuple{GLMakie.var"#138#142", GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{GLMakie.var"#139#143", GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.render), GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}, GLMakie.GLAbstraction.GLVertexArray{GLMakie.GLAbstraction.GLBuffer{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._size), Type{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction._ndims), Type{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{ColorTypes.RGB{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{Float32, 3}})
@precompile(Tuple{GLMakie.var"#18#20"{GLMakie.var"#31#32", GLMakie.GLAbstraction.StandardPostrender}})
@precompile(Tuple{GLMakie.var"#140#144", GLMakie.GLAbstraction.RenderObject{GLMakie.var"#17#19"{GLMakie.VolumePrerender, GLMakie.GLAbstraction.StandardPrerender}}})
@precompile(Tuple{Type{NamedTuple{(:color,), T} where T<:Tuple}, Tuple{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#meshscatter##kw", NamedTuple{(:color,), Tuple{Array{Float64, 1}}}, typeof(MakieCore.meshscatter), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"##meshscatter#47", Base.Pairs{Symbol, Array{Float64, 1}, Tuple{Symbol}, NamedTuple{(:color,), Tuple{Array{Float64, 1}}}}, typeof(MakieCore.meshscatter), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:color,), Tuple{Array{Float64, 1}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Array{Float64, 1}, Tuple{Symbol}, NamedTuple{(:color,), Tuple{Array{Float64, 1}}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.PointBased, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}, Observables.Observable{Array{Float64, 1}}, Vararg{Observables.Observable{Array{Float64, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Array{Float64, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{Type{Base.Val{12}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :rotations, :backlight, :space, :shading, :fxaa, :inspectable, :cycle), T} where T<:Tuple}, Tuple{Symbol, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Float64, Float64, Float32, Symbol, Bool, Bool, Observables.Observable{Any}, Array{Symbol, 1}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :rotations, :backlight, :space, :shading, :fxaa, :inspectable, :cycle), Tuple{Symbol, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Float64, Float64, Float32, Symbol, Bool, Bool, Observables.Observable{Any}, Array{Symbol, 1}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:color, :colormap, :colorrange, :marker, :markersize, :rotations, :backlight, :space, :shading, :fxaa, :inspectable, :cycle), Tuple{Symbol, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Float64, Float64, Float32, Symbol, Bool, Bool, Observables.Observable{Any}, Array{Symbol, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :color, :colormap, :colorrange, :marker, :markersize, :rotations, :backlight, :shading, :fxaa, :cycle), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Float64, Float64, Float32, Bool, Bool, Array{Symbol, 1}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Tuple{Float64, Float64}}, Symbol})
@precompile(Tuple{Type{Base.Val{:positions}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{3, Float32}}, Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1655#1658"{Makie.LScene}, Observables.Observable{Any}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1655#1658"{Makie.LScene}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1655#1658"{Makie.LScene}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1655#1658"{Makie.LScene}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{Symbol, NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}}}, Symbol, NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:ticks,), Tuple{NamedTuple{(:ranges, :labels), Tuple{MakieCore.Automatic, MakieCore.Automatic}}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{Makie.axis3d, ArgType} where ArgType}, Makie.Scene, MakieCore.Attributes, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#120#121"{UnionAll}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.axis3d, ArgType} where ArgType}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#120#121"{UnionAll}, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#120#121"{UnionAll}, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#120#121"{UnionAll}, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, 1}}})
@precompile(Tuple{Type{MakieCore.Combined{Makie.axis3d, ArgType} where ArgType}, Makie.Scene, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.:(*)), Float32, Base.Irrational{:π}})
@precompile(Tuple{typeof(LinearAlgebra.normalize), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.:(<)), Float32, Float32})
@precompile(Tuple{typeof(Base.isinf), Float32})
@precompile(Tuple{typeof(Base.:(*)), Base.Irrational{:π}, Int64})
@precompile(Tuple{typeof(Base.:(>)), Float32, Int64})
@precompile(Tuple{Type{Base.Math.DoubleFloat32}, Float64})
@precompile(Tuple{typeof(Base.Math.cos_kernel), Base.Math.DoubleFloat32})
@precompile(Tuple{typeof(Base.Math.sin_kernel), Base.Math.DoubleFloat32})
@precompile(Tuple{Type{Makie.Quaternion{T} where T}, Float32, Float32, Float32, Float32})
@precompile(Tuple{typeof(Base.:(*)), Float64, Base.Irrational{:π}})
@precompile(Tuple{typeof(Base.:(*)), Float64, Float32})
@precompile(Tuple{Type{Makie.Quaternion{T} where T}, Float64, Float64, Float64, Float64})
@precompile(Tuple{typeof(Base.:(*)), Makie.Quaternion{Float64}, Makie.Quaternion{Float32}})
@precompile(Tuple{Type{ColorTypes.RGBA{Float32}}, Float64, Float64, Float64, Float64})
@precompile(Tuple{Type{NamedTuple{(:linecolor, :linewidth, :axislinewidth, :axiscolor), T} where T<:Tuple}, Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:linecolor, :linewidth, :axislinewidth, :axiscolor), Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(MakieCore.node_pairs), Base.Pairs{Symbol, Tuple{Any, Any, Any}, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:linecolor, :linewidth, :axislinewidth, :axiscolor), Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}}}}})
@precompile(Tuple{Type{Pair{Symbol, Tuple{Any, Any, Any}}}, Symbol, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}}}, Function, Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{Pair{Symbol, Tuple{Any, Any, Any}}}, Symbol, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Int64, Int64, Int64}}}}, Function, Tuple{Tuple{Int64, Int64, Int64}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Int64, Int64, Int64}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_3tuple), Observables.Observable{Any}})
@precompile(Tuple{typeof(Makie.to_3tuple), String})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{String, String, String}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{String, String, String}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_3tuple), Observables.Observable{Tuple{String, String, String}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_3tuple), Observables.Observable{Tuple{String, String, String}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_3tuple), Observables.Observable{Tuple{String, String, String}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:axisnames, :textcolor, :rotation, :textsize, :align, :font, :gap), T} where T<:Tuple}, Tuple{Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Float64, Float64, Float64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Observables.Observable{Tuple{String, String, String}}, Int64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:axisnames, :textcolor, :rotation, :textsize, :align, :font, :gap), Tuple{Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Float64, Float64, Float64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Observables.Observable{Tuple{String, String, String}}, Int64}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{String, String, String}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{String, String, String}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{String, String, String}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Tuple{String, String, String}}})
@precompile(Tuple{Type{NamedTuple{(:ranges_labels, :formatter, :textcolor, :rotation, :textsize, :align, :gap, :font), T} where T<:Tuple}, Tuple{Tuple{MakieCore.Automatic, MakieCore.Automatic}, typeof(Makie.Formatters.plain), Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Int64, Observables.Observable{Tuple{String, String, String}}}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Tuple{MakieCore.Automatic, MakieCore.Automatic}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{MakieCore.Automatic, MakieCore.Automatic}}}}, Function, Tuple{Tuple{MakieCore.Automatic, MakieCore.Automatic}}, Nothing})
@precompile(Tuple{typeof(Base.axes), Tuple})
@precompile(Tuple{typeof(Base.argtail), MakieCore.Automatic})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, typeof(Makie.Formatters.plain)})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ranges_labels, :formatter, :textcolor, :rotation, :textsize, :align, :gap, :font), Tuple{Tuple{MakieCore.Automatic, MakieCore.Automatic}, typeof(Makie.Formatters.plain), Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Int64, Observables.Observable{Tuple{String, String, String}}}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{MakieCore.Automatic, MakieCore.Automatic}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{MakieCore.Automatic, MakieCore.Automatic}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{MakieCore.Automatic, MakieCore.Automatic}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{Type{NamedTuple{(:visible, :showticks, :showaxis, :showgrid, :scale, :padding, :inspectable, :names, :ticks, :frame), T} where T<:Tuple}, Tuple{Bool, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, GeometryBasics.Vec{3, Float32}, Float64, Bool, MakieCore.Attributes, MakieCore.Attributes, MakieCore.Attributes}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:visible, :showticks, :showaxis, :showgrid, :scale, :padding, :inspectable, :names, :ticks, :frame), Tuple{Bool, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, GeometryBasics.Vec{3, Float32}, Float64, Bool, MakieCore.Attributes, MakieCore.Attributes, MakieCore.Attributes}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}}}})
@precompile(Tuple{Type{Base.Val{:ranges}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:ranges}})
@precompile(Tuple{Type{Base.Val{:labels}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:labels}})
@precompile(Tuple{Type{Base.Val{:formatter}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:formatter}})
@precompile(Tuple{typeof(Base.map), Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Type{NamedTuple{(:k_min, :k_max), T} where T<:Tuple}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:k_min, :k_max), Tuple{Int64, Int64}}, Symbol})
@precompile(Tuple{Makie.var"#344#345", Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}, MakieCore.Automatic, MakieCore.Automatic, Function})
@precompile(Tuple{Type{Base.RefValue{T} where T}, typeof(Makie.Formatters.plain)})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Base.RefValue{typeof(Makie.Formatters.plain)}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.default_labels), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Base.RefValue{typeof(Makie.Formatters.plain)}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.default_labels), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Base.RefValue{typeof(Makie.Formatters.plain)}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}}, Tuple{Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}}, Tuple{Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}}, Tuple{Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Attributes, Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}, Symbol})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}})
@precompile(Tuple{typeof(Base.getproperty), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Symbol})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Val{:transformation}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Function})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Val{:inspectable}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Val{:visible}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :markerspace, :inspectable, :visible), T} where T<:Tuple}, Tuple{Bool, Symbol, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:transparency, :markerspace, :inspectable, :visible), Tuple{Bool, Symbol, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#TextBuffer##kw", NamedTuple{(:transparency, :markerspace, :inspectable, :visible), Tuple{Bool, Symbol, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(Makie.TextBuffer), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Type{GeometryBasics.Point{3, T} where T}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{Makie.annotations, ArgType} where ArgType}, Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.annotations, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}, Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{String, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Array{String, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{String, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{String, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}, 1}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcastable), Tuple{Int64}})
@precompile(Tuple{typeof(Base.Broadcast.preprocess_args), Nothing, Tuple{Int64}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Type{MakieCore.Combined{Makie.annotations, Tuple{Array{String, 1}, Array{GeometryBasics.Point{3, Float32}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Type{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}}})
@precompile(Tuple{Type{NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.first), Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base._array_for), Type{GeometryBasics.Point{3, Float32}}, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Base.HasShape{1}})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Base.last), Tuple{String, GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Makie.to_ndim), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Int64})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Makie.var"##s196#57", Any, Any, Any})
@precompile(Tuple{typeof(Base.ntuple), Base.var"#71#72"{Tuple{Expr}, Base.UnitRange{Int64}}, Int64})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Base.SubArray{NamedTuple{(:char, :font, :scale, :lineheight, :extent), Tuple{Char, FreeTypeAbstraction.FTFont, Float32, Float32, Makie.GlyphExtent}}, 1, Array{NamedTuple{(:char, :font, :scale, :lineheight, :extent), Tuple{Char, FreeTypeAbstraction.FTFont, Float32, Float32, Makie.GlyphExtent}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, 1}, Array{Array{Float32, 1}, 1}}}, Int64})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Array{Float32, 1}, 1}, Array{Float32, 1}}}, Int64})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Array{String, 1}, Array{Float32, 1}, Array{FreeTypeAbstraction.FTFont, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}, Array{Makie.Quaternion{Float32}, 1}, MakieCore.Automatic, Float64, Array{ColorTypes.RGBA{Float32}, 1}, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Makie._get_glyphcollection_and_linesegments), String, Int64, Float32, FreeTypeAbstraction.FTFont, GeometryBasics.Vec{2, Float32}, Makie.Quaternion{Float32}, MakieCore.Automatic, Float64, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:transparency, :inspectable, :visible), T} where T<:Tuple}, Tuple{Bool, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:transparency, :inspectable, :visible), Tuple{Bool, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#LinesegmentBuffer##kw", NamedTuple{(:transparency, :inspectable, :visible), Tuple{Bool, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(Makie.LinesegmentBuffer), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Type{GeometryBasics.Point{3, T} where T}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Symbol})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Array{Float32, 1}}, Symbol})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Symbol, Symbol, Symbol}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Symbol, Symbol, Symbol}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Symbol, Symbol, Symbol}}}}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{MakieCore.Attributes, MakieCore.Attributes, MakieCore.Attributes}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{MakieCore.Attributes, MakieCore.Attributes, MakieCore.Attributes}, Int64, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, MakieCore.Attributes, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, MakieCore.Attributes, Tuple{Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, MakieCore.Attributes, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Attributes}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.getindex), Tuple{Base.RefValue{MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Symbol, Symbol, Symbol}}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Base.Val{:padding}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.getindex), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Int64})
@precompile(Tuple{Type{Base.Val{:ranges_labels}}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:ranges_labels}})
@precompile(Tuple{typeof(Makie.map_once), Function, Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Vararg{Observables.Observable{T} where T}})
@precompile(Tuple{typeof(Makie.safe_off), Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Function})
@precompile(Tuple{typeof(Makie.safe_off), Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Function})
@precompile(Tuple{typeof(Makie.safe_off), Observables.Observable{GeometryBasics.Vec{3, Float32}}, Function})
@precompile(Tuple{typeof(Makie.safe_off), Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Function})
@precompile(Tuple{typeof(Makie.safe_off), Observables.Observable{Any}, Function})
@precompile(Tuple{typeof(Base.map), typeof(Makie.draw_axis3d), Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(Makie.draw_axis3d), Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{Type{Tuple}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Char, 1}, Array{Makie.GlyphExtent, 1}, GeometryBasics.Vec{2, Float32}}}, Int64})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Char, 1}, Array{Makie.GlyphExtent, 1}, Base.Generator{Array{Makie.GlyphExtent, 1}, Makie.var"#721#723"{Makie.GlyphCollection}}}}, Int64})
@precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Char, 1}, Array{Makie.GlyphExtent, 1}, Array{GeometryBasics.Vec{2, Float32}, 1}}}, Int64})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{3, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Float32, Float32, Float32, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Float32, Float32, Float32, Float32}}}}, Type, Tuple{Tuple{Float32, Float32, Float32, Float32}}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, Type{Float32}, Tuple{Tuple{Float32, Float32, Float32, Float32}}}})
@precompile(Tuple{Type{Makie.Quaternion{Float32}}, Tuple{Float32, Float32, Float32, Float32}})
@precompile(Tuple{typeof(Base.minimum), GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.isfinite), Tuple{GeometryBasics.Vec{3, Float32}}}}, Function, Tuple{GeometryBasics.Vec{3, Float32}}, Nothing})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, typeof(Base.isfinite), Tuple{GeometryBasics.Vec{3, Float32}}}}, Function, Tuple{GeometryBasics.Vec{3, Float32}}, Tuple{StaticArrays.SOneTo{3}}})
@precompile(Tuple{typeof(Base.Broadcast.flatten), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, typeof(Base.isfinite), Tuple{GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(StaticArrays._broadcast), Function, StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(StaticArrays.__broadcast), typeof(Base.isfinite), StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.eltype), Tuple{Bool, Bool, Bool}})
@precompile(Tuple{typeof(StaticArrays.similar_type), Type{GeometryBasics.Vec{3, Float32}}, Type{Bool}, StaticArrays.Size{(3,)}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Bool}}, Tuple{Bool, Bool, Bool}})
@precompile(Tuple{typeof(Base.all), GeometryBasics.Vec{3, Bool}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Makie.draw_axis3d), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, GeometryBasics.Vec{3, Float32}, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}, Tuple{Bool, Bool, Bool}, Vararg{Any}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to3tuple), Tuple{Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.to3tuple), Tuple{Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Float64}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.to3tuple), Tuple{Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Int64, Float64}}}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Bool, Bool, Bool}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{String, String, String}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Symbol, Symbol, Symbol}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(Makie.to3tuple), Int64})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Makie.to3tuple), Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Makie.to3tuple), Float64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Tuple{Int64, Int64, Int64}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{Bool, Bool, Bool}, Tuple{String, String, String}, Tuple{Symbol, Symbol, Symbol}, Tuple{Float64, Float64, Float64}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Tuple{Int64, Int64, Int64}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}, Tuple{Symbol, Symbol, Symbol}, Tuple{ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}, ColorTypes.RGBA{Float32}}, Tuple{Makie.Quaternion{Float64}, Makie.Quaternion{Float32}, Makie.Quaternion{Float64}}, Tuple{Int64, Int64, Int64}, Tuple{Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}}, Tuple{String, String, String}, Tuple{Int64, Int64, Int64}, Tuple{Float64, Float64, Float64}}, Int64, Int64})
@precompile(Tuple{typeof(Base.empty!), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Base.empty!), Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Base.empty!), Array{Makie.Quaternion{Float32}, 1}})
@precompile(Tuple{typeof(Base.empty!), Array{Float32, 1}})
@precompile(Tuple{typeof(Base.empty!), Array{FreeTypeAbstraction.FTFont, 1}})
@precompile(Tuple{typeof(Base.empty!), Array{GeometryBasics.Vec{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.resize!), Array{GeometryBasics.Point{3, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.resize!), Array{ColorTypes.RGBA{Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.resize!), Array{Float32, 1}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Float32, Float32, Float32}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float64, Float64, Float64}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float64, Float64, Float64}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#349#353", Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Float64, Float64, Float64}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.min), Tuple{Tuple{Float64, Float64, Float64}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.min), Tuple{Tuple{Float64, Float64, Float64}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.min), Tuple{Tuple{Float64, Float64, Float64}, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}}}})
@precompile(Tuple{Type{GeometryBasics.Point{3, Float32}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.max), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.max), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Float64, Float64, Float64}}}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.max), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Float64, Float64, Float64}}}, GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.max), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Tuple{Float64, Float64, Float64}}}, GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{typeof(Base.minimum), GeometryBasics.Point{3, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float64, Tuple{Int64, Int64, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Float64, Tuple{Int64, Int64, Int64}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float64, Tuple{Float64, Float64, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(*)), Tuple{Float64, Tuple{Float64, Float64, Float64}}}})
@precompile(Tuple{StaticArrays.var"##s25#118", Any, Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#119#120", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#119#120"}})
@precompile(Tuple{typeof(Base.getindex), GeometryBasics.Point{3, Float64}, GeometryBasics.Vec{3, Int64}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{3, Float64}}})
@precompile(Tuple{typeof(Base.:(*)), Float64, GeometryBasics.Point{3, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{3, Float64}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Tuple{Int64, Int64, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Tuple{Int64, Int64, Int64}}}})
@precompile(Tuple{typeof(Base.getindex), GeometryBasics.Point{3, Float64}, Int64})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float32, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float32, GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{3, Float32}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, GeometryBasics.Point{3, Float32}}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float32, GeometryBasics.Point{3, Float32}}}}}})
@precompile(Tuple{typeof(Base.vect), GeometryBasics.Point{3, Float32}, Vararg{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth), T} where T<:Tuple}, Tuple{Symbol, Float64}})
@precompile(Tuple{Base.var"#append!##kw", NamedTuple{(:color, :linewidth), Tuple{Symbol, Float64}}, typeof(Base.append!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.append!), Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGBA{Float32}, 1}, Base.Iterators.Take{Base.Iterators.Repeated{ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{typeof(Base.Iterators._zip_iterate_interleave), Tuple{Tuple{Int64, Int64}, Tuple{ColorTypes.RGBA{Float32}, Tuple{Int64, Nothing}}}, Tuple{}, Tuple{Base.Missing, Base.Missing}})
@precompile(Tuple{typeof(Base.append!), Array{Float32, 1}, Base.Iterators.Take{Base.Iterators.Repeated{Float32}}})
@precompile(Tuple{typeof(Base.Iterators._zip_iterate_interleave), Tuple{Tuple{Int64, Int64}, Tuple{Float32, Tuple{Int64, Nothing}}}, Tuple{}, Tuple{Base.Missing, Base.Missing}})
@precompile(Tuple{typeof(Base.:(*)), Float32, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Base.getindex), GeometryBasics.Point{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.:(-)), Float64, Float32})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.:(*)), Float32, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}}, GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :rotation, :textsize, :align, :font), T} where T<:Tuple}, Tuple{ColorTypes.RGBA{Float32}, Makie.Quaternion{Float64}, Float64, Tuple{Symbol, Symbol}, String}})
@precompile(Tuple{Base.var"#push!##kw", NamedTuple{(:color, :rotation, :textsize, :align, :font), Tuple{ColorTypes.RGBA{Float32}, Makie.Quaternion{Float64}, Float64, Tuple{Symbol, Symbol}, String}}, typeof(Base.push!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, String, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Base.append!), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, ColorTypes.RGBA{Float32}, MakieCore.Key{:color}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Makie.Quaternion{Float64}, MakieCore.Key{:rotation}})
@precompile(Tuple{typeof(Base.append!), Array{Makie.Quaternion{Float32}, 1}, Base.Iterators.Take{Base.Iterators.Repeated{Makie.Quaternion{Float32}}}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Float64, MakieCore.Key{:textsize}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, String, MakieCore.Key{:font}})
@precompile(Tuple{typeof(Base.append!), Array{FreeTypeAbstraction.FTFont, 1}, Base.Iterators.Take{Base.Iterators.Repeated{FreeTypeAbstraction.FTFont}}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Tuple{Symbol, Symbol}, MakieCore.Key{:align}})
@precompile(Tuple{typeof(Base.append!), Array{GeometryBasics.Vec{2, Float32}, 1}, Base.Iterators.Take{Base.Iterators.Repeated{GeometryBasics.Vec{2, Float32}}}})
@precompile(Tuple{typeof(Base._mapreduce), Makie.var"#351#355"{Int64, FreeTypeAbstraction.FTFont}, typeof(Base.max), Base.IndexLinear, Array{String, 1}})
@precompile(Tuple{typeof(Makie.to_rotation), Makie.Quaternion{Float32}})
@precompile(Tuple{typeof(Makie.text_bb), String, FreeTypeAbstraction.FTFont, Float64})
@precompile(Tuple{typeof(Makie.labelposition), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Int64, GeometryBasics.Vec{3, Float32}, Float64, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, GeometryBasics.Point{3, Float64}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(UnicodeFun.to_latex), String})
@precompile(Tuple{Type{NamedTuple{(:textsize, :color, :rotation, :align, :font), T} where T<:Tuple}, Tuple{Float64, Symbol, Makie.Quaternion{Float64}, Tuple{Symbol, Symbol}, String}})
@precompile(Tuple{GeometryBasics.var"##s3#7", Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#8#18", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryBasics.var"#8#18"}})
@precompile(Tuple{Base.var"#push!##kw", NamedTuple{(:textsize, :color, :rotation, :align, :font), Tuple{Float64, Symbol, Makie.Quaternion{Float64}, Tuple{Symbol, Symbol}, String}}, typeof(Base.push!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, String, GeometryBasics.Point{3, Float64}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Symbol, MakieCore.Key{:color}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth), T} where T<:Tuple}, Tuple{ColorTypes.RGBA{Float32}, Int64}})
@precompile(Tuple{Base.var"#append!##kw", NamedTuple{(:color, :linewidth), Tuple{ColorTypes.RGBA{Float32}, Int64}}, typeof(Base.append!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.length), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Symbol, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}, Symbol, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}, Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Point{3, Float32}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:color, :rotation, :textsize, :align, :font), T} where T<:Tuple}, Tuple{ColorTypes.RGBA{Float32}, Makie.Quaternion{Float32}, Float64, Tuple{Symbol, Symbol}, String}})
@precompile(Tuple{Base.var"#push!##kw", NamedTuple{(:color, :rotation, :textsize, :align, :font), Tuple{ColorTypes.RGBA{Float32}, Makie.Quaternion{Float32}, Float64, Tuple{Symbol, Symbol}, String}}, typeof(Base.push!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, String, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Makie.same_length_array), Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}, Makie.Quaternion{Float32}, MakieCore.Key{:rotation}})
@precompile(Tuple{Type{NamedTuple{(:textsize, :color, :rotation, :align, :font), T} where T<:Tuple}, Tuple{Float64, Symbol, Makie.Quaternion{Float32}, Tuple{Symbol, Symbol}, String}})
@precompile(Tuple{Base.var"#push!##kw", NamedTuple{(:textsize, :color, :rotation, :align, :font), Tuple{Float64, Symbol, Makie.Quaternion{Float32}, Tuple{Symbol, Symbol}, String}}, typeof(Base.push!), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}, String, GeometryBasics.Point{3, Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Nothing}, Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Nothing}, Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.draw_axis3d), Observables.Observable{Nothing}}, Tuple{Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.draw_axis3d), Observables.Observable{Nothing}}, Tuple{Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.draw_axis3d), Observables.Observable{Nothing}}, Tuple{Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.push!), Makie.Scene, MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.LScene, Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1655#1658"{Makie.LScene}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1655#1658"{Makie.LScene}, MakieCore.Automatic})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#1656#1659", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#1656#1659", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Symbol, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#120#121"{UnionAll}, Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Symbol, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}, Tuple{Observables.Observable{Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Symbol, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#344#345", Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}}, Tuple{Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}, Symbol, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}}, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.draw_axis3d), Observables.Observable{Nothing}}, Tuple{Observables.Observable{MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}}, Observables.Observable{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}, Observables.Observable{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Nothing}, Symbol, Nothing})
@precompile(Tuple{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.point_iterator), MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{Type{Base.Val{:markerspace}}})
@precompile(Tuple{Type{Base.Val{:position}}})
@precompile(Tuple{typeof(Makie.point_iterator), MakieCore.Combined{MakieCore.text, Tuple{Array{Makie.GlyphCollection, 1}}}})
@precompile(Tuple{typeof(Makie.to_rotation), Array{Makie.Quaternion{Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.HyperRectangle{3, Float32}}, Tuple{Int64, Int64, Int64}, Tuple{Int64, Int64, Int64}})
@precompile(Tuple{typeof(Makie.boundingbox), Array{Makie.GlyphCollection, 1}, Array{GeometryBasics.Point{3, Float32}, 1}, Array{Makie.Quaternion{Float32}, 1}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{S, T} where T where S}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Base.iterate), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}}})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{3, Float32}, 1}, Int64}})
@precompile(Tuple{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.LScene, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Array{FreeTypeAbstraction.FTFont, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{FreeTypeAbstraction.FTFont, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{FreeTypeAbstraction.FTFont, 1}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{Array{FreeTypeAbstraction.FTFont, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{Array{FreeTypeAbstraction.FTFont, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, Observables.Observable{Array{FreeTypeAbstraction.FTFont, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Array{FreeTypeAbstraction.FTFont, 1}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Array{Float32, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Array{Makie.Quaternion{Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotation}, MakieCore.Key{:text}}, Observables.Observable{Array{Makie.Quaternion{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.handle_view), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Makie.apply_transform), Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Makie.var"#656#657", Function, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.draw_linesegments), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, UInt32})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:meshscatter}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:meshscatter}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:meshscatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:meshscatter}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:meshscatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:meshscatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:meshscatter}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:markersize}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:meshscatter}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:markersize}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:rotations}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:meshscatter}}, Float64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:meshscatter}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:meshscatter}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:rotations}, MakieCore.Key{:meshscatter}}, Observables.Observable{Makie.Quaternion{Float64}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:meshscatter}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:meshscatter}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:meshscatter}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:meshscatter}}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:cycle}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:meshscatter}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:meshscatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:meshscatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:meshscatter}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:meshscatter}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:meshscatter}}, Tuple{Float64, Float64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Array{Float64, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{Type{GeometryBasics.HyperSphere{3, T} where T}, GeometryBasics.Point{3, Float32}, Float32})
@precompile(Tuple{Type{NamedTuple{(:pointtype, :normaltype, :facetype), T} where T<:Tuple}, Tuple{DataType, DataType, DataType}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:pointtype, :normaltype, :facetype), Tuple{DataType, DataType, DataType}}, Symbol})
@precompile(Tuple{typeof(Base.:(-)), Bool, Int64})
@precompile(Tuple{typeof(Base.Iterators.product), Base.LinRange{Float64, Int64}, Vararg{Base.LinRange{Float64, Int64}}})
@precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryBasics.var"#101#103"{GeometryBasics.var"#inner#102"{GeometryBasics.HyperSphere{3, Float32}}}, Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}}})
@precompile(Tuple{typeof(IterTools.ivec), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}}, GeometryBasics.var"#101#103"{GeometryBasics.var"#inner#102"{GeometryBasics.HyperSphere{3, Float32}}}}})
@precompile(Tuple{typeof(GeometryBasics.metafree), IterTools.IVec{Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}}, GeometryBasics.var"#101#103"{GeometryBasics.var"#inner#102"{GeometryBasics.HyperSphere{3, Float32}}}}}})
@precompile(Tuple{typeof(Base.Iterators._piterate), Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}})
@precompile(Tuple{typeof(Base.map), Base.Iterators.var"#20#21", Tuple{Tuple{Float64, Int64}, Tuple{Float64, Int64}}})
@precompile(Tuple{Type{GeometryBasics.Point{3, Float64}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), GeometryBasics.Point{3, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}}, Function, Tuple{GeometryBasics.Point{3, Float64}, Float32}, Nothing})
@precompile(Tuple{typeof(Base.Broadcast.broadcastable), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}}}, Function, Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}, Nothing})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}}}, Function, Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}, Tuple{StaticArrays.SOneTo{3}}})
@precompile(Tuple{typeof(Base.Broadcast.cat_nested), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.make_makeargs), Function, Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{GeometryBasics.Point{3, Float64}, Float32}}, GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Tuple{StaticArrays.SOneTo{3}}, Base.Broadcast.var"#10#12"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#9#11"}, Base.Broadcast.var"#13#14"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(*))}, typeof(Base.:(+))}, Tuple{GeometryBasics.Point{3, Float64}, Float32, GeometryBasics.Point{3, Float32}}}}, Function, Tuple{GeometryBasics.Point{3, Float64}, Float32, GeometryBasics.Point{3, Float32}}, Tuple{StaticArrays.SOneTo{3}}})
@precompile(Tuple{typeof(StaticArrays._broadcast), Function, StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}, StaticArrays.Size{()}, StaticArrays.Size{(3,)}}, GeometryBasics.Point{3, Float64}, Vararg{Any}})
@precompile(Tuple{typeof(StaticArrays.first_statictype), GeometryBasics.Point{3, Float64}, Float32, Vararg{Any}})
@precompile(Tuple{typeof(StaticArrays.__broadcast), Base.Broadcast.var"#10#12"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#9#11"}, Base.Broadcast.var"#13#14"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(*))}, typeof(Base.:(+))}, StaticArrays.Size{(3,)}, Tuple{StaticArrays.Size{(3,)}, StaticArrays.Size{()}, StaticArrays.Size{(3,)}}, GeometryBasics.Point{3, Float64}, Float32, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.convert_simplex), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.Point{3, Float32}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}}, Tuple{Tuple{Float64, Int64}, Tuple{Float64, Int64}}})
@precompile(Tuple{typeof(Base.Math.sin_kernel), Float64})
@precompile(Tuple{typeof(Base.Math.cos_kernel), Float64})
@precompile(Tuple{typeof(GeometryBasics.convert_simplex), Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Point{3, Float64}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Symbol})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{3, Float32}}, GeometryBasics.HyperSphere{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.HyperSphere{3, Float32}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Vec{3, Float32}}, IterTools.IVec{Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}}}, GeometryBasics.var"#101#103"{GeometryBasics.var"#inner#102"{GeometryBasics.HyperSphere{3, Float32}}}}}})
@precompile(Tuple{Type{NamedTuple{(:normals,), T} where T<:Tuple}, Tuple{Array{GeometryBasics.Vec{3, Float32}, 1}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:normals,), Tuple{Array{GeometryBasics.Vec{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:normals,), Tuple{Array{GeometryBasics.Vec{3, Float32}, 1}}}})
@precompile(Tuple{GeometryBasics.var"#meta##kw", NamedTuple{(:normals,), Tuple{Array{GeometryBasics.Vec{3, Float32}, 1}}}, typeof(GeometryBasics.meta), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.Mesh{Dim, T, Element, V} where V<:AbstractArray{Element, 1} where Element<:GeometryBasics.Polytope{Dim, T} where T<:Number where Dim}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:meshscatter}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:meshscatter}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:meshscatter}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:meshscatter}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:meshscatter}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert), Symbol, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:marker}, MakieCore.Key{:meshscatter}}, Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(GLMakie.vec2quaternion), Observables.Observable{Makie.Quaternion{Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.Quaternion{Float64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.vec2quaternion), Observables.Observable{GeometryBasics.Vec{4, Float32}}}, Tuple{Observables.Observable{Makie.Quaternion{Float64}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Function, Nothing})
@precompile(Tuple{typeof(GLMakie._position_calc), Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:view,), Tuple{Base.Dict{String, String}}}, Type{GLMakie.GLVisualizeShader}, GLMakie.GLAbstraction.ShaderCache, String, String, String, String})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{typeof(GLMakie.intensity_convert_tex), Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{Float32}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{Float32}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{Float32}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.TextureBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.TextureBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_internalcolorformat_sym), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.default_colorformat_sym), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{GeometryBasics.Point{3, Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{GeometryBasics.Point{3, Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{GeometryBasics.Point{3, Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{4}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.TextureBuffer{T} where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.TextureBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), Observables.Observable{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.TextureBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.annotations, Tuple{Array{Tuple{String, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.axis3d, Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.TextureBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.TextureBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{typeof(Base.eltype), Type{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{typeof(Base.ndims), Type{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Observables.Observable{StaticArraysCore.SArray{Tuple{3, 3}, Float32, 2, 9}}})
@precompile(Tuple{Type{NamedTuple{(:color, :transparency), T} where T<:Tuple}, Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Bool}})
@precompile(Tuple{MakieCore.var"#meshscatter##kw", NamedTuple{(:color, :transparency), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Bool}}, typeof(MakieCore.meshscatter), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"##meshscatter#47", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:color, :transparency), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Bool}}}, typeof(MakieCore.meshscatter), Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:color, :transparency), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Bool}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:color, :transparency), Tuple{Array{ColorTypes.RGBA{Float32}, 1}, Bool}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, Array{Float64, 1}, Vararg{Array{Float64, 1}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Array{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Function, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Observables.to_value), Nothing})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), typeof(GLMakie.to_meshcolor), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{ColorTypes.RGBA{Float32}}}}, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GLMakie.GLAbstraction.var"#10#11"{GLMakie.GLAbstraction.TextureBuffer{ColorTypes.RGBA{Float32}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.TextureBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.TextureBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{Type{NamedTuple{(:stop, :length), T} where T<:Tuple}, Tuple{Int64, Int64}})
@precompile(Tuple{Base.var"#range##kw", NamedTuple{(:stop, :length), Tuple{Int64, Int64}}, typeof(Base.range), Int64})
@precompile(Tuple{typeof(Base.Iterators.product), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}})
@precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Int64})
@precompile(Tuple{Type{Base.IteratorSize}, Base.Iterators.ProductIterator{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}})
@precompile(Tuple{typeof(Base._array_for), Type{Float32}, Base.Iterators.ProductIterator{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}}, Base.HasShape{2}})
@precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.iterate), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}})
@precompile(Tuple{typeof(Base.setindex!), Array{Float32, 2}, Float64, Int64})
@precompile(Tuple{typeof(Base.iterate), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Int64})
@precompile(Tuple{typeof(Base.setindex!), Array{Float32, 2}, Float32, Int64})
@precompile(Tuple{Type{NamedTuple{(:colormap,), T} where T<:Tuple}, Tuple{Symbol}})
@precompile(Tuple{MakieCore.var"#surface##kw", NamedTuple{(:colormap,), Tuple{Symbol}}, typeof(MakieCore.surface), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##surface#27", Base.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:colormap,), Tuple{Symbol}}}, typeof(MakieCore.surface), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:colormap,), Tuple{Symbol}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:colormap,), Tuple{Symbol}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.ContinuousSurface, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Base.Val{11}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}})
@precompile(Tuple{Type{NamedTuple{(:backlight, :color, :colormap, :colorrange, :shading, :fxaa, :lowclip, :highclip, :invert_normals, :inspectable, :space), T} where T<:Tuple}, Tuple{Float32, Nothing, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Nothing, Nothing, Bool, Observables.Observable{Any}, Symbol}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:backlight, :color, :colormap, :colorrange, :shading, :fxaa, :lowclip, :highclip, :invert_normals, :inspectable, :space), Tuple{Float32, Nothing, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Nothing, Nothing, Bool, Observables.Observable{Any}, Symbol}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, NamedTuple{(:backlight, :color, :colormap, :colorrange, :shading, :fxaa, :lowclip, :highclip, :invert_normals, :inspectable, :space), Tuple{Float32, Nothing, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Nothing, Nothing, Bool, Observables.Observable{Any}, Symbol}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:transparency, :shininess, :overdraw, :specular, :visible, :space, :transformation, :model, :depth_shift, :ssao, :linewidth, :diffuse, :inspectable, :nan_color, :backlight, :color, :colormap, :colorrange, :shading, :fxaa, :lowclip, :highclip, :invert_normals), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32, Nothing, Observables.Observable{Any}, MakieCore.Automatic, Bool, Bool, Nothing, Nothing, Bool}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Float32, Float32}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.distinct_extrema_nan), Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, Observables.Observable{Tuple{Float32, Float32}}, Symbol})
@precompile(Tuple{Type{Base.Val{:z}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.:(-)), Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.LScene, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, MakieCore.Attributes, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Array{Float32, 2}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#1656#1659", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.LScene, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{Type{MakieCore.Key{:surface}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:transparency}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:surface}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:specular}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:surface}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:surface}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:surface}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:surface}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:visible}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:surface}}, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:surface}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:surface}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:space}, MakieCore.Key{:surface}}, Observables.Observable{Symbol}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:ssao}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:highclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#185#186", Nothing, Symbol})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:surface}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:backlight}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:surface}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:surface}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:surface}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:surface}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{MakieCore.Key{:invert_normals}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:surface}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shininess}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:overdraw}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:surface}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:surface}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:surface}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:model}, MakieCore.Key{:surface}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}}, Float32})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:surface}}, Tuple{Float32, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Nothing})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Nothing}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:shading}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:surface}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:surface}}, Observables.Observable{Float32}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:surface}}, GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:diffuse}, MakieCore.Key{:surface}}, Observables.Observable{GeometryBasics.Vec{3, Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:inspectable}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:surface}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:fxaa}, MakieCore.Key{:surface}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:lowclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#187#188", Nothing, Symbol})
@precompile(Tuple{typeof(Base.ntuple), Base.var"#71#72"{Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 2}}}, Base.UnitRange{Int64}}, Int64})
@precompile(Tuple{GLMakie.var"#251#259", Observables.Observable{Array{Float32, 1}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#253#261", Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Vararg{Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}})
@precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{Float32, 1}, Array{Float32, 1}}}, Int64})
@precompile(Tuple{GLMakie.var"#253#261", Function, Array{Float32, 1}, Array{Float32, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Array{Float32, 1}, Array{Float32, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Base.pairs), NamedTuple{(:minfilter,), Tuple{Symbol}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:minfilter,), Tuple{Symbol}}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:minfilter,), Tuple{Symbol}}, Symbol})
@precompile(Tuple{typeof(Base.structdiff), NamedTuple{(:minfilter,), Tuple{Symbol}}, Type{NamedTuple{(:internalformat, :texturetype, :format, :mipmap), T} where T<:Tuple}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#255#263", Tuple{Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Array{Float32, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(GLMakie.draw_surface), Any, Tuple{GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(GLMakie.draw_surface), Any, Any, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.makesignal), GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#68#69", Observables.Observable{GLMakie.GLAbstraction.Texture{Float32, 2}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GLMakie.GLAbstraction.Texture{Float32, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#68#69", Observables.Observable{Int64}}, Tuple{Observables.Observable{GLMakie.GLAbstraction.Texture{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#68#69", Observables.Observable{Int64}}, Tuple{Observables.Observable{GLMakie.GLAbstraction.Texture{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#68#69", Observables.Observable{Int64}}, Tuple{Observables.Observable{GLMakie.GLAbstraction.Texture{Float32, 2}}}}}})
@precompile(Tuple{typeof(GLMakie.position_calc), Nothing, Vararg{Any}})
@precompile(Tuple{typeof(Base.Iterators.filter), Function, Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}})
@precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}}, Int64})
@precompile(Tuple{typeof(GLMakie._position_calc), GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 1}, GLMakie.GLAbstraction.Texture{Float32, 2}, Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}})
@precompile(Tuple{Type{Base.Dict{String, String}}, Tuple{Pair{String, String}, Pair{String, String}, Pair{String, String}, Pair{String, String}, Pair{String, String}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GeometryBasics.Vec{3, Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, GeometryBasics.Vec{2, Float32}})
@precompile(Tuple{MakieCore.var"#surface##kw", NamedTuple{(:colormap,), Tuple{Symbol}}, typeof(MakieCore.surface), Array{Float64, 2}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##surface#27", Base.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:colormap,), Tuple{Symbol}}}, typeof(MakieCore.surface), Array{Float64, 2}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:colormap,), Tuple{Symbol}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Array{Float64, 2}, Array{Float64, 2}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Symbol, Tuple{Symbol}, NamedTuple{(:colormap,), Tuple{Symbol}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Array{Float64, 2}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.ContinuousSurface, Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}, Observables.Observable{Array{Float64, 2}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{Float64, 2}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{Float64, 2}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float64, 2}}, Observables.Observable{Array{Float32, 2}}}, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, Observables.Observable{Tuple{Float32, Float32}}, Symbol})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.LScene, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}, Array{Float64, 2}, Array{Float32, 2}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#1656#1659", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{Makie.var"#677#679"{typeof(Makie.not_in_data_space), Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.LScene, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:highclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:lowclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.ntuple), Base.var"#71#72"{Tuple{Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}, Base.UnitRange{Int64}}, Int64})
@precompile(Tuple{GLMakie.var"#251#259", Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#253#261", Observables.Observable{Any}, Observables.Observable{Array{Float32, 2}}, Vararg{Observables.Observable{Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.convert), Type{Type{GeometryBasics.Point{S, T} where T where S}}, Type{GeometryBasics.Point{S, T} where T where S}})
@precompile(Tuple{GLMakie.var"#253#261", Function, Array{Float32, 2}, Array{Float32, 2}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Array{Float32, 2}, Array{Float32, 2}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.first), Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.last), Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Tuple{Array{Float32, 2}, Array{Float32, 2}}}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#255#263", Tuple{Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}, Observables.Observable{Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.draw_surface), Any, Tuple{GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(Base.Iterators.filter), Function, Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}})
@precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Filter{GLMakie.var"#64#65", Tuple{Nothing, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, UnionAll}}, Int64})
@precompile(Tuple{typeof(GLMakie._position_calc), GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, GLMakie.GLAbstraction.Texture{Float32, 2}, Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.surface, Tuple{Array{Float32, 2}, Array{Float32, 2}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Base.LinRange{T, L} where L<:Integer where T}, Int64, Float64, Int64})
@precompile(Tuple{typeof(Base.:(-)), Int64, Float64})
@precompile(Tuple{Type{Base.LinRange{T, L} where L<:Integer where T}, Float64, Int64, Int64})
@precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Int64, Float64, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Float64, Float64, Vararg{Any}})
@precompile(Tuple{typeof(Base.promote_typeof), Float64, Int64, Vararg{Any}})
@precompile(Tuple{typeof(Base.copyto!), Array{Float64, 1}, Tuple{Int64, Float64, Float64, Int64}})
@precompile(Tuple{typeof(Base.hcat), Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Vararg{Union{AbstractArray{Float64, 2}, AbstractArray{Float64, 1}}}})
@precompile(Tuple{typeof(Base.typed_hcat), Type{Float64}, Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Vararg{Union{AbstractArray{T, 2}, AbstractArray{T, 1}} where T}})
@precompile(Tuple{typeof(Base._typed_hcat), Type{Float64}, Tuple{Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Base.LinRange{Float64, Int64}, Array{Float64, 1}}})
@precompile(Tuple{Type{Makie.Figure}})
@precompile(Tuple{typeof(Base.getindex), Makie.Figure, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color), T} where T<:Tuple}, Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}}})
@precompile(Tuple{Type{NamedTuple{(:exact,), T} where T<:Tuple}, Tuple{Bool}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:exact,), Tuple{Bool}}, Symbol})
@precompile(Tuple{MakieCore.var"#heatmap##kw", NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}}}, typeof(MakieCore.heatmap), GridLayoutBase.GridPosition, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##heatmap#19", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}}}}, typeof(MakieCore.heatmap), GridLayoutBase.GridPosition, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, GridLayoutBase.GridPosition, Array{Float64, 2}})
@precompile(Tuple{typeof(GridLayoutBase.top_parent), Makie.Figure})
@precompile(Tuple{typeof(Base.:(==)), Tuple{Int64, Int64}, MakieCore.Automatic})
@precompile(Tuple{Type{Makie.Axis}, Makie.Figure})
@precompile(Tuple{typeof(Base.setindex!), GridLayoutBase.GridPosition, Makie.Axis})
@precompile(Tuple{typeof(Base.setindex!), GridLayoutBase.GridLayout, Makie.Axis, Base.UnitRange{Int64}, Base.UnitRange{Int64}, GridLayoutBase.Inner})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, Makie.Axis, Array{Float64, 2}})
@precompile(Tuple{Type{Makie.AxisPlot}, Makie.Axis, MakieCore.Combined{MakieCore.heatmap, Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.size), Array{Float64, 2}})
@precompile(Tuple{typeof(Base.zeros), Tuple{Int64, Int64}})
@precompile(Tuple{Type{NamedTuple{(:color, :colorrange, :highclip, :lowclip, :nan_color, :shading), T} where T<:Tuple}, Tuple{Array{Float64, 2}, Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}})
@precompile(Tuple{MakieCore.var"#surface##kw", NamedTuple{(:color, :colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Array{Float64, 2}, Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}, typeof(MakieCore.surface), GridLayoutBase.GridPosition, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##surface#27", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Array{Float64, 2}, Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}}, typeof(MakieCore.surface), GridLayoutBase.GridPosition, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot##kw", NamedTuple{(:color, :colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Array{Float64, 2}, Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, GridLayoutBase.GridPosition, Array{Float64, 2}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, MakieCore.Attributes, Array{Float64, 2}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.surface, Tuple{Array{Float64, 2}}}}, Array{Float64, 2}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.combine_styles), Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.extrema_nan), Tuple{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Makie.extrema_nan), Tuple{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}})
@precompile(Tuple{typeof(Base.:(==)), Makie.Axis, Makie.Axis})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Array{Float64, 2}, Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Makie.Axis, Array{Float64, 2}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.AxisPlot}, Makie.Axis, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{Type{Makie.Axis}, GridLayoutBase.GridPosition})
@precompile(Tuple{typeof(Makie._block), Type{Makie.Axis}, Makie.Figure})
@precompile(Tuple{Type{NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color, :shading), T} where T<:Tuple}, Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}})
@precompile(Tuple{MakieCore.var"#surface!##kw", NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}, typeof(MakieCore.surface!), Makie.Axis, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##surface!#28", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}}, typeof(MakieCore.surface!), Makie.Axis, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:colorrange, :highclip, :lowclip, :nan_color, :shading), Tuple{Tuple{Int64, Int64}, Symbol, Symbol, Tuple{Symbol, Float64}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.surface, ArgType} where ArgType}, Makie.Axis, Array{Float64, 2}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colormap}, MakieCore.Key{:heatmap}}, Symbol})
@precompile(Tuple{GLMakie.var"#185#186", Symbol, Symbol})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:heatmap}}, Tuple{Symbol, Float64}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:heatmap}}, Tuple{Int64, Int64}})
@precompile(Tuple{GLMakie.var"#187#188", Symbol, Symbol})
@precompile(Tuple{typeof(Base.isequal), Tuple{Tuple{String, String, String}, Array{Array{String, 1}, 1}}, Tuple{Tuple{String, String, String}, Array{Array{String, 1}, 1}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:highclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:invert_normals}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:nan_color}, MakieCore.Key{:surface}}, Tuple{Symbol, Float64}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colorrange}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:colorrange}, MakieCore.Key{:surface}}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Array{Float64, 2}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:surface}}, Observables.Observable{Array{Float32, 2}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:lowclip}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:surface}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{GLMakie.var"#251#259", Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), GLMakie.var"#253#261", Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Vararg{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{GLMakie.var"#253#261", Tuple{typeof(Base.identity), typeof(Base.identity)}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#253#261", Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.first), Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.first), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Base.last), Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.last), Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}, Tuple{Observables.Observable{Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#255#263", Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}, Observables.Observable{Array{Float32, 2}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#256#264", Observables.Observable{Array{Float32, 1}}}, Tuple{Observables.Observable{Base.StepRangeLen{Float32, Float64, Float64, Int64}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, Observables.Observable{Array{Float32, 2}}})
@precompile(Tuple{Type{Base.Dict{Symbol, UInt32}}, Tuple{Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}, Tuple{Symbol, UInt32, Int32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}, UInt32})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.surface, Tuple{Base.StepRangeLen{Float32, Float64, Float64, Int64}, Base.StepRangeLen{Float32, Float64, Float64, Int64}, Array{Float32, 2}}}})
@precompile(Tuple{Type{NamedTuple{(:yscale, :xscale), T} where T<:Tuple}, Tuple{typeof(Base.log10), typeof(Base.log10)}})
@precompile(Tuple{Type{NamedTuple{(:axis,), T} where T<:Tuple}, Tuple{NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}}})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:axis,), Tuple{NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}}}, Tuple{Symbol}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:axis,), Tuple{NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}}}, Symbol})
@precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Type{Pair{Symbol, typeof(Base.log10)}}, Symbol, typeof(Base.log10)})
@precompile(Tuple{MakieCore.var"#heatmap##kw", NamedTuple{(:axis,), Tuple{NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}}}, typeof(MakieCore.heatmap), Array{Float64, 2}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}, Symbol})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:yscale, :xscale), Tuple{typeof(Base.log10), typeof(Base.log10)}}, Type{Makie.Axis}, Makie.Figure})
@precompile(Tuple{typeof(Makie.defaultlimits), typeof(Base.log10)})
@precompile(Tuple{Type{IntervalSets.Interval{:open, :open, T} where T}, Float64, Float64})
@precompile(Tuple{typeof(IntervalSets.leftendpoint), IntervalSets.Interval{:open, :open, Float64}})
@precompile(Tuple{typeof(IntervalSets.rightendpoint), IntervalSets.Interval{:open, :open, Float64}})
@precompile(Tuple{typeof(Base._all), Makie.var"#1255#1256"{typeof(Base.log10)}, Tuple{Float32, Float32}, Base.Colon})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{typeof(Base.log10), typeof(Base.log10)}})
@precompile(Tuple{Type{NamedTuple{(:k_min,), T} where T<:Tuple}, Tuple{Int64}})
@precompile(Tuple{typeof(Base.haskey), NamedTuple{(:k_min,), Tuple{Int64}}, Symbol})
@precompile(Tuple{typeof(Makie._logbase), typeof(Base.log10)})
@precompile(Tuple{typeof(Makie.get_ticks), MakieCore.Automatic, typeof(Base.log10), MakieCore.Automatic, Float32, Float32})
@precompile(Tuple{UnicodeFun.var"#7#8"{String}, Base.GenericIOBuffer{Array{UInt8, 1}}})
@precompile(Tuple{typeof(Makie.update_tickpos_string), Tuple{Observables.Observable{Array{AbstractString, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Tuple{Float32, Tuple{Float32, Float32}, Bool}}, Observables.Observable{Tuple{Float32, Float32}}}, Tuple{Array{Float64, 1}, Array{String, 1}}, Bool, typeof(Base.log10)})
@precompile(Tuple{typeof(Makie.get_minor_tickvalues), Makie.IntervalsBetween, typeof(Base.log10), Array{Float32, 1}, Float32, Float32})
@precompile(Tuple{typeof(Makie.update_minor_ticks), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Tuple{Float32, Float32}, Tuple{Float32, Tuple{Float32, Float32}, Bool}, Array{Float32, 1}, typeof(Base.log10), Bool})
@precompile(Tuple{GeometryBasics.var"##s9#29", Any, Any, Any})
@precompile(Tuple{typeof(GeometryBasics.size_or), Type{GeometryBasics.Vec{S, T} where T where S}, Tuple{Int64}})
@precompile(Tuple{typeof(Makie.update_axis_camera), Makie.Camera, Tuple{typeof(Base.log10), typeof(Base.log10)}, GeometryBasics.HyperRectangle{2, Float32}, Bool, Bool})
@precompile(Tuple{typeof(Base.max), Float64, Int64})
@precompile(Tuple{typeof(Makie.expandlimits), Tuple{Float32, Float32}, Float64, Float64, typeof(Base.log10)})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{typeof(Base.log10), typeof(Base.log10)}})
@precompile(Tuple{typeof(Base.:(>)), Float32, Float32})
@precompile(Tuple{GLMakie.var"#226#231"{Observables.Observable{Array{Float32, 2}}}, Tuple{typeof(Base.log10), typeof(Base.log10)}, Array{Float32, 1}, Array{Float32, 1}})
@precompile(Tuple{typeof(MakieCore.heatmap), Base.UnitRange{Int64}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##heatmap#19", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.heatmap), Base.UnitRange{Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Vararg{Any}})
@precompile(Tuple{Makie.var"##plot#1771", NamedTuple{(), Tuple{}}, NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.plot), Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, Base.UnitRange{Int64}, Vararg{Any}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, MakieCore.Attributes, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.heatmap, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), MakieCore.DiscreteSurface, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.heatmap, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Base.UnitRange{Int64}}, Observables.Observable{Base.StepRange{Int64, Int64}}, Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}, Observables.Observable{Base.UnitRange{Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Base.UnitRange{Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Base.UnitRange{Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.UnitRange{Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}, Observables.Observable{Base.StepRange{Int64, Int64}}, Observables.Observable{Array{Int64, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}, Observables.Observable{Base.StepRange{Int64, Int64}}, Observables.Observable{Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}, Observables.Observable{Base.StepRange{Int64, Int64}}, Observables.Observable{Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.StepRange{Int64, Int64}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.heatmap, Tuple{Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Base.UnitRange{Int64}}, Observables.Observable{Base.StepRange{Int64, Int64}}, Observables.Observable{Array{Int64, 2}}}, Observables.Observable{Tuple{Array{Float32, 1}, Array{Float32, 1}, Array{Float32, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{MakieCore.heatmap, ArgType} where ArgType}, MakieCore.Attributes, Base.UnitRange{Int64}, Base.StepRange{Int64, Int64}, Array{Int64, 2}})
@precompile(Tuple{Type{NamedTuple{(:camera, :resolution), T} where T<:Tuple}, Tuple{typeof(Makie.campixel!), Tuple{Int64, Int64}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:camera, :resolution), Tuple{typeof(Makie.campixel!), Tuple{Int64, Int64}}}, Type{Makie.Scene}})
@precompile(Tuple{Makie.var"##Scene#68", Nothing, Makie.Events, Bool, Function, typeof(Makie.campixel!), Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Nothing, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Tuple{Int64, Int64}, Tuple{Symbol}, NamedTuple{(:resolution,), Tuple{Tuple{Int64, Int64}}}}, Type{Makie.Scene}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Tuple{Int64, Int64}, Tuple{Symbol}, NamedTuple{(:resolution,), Tuple{Tuple{Int64, Int64}}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:resolution,), Tuple{Tuple{Int64, Int64}}}})
@precompile(Tuple{Makie.var"#current_default_theme##kw", NamedTuple{(:resolution,), Tuple{Tuple{Int64, Int64}}}, typeof(Makie.current_default_theme)})
@precompile(Tuple{typeof(Base.getindex), Type{GeometryBasics.Point{2, Float32}}, Tuple{Float64, Float64}, Tuple{Float64, Float64}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:linewidth,), Tuple{Int64}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:linewidth,), Tuple{Int64}}}, typeof(MakieCore.lines!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth,), Tuple{Int64}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, Makie.Scene, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.getindex), Type{GeometryBasics.Point{2, Float32}}, Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}, Tuple{Float64, Float64}})
@precompile(Tuple{MakieCore.var"#scatter!##kw", NamedTuple{(:color, :markersize), Tuple{Symbol, Int64}}, typeof(MakieCore.scatter!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##scatter!#44", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:color, :markersize), Tuple{Symbol, Int64}}}, typeof(MakieCore.scatter!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :markersize), Tuple{Symbol, Int64}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.scatter, ArgType} where ArgType}, Makie.Scene, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{NamedTuple{(:linewidth, :color), T} where T<:Tuple}, Tuple{Int64, Symbol}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:linewidth, :color), Tuple{Int64, Symbol}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:linewidth, :color), Tuple{Int64, Symbol}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:linewidth, :color), Tuple{Int64, Symbol}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.scatter, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{typeof(Makie.get_scene), Makie.Scene})
@precompile(Tuple{typeof(Base.round), Type{Int64}, Float64})
@precompile(Tuple{typeof(GLFW.SetWindowSize), GLFW.Window, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.resize_nocopy!), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.resize_nocopy!), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.resize_nocopy!), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.resize_nocopy!), GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}, Tuple{Int64, Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.resize_nocopy!), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}, Tuple{Int64, Int64}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GLMakie.rcpframe), Observables.Observable{GeometryBasics.Vec{2, Float32}}}, Tuple{Observables.Observable{Tuple{Int64, Int64}}}}, Any})
@precompile(Tuple{typeof(GLMakie.rcpframe), Tuple{Int64, Int64}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Symbol})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}}, Int64})
@precompile(Tuple{typeof(StaticArrays._Length), Int64})
@precompile(Tuple{Type{StaticArrays.Length{2}}})
@precompile(Tuple{StaticArrays.var"##s25#76", Any, Any, Any, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#77#78", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#77#78"}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#77#78"}, Int64})
@precompile(Tuple{typeof(Base.getindex), Type{GeometryBasics.Point{2, Float32}}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.vect), Array{GeometryBasics.Point{2, Float32}, 1}, Vararg{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{GeometryBasics.Polygon{Dim, T, P, L, V} where V<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:GeometryBasics.AbstractPoint{Dim, T} where T<:Real where Dim}, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{GeometryBasics.Polygon{Dim, T, P, L, V} where V<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:GeometryBasics.AbstractPoint{Dim, T} where T<:Real where Dim}, Tuple{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}}}})
@precompile(Tuple{typeof(Base.promote_typejoin_union), Type{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, L, _B} where _B<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}})}})
@precompile(Tuple{Type{GeometryBasics.TupleView{2, 1, Skip, A} where A where Skip}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{typeof(Base.reinterpret), Type{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{Type{GeometryBasics.LineString{Dim, T, P, V} where V<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:(GeometryBasics.AbstractPoint{Dim, T} where T where Dim) where T<:Real where Dim}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}})
@precompile(Tuple{Type{GeometryBasics.Polygon{Dim, T, P, L, V} where V<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:GeometryBasics.AbstractPoint{Dim, T} where T<:Real where Dim}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{GeometryBasics.Polygon{Dim, T, P, L, V} where V<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:GeometryBasics.AbstractPoint{Dim, T} where T<:Real where Dim}, Tuple{Base.Broadcast.Extruded{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}}})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}, GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{GeometryBasics.Polygon{Dim, T, P, L, V} where V<:AbstractArray{L, 1} where L<:(AbstractArray{var"#s22", 1} where var"#s22"<:GeometryBasics.Ngon{Dim, T, 2, P}) where P<:GeometryBasics.AbstractPoint{Dim, T} where T<:Real where Dim}, Tuple{Base.Broadcast.Extruded{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Type{NamedTuple{(:color, :strokecolor, :strokewidth), T} where T<:Tuple}, Tuple{Array{Symbol, 1}, Array{Symbol, 1}, Int64}})
@precompile(Tuple{Makie.var"#poly##kw", NamedTuple{(:color, :strokecolor, :strokewidth), Tuple{Array{Symbol, 1}, Array{Symbol, 1}, Int64}}, typeof(Makie.poly), Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}, 1}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}})
@precompile(Tuple{typeof(Base.foreach), GeometryBasics.var"#215#216"{Array{Array{GeometryBasics.Point{2, Float32}, 1}, 1}, DataType}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{typeof(Base.length), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:colormap}})
@precompile(Tuple{typeof(MakieCore.hasfield), MakieCore.Attributes, Base.Val{:colorrange}})
@precompile(Tuple{typeof(Base.map), Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Array{Symbol, 1}, Nothing, Nothing})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Array{ColorTypes.RGBA{Float32}, 1}, Tuple{Symbol}, NamedTuple{(:color,), Tuple{Array{ColorTypes.RGBA{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.isempty), NamedTuple{(:color,), Tuple{Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:color,), Tuple{Array{ColorTypes.RGBA{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.tuple_type_cons), Type{GeometryBasics.Point{2, Float32}}, Type{Tuple{ColorTypes.RGBA{Float32}}}})
@precompile(Tuple{GeometryBasics.var"#meta##kw", NamedTuple{(:color,), Tuple{Array{ColorTypes.RGBA{Float32}, 1}}}, typeof(GeometryBasics.meta), Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Type{GeometryBasics.Mesh{Dim, T, Element, V} where V<:AbstractArray{Element, 1} where Element<:GeometryBasics.Polytope{Dim, T} where T<:Number where Dim}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#545#547"{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, 3}}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.NgonFace{3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{3}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, 3}}})
@precompile(Tuple{typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, MakieCore.Attributes, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.Point{2, Float32}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(GeometryBasics.decompose), Type{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}}, GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{Type{NamedTuple{(:color,), T} where T<:Tuple}, Tuple{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:color,), Tuple{Array{ColorTypes.RGBA{Float32}, 1}}}})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, 1}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, MakieCore.Attributes, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}}}})
@precompile(Tuple{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Base._similar_for), Array{GeometryBasics.Point{2, Float32}, 1}, Type{Symbol}, Base.Generator{Array{GeometryBasics.Point{2, Float32}, 1}, Makie.var"#542#544"{Array{Symbol, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Symbol, 1}, Symbol, Base.Generator{Array{GeometryBasics.Point{2, Float32}, 1}, Makie.var"#542#544"{Array{Symbol, 1}}}, Int64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#541#543"{Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Array{Symbol, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{Array{Symbol, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{Array{Symbol, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Symbol, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:backlight}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:interpolate}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Symbol})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shading}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(GLMakie.mesh_inner), GLMakie.GLAbstraction.ShaderCache, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{typeof(Base.identity), typeof(Base.identity)}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#243#246", Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.to_opengl_mesh!), Base.Dict{Symbol, Any}, Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#33#37", Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}, Tuple{Observables.Observable{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#34#38", Observables.Observable{Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#35#39", Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#36#41"{Symbol}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Base.Dict{Symbol, Any}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(GeometryBasics.metafree), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(GeometryBasics.metafree), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}, Tuple{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}}}}})
@precompile(Tuple{Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.isa_gl_struct), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, UInt32})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:lines}}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}}, GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{2, Float32, GeometryBasics.Point{2, Float32}, (:color,), Tuple{ColorTypes.RGBA{Float32}}}, 1, NamedTuple{(:position, :color), Tuple{Array{GeometryBasics.Point{2, Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.Polygon{2, Float32, GeometryBasics.Point{2, Float32}, GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, Array{GeometryBasics.LineString{2, Float32, GeometryBasics.Point{2, Float32}, Base.ReinterpretArray{GeometryBasics.Ngon{2, Float32, 2, GeometryBasics.Point{2, Float32}}, 1, Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, GeometryBasics.TupleView{Tuple{GeometryBasics.Point{2, Float32}, GeometryBasics.Point{2, Float32}}, 2, 1, Array{GeometryBasics.Point{2, Float32}, 1}}, false}}, 1}}, 1}}}})
@precompile(Tuple{StaticArrays.var"##s25#240", Any, Any, Any, Any, Type, Any})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#241#242", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#241#242"}})
@precompile(Tuple{typeof(Base.rand), Type{GeometryBasics.Point{3, Float32}}, Int64})
@precompile(Tuple{Type{NamedTuple{(:type,), T} where T<:Tuple}, Tuple{DataType}})
@precompile(Tuple{Type{NamedTuple{(:axis,), T} where T<:Tuple}, Tuple{NamedTuple{(:type,), Tuple{DataType}}}})
@precompile(Tuple{MakieCore.var"#meshscatter##kw", NamedTuple{(:axis,), Tuple{NamedTuple{(:type,), Tuple{DataType}}}}, typeof(MakieCore.meshscatter), Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GridLayoutBase.Inside})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Float64})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, MakieCore.Automatic})
@precompile(Tuple{Type{ColorTypes.RGBA{Float32}}, Int64, Int64, Int64, Float64})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, ColorTypes.RGBA{Float32}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Tuple{Nothing, Nothing, Nothing}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Tuple{Float64, Float64}})
@precompile(Tuple{Type{Makie.Axis3}, Makie.Figure})
@precompile(Tuple{typeof(Base.afoldl), Base.var"#49#50", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
@precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Tuple{Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Float64}, Pair{Symbol, Float64}, Pair{Symbol, Float32}, Pair{Symbol, Tuple{Float64, Float64, Float64}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Int64}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, GeometryBasics.HyperRectangle{3, Float32}}, Pair{Symbol, Tuple{Nothing, Nothing, Nothing}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}}})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Union{Nothing, Bool}}, Tuple{Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Float64}, Pair{Symbol, Float64}, Pair{Symbol, Float32}, Pair{Symbol, Tuple{Float64, Float64, Float64}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Int64}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, GeometryBasics.HyperRectangle{3, Float32}}, Pair{Symbol, Tuple{Nothing, Nothing, Nothing}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}}, Int64})
@precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, Nothing}, Pair{Symbol, Nothing}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, GridLayoutBase.Inside}, Pair{Symbol, Float64}, Pair{Symbol, Float64}, Pair{Symbol, Float32}, Pair{Symbol, Tuple{Float64, Float64, Float64}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, ColorTypes.RGBA{Float32}}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Int64}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Int64}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, Makie.WilkinsonTicks}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, MakieCore.Automatic}, Pair{Symbol, String}, Pair{Symbol, String}, Pair{Symbol, Float32}, Pair{Symbol, Float32}, Pair{Symbol, Bool}, Pair{Symbol, Symbol}, Pair{Symbol, Observables.Observable{Any}}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Symbol}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, Bool}, Pair{Symbol, GeometryBasics.HyperRectangle{3, Float32}}, Pair{Symbol, Tuple{Nothing, Nothing, Nothing}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}, Pair{Symbol, Tuple{Float64, Float64}}}, Int64})
@precompile(Tuple{Type{Makie.Axis3}, Makie.Figure, GridLayoutBase.LayoutObservables{GridLayoutBase.GridLayout}, Makie.Scene})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Int64})
@precompile(Tuple{Type{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{Any}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{Any}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1006#1007"{DataType}, Observables.Observable{Any}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Float32})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Makie.WilkinsonTicks})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Tuple{Nothing, Nothing, Nothing}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Float64})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Makie.convert_for_attribute), Type, Tuple{Float64, Float64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float32, Float32, Float32}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:clear, :backgroundcolor), Tuple{Bool, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:backgroundcolor,), Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.convert), Type{Base.Broadcast.var"#10#12"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#9#11", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, typeof(Base.:(/))}}, Base.Broadcast.var"#10#12"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#9#11", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, typeof(Base.:(/))}})
@precompile(Tuple{typeof(Base.convert), Type{Base.Broadcast.var"#10#12"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#9#11", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.max)}}, typeof(Base.:(/))}}, Base.Broadcast.var"#10#12"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#9#11", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.max)}}, typeof(Base.:(/))}})
@precompile(Tuple{typeof(Base.sqrt), Int64})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float64}}, Int64, Vararg{Int64}})
@precompile(Tuple{Type{Makie.ScrollEvent}, Int64, Int64})
@precompile(Tuple{typeof(Base.convert), Type{Makie.ScrollEvent}, Makie.ScrollEvent})
@precompile(Tuple{typeof(Core.convert), Type{Tuple{Bool, Makie.DragRotate}}, Tuple{Bool, Makie.DragRotate}})
@precompile(Tuple{typeof(Makie.initialize_block!), Makie.Axis3})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1294#1308"{Makie.Axis3}}, Makie.var"#1294#1308"{Makie.Axis3}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1294#1308"{Makie.Axis3}}})
@precompile(Tuple{Makie.var"#1294#1308"{Makie.Axis3}, Int64})
@precompile(Tuple{Makie.var"##Scene#77", Makie.Events, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Bool, Nothing, Makie.PixelCamera, Makie.Transformation, MakieCore.Attributes, Array{MakieCore.AbstractScreen, 1}, Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol}, NamedTuple{(:backgroundcolor,), Tuple{Observables.Observable{Any}}}}, Type{Makie.Scene}, Makie.Scene})
@precompile(Tuple{Makie.var"##Scene#68", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Makie.Events, Bool, Function, Nothing, Makie.EmptyCamera, Makie.Transformation, Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, MakieCore.Attributes, Array{Makie.Scene, 1}, Array{MakieCore.AbstractScreen, 1}, Makie.Scene, Observables.Observable{Bool}, Makie.SSAO, MakieCore.Automatic, Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol}, NamedTuple{(:backgroundcolor,), Tuple{Observables.Observable{Any}}}}, Type{Makie.Scene}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:colormap, :visible, :rowgap, :markerstrokewidth, :patchstrokecolor, :axis, :linecolor, :markersize, :camera, :linestyle, :font, :axis_type, :ambient, :lightposition, :figure_padding, :markerstrokecolor, :patchcolor, :legend, :axis3d, :textcolor, :resolution, :marker, :padding, :colgap, :SSAO, :palette, :backgroundcolor, :markercolor, :patchstrokewidth, :linewidth, :inspectable, :limits), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Attributes, MakieCore.Attributes, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol}, NamedTuple{(:backgroundcolor,), Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Makie.cameracontrols!), Makie.Scene, Makie.OrthographicCamera})
@precompile(Tuple{typeof(Base.rem), Float64, Float64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Bool})
@precompile(Tuple{Type{Float64}, Base.Irrational{:π}, Base.Rounding.RoundingMode{:Down}})
@precompile(Tuple{typeof(Base.:(<)), Float64, Base.Irrational{:π}})
@precompile(Tuple{typeof(Base.:(>)), Float64, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1295#1309"{Observables.Observable{Bool}}}, Makie.var"#1295#1309"{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1295#1309"{Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1296#1310"{Observables.Observable{Bool}}}, Makie.var"#1296#1310"{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1296#1310"{Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1297#1311"{Observables.Observable{Bool}}}, Makie.var"#1297#1311"{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1297#1311"{Observables.Observable{Bool}}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), typeof(Makie.calculate_matrices), Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.convert), Type{Base.Broadcast.var"#10#12"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#9#11"}, Base.Broadcast.var"#16#18"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}, Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(/))}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(*))}, typeof(Base.:(/))}}, Base.Broadcast.var"#10#12"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#9#11"}, Base.Broadcast.var"#16#18"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}, Base.Broadcast.var"#13#14"{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(/))}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}}, typeof(Base.:(*))}, typeof(Base.:(/))}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{4, 4}}})
@precompile(Tuple{typeof(Base.convert), Type{Float64}, Bool})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, L} where L}, LinearAlgebra.UniformScaling{Bool}})
@precompile(Tuple{typeof(Makie.calculate_matrices), GeometryBasics.HyperRectangle{3, Float32}, GeometryBasics.HyperRectangle{2, Int64}, Float64, Float64, Float32, Tuple{Float64, Float64, Float64}, Symbol})
@precompile(Tuple{Base.Broadcast.var"#16#18"{Base.Broadcast.var"#15#17", Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Base.Broadcast.var"#23#24"{Base.Broadcast.var"#25#26"}, Base.Broadcast.var"#19#20"{Base.Broadcast.var"#21#22"}, DataType}, Float32, Float64, Float64})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float64}}, Tuple{Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.:(|>)), GeometryBasics.Vec{3, Float64}, typeof(Makie.scalematrix)})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.Vec{3, Float64}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.Vec{3, Float64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Base.Broadcast.Broadcasted{StaticArrays.StaticArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, GeometryBasics.Vec{3, Float32}}}, GeometryBasics.Vec{3, Float64}}}})
@precompile(Tuple{typeof(Makie.translationmatrix), GeometryBasics.Vec{3, Float64}})
@precompile(Tuple{typeof(Base.:(*)), StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}})
@precompile(Tuple{typeof(Base.:(*)), StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{4, Float32}}})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), Function, Type{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}}})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), StaticArrays.var"#431#433"{Tuple{Int64, Int64}}, Type{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}}, Symbol})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Int64, Int64})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Point{4, Float64}}})
@precompile(Tuple{StaticArrays.var"##s25#231", Any, Any, Any, Type, Any})
@precompile(Tuple{typeof(Base.eltype), Type{GeometryBasics.Point{4, Float64}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#232#233", Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#232#233"}})
@precompile(Tuple{Type{GeometryBasics.Point{4, Float64}}, Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Makie.var"#1323#1325", typeof(Base.max)}, Type{GeometryBasics.Point{4, Float64}}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Makie.var"#1324#1326", typeof(Base.max)}, Type{GeometryBasics.Point{4, Float64}}})
@precompile(Tuple{typeof(Makie.projectionmatrix), StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.HyperRectangle{3, Float32}, GeometryBasics.Vec{3, Float64}, Float64, Float64, Float64, Float64, Int64, Int64, GeometryBasics.Vec{3, Float64}, Symbol})
@precompile(Tuple{typeof(Base.inv), StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}})
@precompile(Tuple{typeof(Base.:(*)), StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{4, Float32}})
@precompile(Tuple{Type{GeometryBasics.Vec{3, Float32}}, GeometryBasics.Vec{4, Float64}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_matrices), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_matrices), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_matrices), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1298#1312"{Makie.Scene}}, Makie.var"#1298#1312"{Makie.Scene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1298#1312"{Makie.Scene}}})
@precompile(Tuple{Makie.var"#1299#1313", GeometryBasics.HyperRectangle{3, Float32}, Makie.WilkinsonTicks, MakieCore.Automatic})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1299#1313", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1299#1313", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1299#1313", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#1300#1314", GeometryBasics.HyperRectangle{3, Float32}, Makie.WilkinsonTicks, MakieCore.Automatic})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1300#1314", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1300#1314", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1300#1314", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Makie.var"#1301#1315", GeometryBasics.HyperRectangle{3, Float32}, Makie.WilkinsonTicks, MakieCore.Automatic})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1301#1315", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1301#1315", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1301#1315", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Makie.add_panel!), Makie.Scene, Makie.Axis3, Int64, Int64, Int64, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1382#1385"{Int64, Int64, Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1382#1385"{Int64, Int64, Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1382#1385"{Int64, Int64, Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Type{NamedTuple{(:shading, :inspectable, :xautolimits, :yautolimits, :zautolimits, :color, :visible), T} where T<:Tuple}, Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:shading, :inspectable, :xautolimits, :yautolimits, :zautolimits, :color, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.mesh!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:shading, :inspectable, :xautolimits, :yautolimits, :zautolimits, :color, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.mesh!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:shading, :inspectable, :xautolimits, :yautolimits, :zautolimits, :color, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Observables.to_value), Tuple{Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Base.Broadcast.Style{Tuple}, Function, Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(Base.Broadcast.instantiate), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{Observables.Observable{T} where T}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.map), typeof(tuple), Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}}, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{typeof(Makie.add_gridlines_and_frames!), Makie.Scene, Makie.Scene, Makie.Axis3, Int64, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1332#1345", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1332#1345", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1332#1345", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}})
@precompile(Tuple{Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, GeometryBasics.HyperRectangle{3, Float32}, Array{Float64, 1}, Bool, Bool})
@precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}}, Base.Generator{Array{Float64, 1}, Makie.var"#1334#1347"{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, Int64, Makie.var"#1331#1344"{Int64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.ndims), Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}, Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, Base.Generator{Array{Float64, 1}, Makie.var"#1334#1347"{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, Int64, Makie.var"#1331#1344"{Int64}}}, Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth, :xautolimits, :yautolimits, :zautolimits, :transparency, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:color, :linewidth, :xautolimits, :yautolimits, :zautolimits, :transparency, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Bool}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :linewidth, :xautolimits, :yautolimits, :zautolimits, :transparency, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :linewidth, :xautolimits, :yautolimits, :zautolimits, :transparency, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Vararg{Any}})
@precompile(Tuple{Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, GeometryBasics.HyperRectangle{3, Float32}, Array{Float64, 1}, Bool, Bool})
@precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}}, Base.Generator{Array{Float64, 1}, Makie.var"#1338#1351"{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, Int64, Makie.var"#1331#1344"{Int64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}, Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, Base.Generator{Array{Float64, 1}, Makie.var"#1338#1351"{GeometryBasics.Vec{3, Float32}, GeometryBasics.Vec{3, Float32}, Float32, Int64, Makie.var"#1331#1344"{Int64}}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Bool}, Observables.Observable{Bool}}})
@precompile(Tuple{Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, GeometryBasics.HyperRectangle{3, Float32}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}, Bool, Bool})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{GeometryBasics.Point{3, Float32}, 1}, Base.RefValue{Makie.Scene}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Makie.to_topscene_z_2d), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Base.RefValue{Makie.Scene}}})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{Base.Broadcast.var"#13#14"{Base.Broadcast.var"#15#17"}, Float32, Float32})
@precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{GeometryBasics.Vec{2, Int64}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Makie.to_topscene_z_2d), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Base.RefValue{Makie.Scene}}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vcat), Observables.Observable{Any}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vcat), Observables.Observable{Any}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.vcat), Observables.Observable{Any}}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.vcat), Symbol, Symbol, Symbol})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Array{Symbol, 1}})
@precompile(Tuple{Type{NamedTuple{(:color, :linewidth, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:color, :linewidth, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :linewidth, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :linewidth, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{Makie.var"#110#112", Array{Symbol, 1}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#110#112", Observables.Observable{Array{Symbol, 1}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.setindex!), MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, Observables.Observable{Array{Symbol, 1}}, Symbol})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}, 1}}})
@precompile(Tuple{typeof(Makie.add_ticks_and_ticklabels!), Makie.Scene, Makie.Scene, Makie.Axis3, Int64, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1357#1371", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1357#1371", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1357#1371", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1358#1372", Observables.Observable{Array{String, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1358#1372", Observables.Observable{Array{String, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1358#1372", Observables.Observable{Array{String, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}})
@precompile(Tuple{Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, GeometryBasics.HyperRectangle{3, Float32}, Array{Float64, 1}, Bool, Bool, Bool, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}}, Base.Generator{Array{Float64, 1}, Makie.var"#1360#1374"{Float32, Float32, Float32, Float32, Int64, Observables.Observable{Any}, Makie.var"#1356#1370"{Int64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}, Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, Base.Generator{Array{Float64, 1}, Makie.var"#1360#1374"{Float32, Float32, Float32, Float32, Int64, Observables.Observable{Any}, Makie.var"#1356#1370"{Int64}}}, Int64})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{typeof(Base.size), Type{GeometryBasics.Point{3, Float64}}})
@precompile(Tuple{typeof(Base.length), Type{GeometryBasics.Point{3, Float64}}})
@precompile(Tuple{typeof(Base.map), Makie.var"#1361#1375"{Makie.Scene}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Observables.onany), Function, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##onany#12", Bool, Int64, typeof(Observables.onany), Function, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1361#1375"{Makie.Scene}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1361#1375"{Makie.Scene}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1361#1375"{Makie.Scene}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}}})
@precompile(Tuple{Type{NamedTuple{(:xautolimits, :yautolimits, :zautolimits, :transparency, :inspectable, :color, :linewidth, :visible), T} where T<:Tuple}, Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{MakieCore.var"#linesegments!##kw", NamedTuple{(:xautolimits, :yautolimits, :zautolimits, :transparency, :inspectable, :color, :linewidth, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##linesegments!#36", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:xautolimits, :yautolimits, :zautolimits, :transparency, :inspectable, :color, :linewidth, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.linesegments!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, 1}}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:xautolimits, :yautolimits, :zautolimits, :transparency, :inspectable, :color, :linewidth, :visible), Tuple{Bool, Bool, Bool, Bool, Bool, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.linesegments, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}}})
@precompile(Tuple{typeof(Makie.color_and_colormap!), MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{Array{String, 1}}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#1363#1377"{Makie.Scene}, GeometryBasics.HyperRectangle{2, Int64}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}, Array{String, 1}, Int64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1363#1377"{Makie.Scene}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{Array{String, 1}}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1363#1377"{Makie.Scene}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{Array{String, 1}}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1363#1377"{Makie.Scene}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{Array{String, 1}}, Observables.Observable{Any}}}}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Bool}, Vararg{Observables.Observable{Bool}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1366#1380"{Int64}, Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1366#1380"{Int64}, Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1366#1380"{Int64}, Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}}}}})
@precompile(Tuple{Type{NamedTuple{(:align, :color, :textsize, :font, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:align, :color, :textsize, :font, :visible, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:align, :color, :textsize, :font, :visible, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:align, :color, :textsize, :font, :visible, :inspectable), Tuple{Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}}})
@precompile(Tuple{typeof(Base.getindex), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.first), Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.first), Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Base._array_for), Type{GeometryBasics.Point{3, Float32}}, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}, Base.HasShape{1}})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.iterate), Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}, Int64})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Array{String, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, Array{String, 1}, Float32, String, Tuple{Symbol, Symbol}, Float64, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Makie.translate!), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Int64, Int64, Int64})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#1367#1381"{Makie.Scene, Int64, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Makie.var"#1367#1381"{Makie.Scene, Int64, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#1367#1381"{Makie.Scene, Int64, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(StaticArrays.has_size1), Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{2, 2}}})
@precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{2, 2}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{2, 2}}})
@precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{2, 2}}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}, Float64, Vararg{Float64}})
@precompile(Tuple{Type{StaticArrays.Args{T} where T<:Tuple}, Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}, Tuple{Float64, Float64, Float64, Float64}})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), Function, Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}})
@precompile(Tuple{typeof(StaticArrays.gen_by_access), StaticArrays.var"#431#433"{Tuple{Int64, Int64}}, Type{StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}}, Symbol})
@precompile(Tuple{typeof(StaticArrays.mul_parent), StaticArraysCore.SArray{Tuple{2, 2}, Float32, 2, 4}})
@precompile(Tuple{typeof(Base.Math.deg2rad), Int64})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#1367#1381"{Makie.Scene, Int64, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Makie.var"#1367#1381"{Makie.Scene, Int64, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Float32}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, GeometryBasics.HyperRectangle{2, Int64}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{3, Float32}, Bool, Bool, Bool, Int64, MakieCore.Automatic, MakieCore.Automatic})
@precompile(Tuple{typeof(Base.:(!=)), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Type{NamedTuple{(:color, :textsize, :font, :position, :rotation, :align, :visible, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:color, :textsize, :font, :position, :rotation, :align, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :textsize, :font, :position, :rotation, :align, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :textsize, :font, :position, :rotation, :align, :visible, :inspectable), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{GeometryBasics.Point{2, Float32}}, Observables.Observable{Float32}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Any}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{Float32}})
@precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Observables.Observable{Tuple{Symbol, Symbol}}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, String})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, String})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}, String})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{String}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}, String})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{String}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{String}}, Int64, Int64})
@precompile(Tuple{Type{Observables.Observable{T} where T}, Tuple{String}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{String}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{String}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{String}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{String}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{String}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{String}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{String}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{String}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{String}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{String}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{String}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{String}}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{String}, 1}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}, MakieCore.Attributes, Tuple{Observables.Observable{Any}}, Observables.Observable{Tuple{String}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{MakieCore.text, Tuple{String}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{String}}, Tuple{Observables.Observable{Tuple{String}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{String}}, Tuple{Observables.Observable{Tuple{String}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{String}}, Tuple{Observables.Observable{Tuple{String}}}}}})
@precompile(Tuple{Type{NamedTuple{(:text,), T} where T<:Tuple}, Tuple{Observables.Observable{String}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:text,), Tuple{Observables.Observable{String}}}, MakieCore.Attributes})
@precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Base.merge), NamedTuple{(:text,), Tuple{Observables.Observable{String}}}, NamedTuple{(:transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Observables.Observable{T} where T, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:text, :transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.text!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:text, :transparency, :strokecolor, :specular, :position, :visible, :space, :ssao, :word_wrap_width, :justification, :font, :align, :textsize, :nan_color, :shininess, :strokewidth, :rotation, :overdraw, :lineheight, :transformation, :model, :depth_shift, :color, :offset, :markerspace, :inspectable, :linewidth, :diffuse), Tuple{Observables.Observable{String}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, MakieCore.Combined{MakieCore.text, Tuple{String}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{String}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{String}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Point{2, Float32}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float32}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Any}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{MakieCore.text, Tuple{String}}, Type{MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Makie.parent_scene), MakieCore.Combined{MakieCore.text, Tuple{String}}})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, String, Float32, String, Tuple{Symbol, Symbol}, Float32, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Base.Math.rad2deg), Float64})
@precompile(Tuple{typeof(Base.:(<=)), Float64, Int64})
@precompile(Tuple{typeof(Base.map), Makie.var"#1302#1316", Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}})
@precompile(Tuple{Makie.var"#1302#1316", GeometryBasics.HyperRectangle{2, Int64}, Float32, Symbol})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1302#1316", Observables.Observable{GeometryBasics.Point{2, Float64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1302#1316", Observables.Observable{GeometryBasics.Point{2, Float64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1302#1316", Observables.Observable{GeometryBasics.Point{2, Float64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1303#1317", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1303#1317", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1303#1317", Observables.Observable{Tuple{Symbol, Symbol}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :markerspace, :inspectable), T} where T<:Tuple}, Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}})
@precompile(Tuple{MakieCore.var"#text!##kw", NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :markerspace, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##text!#52", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :markerspace, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}}, typeof(MakieCore.text!), Makie.Scene, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:position, :visible, :textsize, :align, :font, :color, :markerspace, :inspectable), Tuple{Observables.Observable{GeometryBasics.Point{2, Float64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Tuple{Symbol, Symbol}}, Observables.Observable{Any}, Observables.Observable{Any}, Symbol, Bool}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, Makie.Scene, Observables.Observable{Any}})
@precompile(Tuple{typeof(MakieCore.value_convert), Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Base.convert), Type{Observables.Observable{Any}}, Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, ArgType} where ArgType}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(MakieCore.used_attributes), Type, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float64}}}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float64}}}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(MakieCore.plottype), Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float64}}}}, Array{GeometryBasics.Point{2, Float32}, 1}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Tuple{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{MakieCore.text, Tuple{String}}, Type{MakieCore.Combined{MakieCore.text, Tuple{GeometryBasics.Point{2, Float64}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Any}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Makie.var"#1801#1804"{Base.RefValue{Array{Int64, 1}}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{Float32, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Array{Makie.GlyphCollection, 1}}}, String, Float32, String, Tuple{Symbol, Symbol}, Float64, MakieCore.Automatic, Float64, Symbol, Tuple{Symbol, Float64}, Int64, Int64})
@precompile(Tuple{typeof(Makie.addmouseevents!), Makie.Scene})
@precompile(Tuple{typeof(Base.getproperty), Makie.Events, Symbol})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1304#1318"{Makie.Axis3, Makie.Scene}}, Makie.var"#1304#1318"{Makie.Axis3, Makie.Scene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1304#1318"{Makie.Axis3, Makie.Scene}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1305#1319"{Makie.Axis3, Makie.Scene}}, Makie.var"#1305#1319"{Makie.Axis3, Makie.Scene}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1305#1319"{Makie.Axis3, Makie.Scene}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1306#1320"{Makie.Axis3}}, Makie.var"#1306#1320"{Makie.Axis3}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1306#1320"{Makie.Axis3}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#1307#1321"{Makie.Axis3}}, Makie.var"#1307#1321"{Makie.Axis3}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#1307#1321"{Makie.Axis3}}})
@precompile(Tuple{typeof(Core.convert), Type{Makie.var"#process_event#1322"{Makie.Axis3}}, Makie.var"#process_event#1322"{Makie.Axis3}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Makie.var"#process_event#1322"{Makie.Axis3}}})
@precompile(Tuple{Makie.var"#1306#1320"{Makie.Axis3}, Tuple{Nothing, Nothing, Nothing}})
@precompile(Tuple{typeof(Makie.convert_limit_attribute), Tuple{Nothing, Nothing, Nothing}})
@precompile(Tuple{Makie.var"#1329#1330"{Int64}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{Makie.var"#1329#1330"{Int64}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.filter), typeof(Makie.isfinite_rect), Array{Any, 1}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Makie.var"#1307#1321"{Makie.Axis3}, GeometryBasics.HyperRectangle{3, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.calculate_matrices), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}, Symbol, Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}}, Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{Makie.var"#1298#1312"{Makie.Scene}, Tuple{StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}, GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Symbol, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}})
@precompile(Tuple{typeof(Base.convert), Type{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, StaticArraysCore.SArray{Tuple{4, 4}, Float64, 2, 16}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1341#1354"{Makie.Scene, Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}}, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1359#1373"{Int64, Observables.Observable{Any}, Int64, Int64, Makie.var"#1356#1370"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{Bool}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Symbol, Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1361#1375"{Makie.Scene}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}}}, Any})
@precompile(Tuple{Makie.var"#1361#1375"{Makie.Scene}, Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}, StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}, GeometryBasics.HyperRectangle{2, Int64}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}, Symbol, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Symbol, Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}, Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.linesegments, Tuple{Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}}}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Int64, Int64})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Symbol, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Symbol, Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}})
@precompile(Tuple{typeof(Base.convert), Type{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1363#1377"{Makie.Scene}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{StaticArraysCore.SArray{Tuple{4, 4}, Float32, 2, 16}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}, Observables.Observable{Array{String, 1}}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}, Symbol, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Symbol, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Makie.apply_convert!), Type, MakieCore.Attributes, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Int64})
@precompile(Tuple{typeof(Base.indexed_iterate), Tuple{DataType, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Int64, Int64})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Tuple{Observables.Observable{Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#117#119"{Int64}, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}})
@precompile(Tuple{Makie.var"#1809#1810"{Observables.Observable{Array{GeometryBasics.Point{3, Float32}, 1}}, Observables.Observable{Array{String, 1}}}, Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Type{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Point{3, Float32}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.to_ndim), Tuple{Base.RefValue{DataType}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.last), Tuple{Base.Broadcast.Extruded{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Float32})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Float32})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float32}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float32}}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, Tuple{Symbol, Symbol}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1299#1313", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1332#1345", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#1332#1345", Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{Float64, 1}}, Symbol, Array{Float64, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{Float64, 1}}, Array{Float64, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1333#1346"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}, Tuple{Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Symbol, Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1337#1350"{Int64, Int64, Int64, Makie.var"#1331#1344"{Int64}}, Observables.Observable{Array{Tuple{GeometryBasics.Point{3, Float64}, GeometryBasics.Point{3, Float64}}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Array{Float64, 1}}, Observables.Observable{Bool}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1357#1371", Observables.Observable{Array{Float64, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#1357#1371", Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1358#1372", Observables.Observable{Array{String, 1}}}, Tuple{Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}}, Any})
@precompile(Tuple{Makie.var"#1358#1372", Tuple{Array{Float64, 1}, Array{String, 1}}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1300#1314", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1301#1315", Observables.Observable{Tuple{Array{Float64, 1}, Array{String, 1}}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1382#1385"{Int64, Int64, Int64}, Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{3, Float32}}, Observables.Observable{Bool}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Symbol, Array{GeometryBasics.Point{3, Float64}, 1}})
@precompile(Tuple{typeof(Base.convert), Type{Array{GeometryBasics.Point{3, Float64}, 1}}, Array{GeometryBasics.Point{3, Float64}, 1}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{3, Float64}, 1}}, Observables.Observable{Array{Int64, 2}}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}, Symbol, Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}, Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{3, Float64}, 1}, Array{Int64, 2}}}}}, Any})
@precompile(Tuple{typeof(Base.filter), Makie.var"#997#999"{Makie.Axis3}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.getproperty), Makie.Axis3, Symbol})
@precompile(Tuple{typeof(Base.in), Makie.Axis3, Array{Any, 1}})
@precompile(Tuple{typeof(Makie.can_be_current_axis), Makie.Axis3})
@precompile(Tuple{typeof(Makie.current_axis!), Makie.Figure, Makie.Axis3})
@precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Any}, Makie.Axis3})
@precompile(Tuple{typeof(Base.setindex!), Makie.Figure, Makie.Axis3, Int64, Int64})
@precompile(Tuple{typeof(GridLayoutBase.reporteddimensionsobservable), Makie.Axis3})
@precompile(Tuple{typeof(Core.convert), Type{GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis3}}, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis3}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, GridLayoutBase.var"#14#15"{GridLayoutBase.GridContent{GridLayoutBase.GridLayout}, Makie.Axis3}}})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.Axis3, GridLayoutBase.Col, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.determinedirsize), Makie.Axis3, GridLayoutBase.Row, GridLayoutBase.Inner})
@precompile(Tuple{typeof(GridLayoutBase.suggestedbboxobservable), Makie.Axis3})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#1302#1316", Observables.Observable{GeometryBasics.Point{2, Float64}}}, Tuple{Observables.Observable{GeometryBasics.HyperRectangle{2, Int64}}, Observables.Observable{Any}, Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{GeometryBasics.Point{2, Float64}}, Symbol, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.convert), Type{GeometryBasics.Point{2, Float64}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#6#7"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Any}, Symbol, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#8#9"{Observables.Observable{Any}}, GeometryBasics.Point{2, Float64}})
@precompile(Tuple{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}, Tuple{Observables.Observable{Any}}}, Any})
@precompile(Tuple{typeof(Base.setproperty!), Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}, Symbol, Tuple{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{GeometryBasics.Point{2, Float64}}}, Tuple{GeometryBasics.Point{2, Float64}}})
@precompile(Tuple{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{GeometryBasics.Point{2, Float64}}}}}, Any})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis3, Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}, MakieCore.Attributes, Array{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Int64}, Int64, Type{MakieCore.Combined{MakieCore.meshscatter, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#1329#1330"{Int64}, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.data_limits), MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.data_limits), Tuple{Base.Broadcast.Extruded{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{GeometryBasics.HyperRectangle{3, Float32}}})
@precompile(Tuple{typeof(Base.setindex!), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}, GeometryBasics.HyperRectangle{3, Float32}, Int64})
@precompile(Tuple{typeof(Base.ndims), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Makie.data_limits), Tuple{Base.Broadcast.Extruded{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{typeof(Base.filter), typeof(Makie.isfinite_rect), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.isempty), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.getindex), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}, Int64})
@precompile(Tuple{typeof(Base.lastindex), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}})
@precompile(Tuple{typeof(Base.getindex), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Base.iterate), Array{GeometryBasics.HyperRectangle{3, Float32}, 1}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis3, MakieCore.Combined{MakieCore.meshscatter, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#hasfocuscb#155"{Observables.Observable{Bool}}, GLFW.Window, Bool})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:linesegments}}, Array{Symbol, 1}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}, Pair{Symbol, Observables.Observable{Any}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:transparency}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Pair{Symbol, Observables.Observable{Bool}}, 1}, Pair{Symbol, Observables.Observable{Bool}}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:specular}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(Base.collect_to!), Array{Pair{Symbol, B} where B, 1}, Base.Generator{MakieCore.Attributes, GLMakie.var"#175#178"{MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}, Int64, Int64})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:colormap}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:visible}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:space}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:ssao}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linestyle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{Type{MakieCore.Key{:zautolimits}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:nan_color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:shininess}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:overdraw}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:cycle}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{Type{MakieCore.Key{:xautolimits}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:model}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:depth_shift}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:color}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{Type{MakieCore.Key{:yautolimits}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:inspectable}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:linewidth}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:diffuse}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:fxaa}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(GLMakie.handle_view), Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Base.Dict{Symbol, Any}})
@precompile(Tuple{typeof(Makie.apply_transform), Observables.Observable{Any}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{Makie.var"#656#657", Function, Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}})
@precompile(Tuple{typeof(Makie.apply_transform), typeof(Base.identity), Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Observables.Observable{Any}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#656#657", Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, Tuple{Observables.Observable{Any}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(GLMakie.draw_linesegments), Any, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}, Base.Dict{K, V} where V where K})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Base.length), Observables.Observable{Int64}}, Tuple{Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.GLBuffer{T} where T}, Observables.Observable{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}})
@precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt32, MakieCore.AbstractPlot{Typ} where Typ}, MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}, UInt32})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:font}, MakieCore.Key{:text}}, String})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:textsize}, MakieCore.Key{:text}}, Float32})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{MakieCore.text, Tuple{String}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{MakieCore.text, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:zautolimits}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:zautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:xautolimits}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:xautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:yautolimits}, MakieCore.Key{:mesh}, MakieCore.Combined{MakieCore.mesh, Tuple{GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:mesh}}, Bool})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:yautolimits}, MakieCore.Key{:mesh}}, Observables.Observable{Bool}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{GLMakie.var"#243#246", GeometryBasics.Mesh{3, Float32, GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.FaceView{GeometryBasics.Ngon{3, Float32, 3, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}}, GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, StructArrays.StructArray{GeometryBasics.PointMeta{3, Float32, GeometryBasics.Point{3, Float32}, (:normals,), Tuple{GeometryBasics.Vec{3, Float32}}}, 1, NamedTuple{(:position, :normals), Tuple{Array{GeometryBasics.Point{3, Float32}, 1}, Array{GeometryBasics.Vec{3, Float32}, 1}}}, Int64}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, Function})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:zautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:xautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.lift_convert_inner), Observables.Observable{Any}, MakieCore.Key{:yautolimits}, MakieCore.Key{:linesegments}, MakieCore.Combined{MakieCore.linesegments, Tuple{Array{GeometryBasics.Point{3, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, ColorTypes.RGBA{Float32}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:meshscatter}}, Observables.Observable{ColorTypes.RGBA{Float32}}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Function, Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), typeof(GLMakie.to_meshcolor), Observables.Observable{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.linesegments, Tuple{Base.ReinterpretArray{GeometryBasics.Point{3, Float32}, 1, Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, Array{Tuple{GeometryBasics.Point{3, Float32}, GeometryBasics.Point{3, Float32}}, 1}, false}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{MakieCore.text, Tuple{String}}})
@precompile(Tuple{Type{NamedTuple{(:linecolor, :background_color), T} where T<:Tuple}, Tuple{Symbol, Symbol}})
@precompile(Tuple{typeof(Base.map), Function, Float32})
@precompile(Tuple{Makie.var"#43#45", Float32})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:linecolor, :background_color), Tuple{Symbol, Symbol}}, Type{Makie.LinePattern}})
@precompile(Tuple{Type{NamedTuple{(:color,), T} where T<:Tuple}, Tuple{Makie.LinePattern}})
@precompile(Tuple{Makie.var"#barplot##kw", NamedTuple{(:color,), Tuple{Makie.LinePattern}}, typeof(Makie.barplot), Base.UnitRange{Int64}})
@precompile(Tuple{Type{Base.Val{:fillto}}})
@precompile(Tuple{Type{Base.Val{:offset}}})
@precompile(Tuple{Type{Base.Val{:width}}})
@precompile(Tuple{Type{Base.Val{:dodge}}})
@precompile(Tuple{Type{Base.Val{:n_dodge}}})
@precompile(Tuple{Type{Base.Val{:gap}}})
@precompile(Tuple{Type{Base.Val{:dodge_gap}}})
@precompile(Tuple{Type{Base.Val{:stack}}})
@precompile(Tuple{Type{Base.Val{:direction}}})
@precompile(Tuple{Type{Base.Val{:bar_labels}}})
@precompile(Tuple{Type{Base.Val{:flip_labels_at}}})
@precompile(Tuple{Type{Base.Val{:label_color}}})
@precompile(Tuple{Type{Base.Val{:color_over_background}}})
@precompile(Tuple{Type{Base.Val{:color_over_bar}}})
@precompile(Tuple{Type{Base.Val{:label_formatter}}})
@precompile(Tuple{Type{Base.Val{:label_offset}}})
@precompile(Tuple{Type{Base.Val{:label_font}}})
@precompile(Tuple{Type{Base.Val{:label_size}}})
@precompile(Tuple{Type{Base.Val{:label_rotation}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.barplot, ArgType} where ArgType}, MakieCore.Attributes, Base.UnitRange{Int64}})
@precompile(Tuple{Makie.var"##convert_arguments#133", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(MakieCore.convert_arguments), Type{MakieCore.Combined{Makie.barplot, Tuple{Base.UnitRange{Int64}}}}, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Base.UnitRange{Int64}}}}, Tuple{Observables.Observable{Base.UnitRange{Int64}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Base.UnitRange{Int64}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Base.UnitRange{Int64}}}})
@precompile(Tuple{Type{NamedTuple{(:y, :x), T} where T<:Tuple}, Tuple{Bool, Bool}})
@precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(Base.identity), typeof(Base.min)}, Type{Float32}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Scene, Type{MakieCore.Combined{Makie.barplot, Tuple{Base.UnitRange{Int64}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Base.UnitRange{Int64}}}, Observables.Observable{Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), Makie.Scene, Type{MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Type{NamedTuple{(:fillto, :offset, :color, :colormap, :colorrange, :dodge, :n_dodge, :gap, :dodge_gap, :marker, :stack, :strokewidth, :strokecolor, :width, :direction, :visible, :inspectable, :cycle, :bar_labels, :flip_labels_at, :label_rotation, :label_color, :color_over_background, :color_over_bar, :label_offset, :label_font, :label_size, :label_formatter, :transparency), T} where T<:Tuple}, Tuple{MakieCore.Automatic, Float64, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, MakieCore.Automatic, MakieCore.Automatic, Float64, Float64, UnionAll, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Array{Pair{Symbol, Symbol}, 1}, Nothing, Float64, Float64, Observables.Observable{Any}, MakieCore.Automatic, MakieCore.Automatic, Int64, Observables.Observable{Any}, Int64, typeof(Makie.bar_label_formatter), Bool}})
@precompile(Tuple{typeof(Base.convert), Type{Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:fillto, :offset, :color, :colormap, :colorrange, :dodge, :n_dodge, :gap, :dodge_gap, :marker, :stack, :strokewidth, :strokecolor, :width, :direction, :visible, :inspectable, :cycle, :bar_labels, :flip_labels_at, :label_rotation, :label_color, :color_over_background, :color_over_bar, :label_offset, :label_font, :label_size, :label_formatter, :transparency), Tuple{MakieCore.Automatic, Float64, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, MakieCore.Automatic, MakieCore.Automatic, Float64, Float64, UnionAll, MakieCore.Automatic, Observables.Observable{Any}, Observables.Observable{Any}, MakieCore.Automatic, Symbol, Observables.Observable{Any}, Observables.Observable{Any}, Array{Pair{Symbol, Symbol}, 1}, Nothing, Float64, Float64, Observables.Observable{Any}, MakieCore.Automatic, MakieCore.Automatic, Int64, Observables.Observable{Any}, Int64, typeof(Makie.bar_label_formatter), Bool}}, Type{MakieCore.Attributes}})
@precompile(Tuple{typeof(Base.map), Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{Observables.var"##map#19", Bool, typeof(Base.map), Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Vararg{Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.map), typeof(Observables.to_value), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Int64, Base.IteratorsMD.CartesianIndex{0}})
@precompile(Tuple{StaticArrays.var"##s25#83", Any, Any, Any})
@precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{2}}})
@precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#84#85", Base.StepRange{Int64, Int64}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.StepRange{Int64, Int64}, StaticArrays.var"#84#85"}})
@precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.StepRange{Int64, Int64}, StaticArrays.var"#84#85"}, Int64})
@precompile(Tuple{Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Array{GeometryBasics.Point{2, Float32}, 1}, MakieCore.Automatic, Float64, MakieCore.Automatic, MakieCore.Automatic, MakieCore.Automatic, Float64, Float64, MakieCore.Automatic, Symbol, Nothing, Float64, Symbol, MakieCore.Automatic, MakieCore.Automatic, typeof(Makie.bar_label_formatter), Int64})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Array{GeometryBasics.HyperRectangle{2, Float32}, 1}})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{Observables.var"##map!#14", Bool, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#calculate_bars#386"{Observables.Observable{Array{ColorTypes.RGBA{Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{GeometryBasics.Vec{2, Float32}, 1}}, Observables.Observable{Array{Tuple{String, GeometryBasics.Point{2, Float32}}, 1}}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}})
@precompile(Tuple{Type{NamedTuple{(:color, :colormap, :colorrange, :strokewidth, :strokecolor, :visible, :inspectable, :transparency), T} where T<:Tuple}, Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}})
@precompile(Tuple{Makie.var"#poly!##kw", NamedTuple{(:color, :colormap, :colorrange, :strokewidth, :strokecolor, :visible, :inspectable, :transparency), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(Makie.poly!), MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{Makie.var"##poly!#534", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:color, :colormap, :colorrange, :strokewidth, :strokecolor, :visible, :inspectable, :transparency), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(Makie.poly!), MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}, 1}}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:color, :colormap, :colorrange, :strokewidth, :strokecolor, :visible, :inspectable, :transparency), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{Makie.poly, ArgType} where ArgType}, MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(tuple), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Makie.var"#130#132"{MakieCore.Attributes, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, DataType}, Tuple{Observables.Observable{Tuple{}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.plot!), MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}, MakieCore.Attributes, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}, Type{MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{Makie.var"#117#119"{Int64}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Tuple{Observables.Observable{Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}})
@precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.triangle_mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}}})
@precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(GeometryBasics.triangle_mesh), Tuple{Base.Broadcast.Extruded{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}, Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.poly_convert), Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}})
@precompile(Tuple{MakieCore.var"#mesh!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##mesh!#40", Base.Pairs{Symbol, Observables.Observable{Any}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}}, typeof(MakieCore.mesh!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :shading, :color, :colormap, :colorrange, :overdraw, :fxaa, :transparency, :inspectable, :space), Tuple{Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.mesh, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.mesh, Tuple{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}}}}})
@precompile(Tuple{typeof(Base.map), typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{typeof(Makie.to_line_segments), Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}}, Tuple{Observables.Observable{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}}}})
@precompile(Tuple{MakieCore.var"#lines!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"##lines!#32", Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}}, typeof(MakieCore.lines!), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Vararg{Any}})
@precompile(Tuple{MakieCore.var"#plot!##kw", NamedTuple{(:visible, :color, :linestyle, :linewidth, :space, :overdraw, :transparency, :inspectable, :depth_shift), Tuple{Observables.Observable{Any}, Observables.Observable{Symbol}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Observables.Observable{Any}, Float32}}, typeof(MakieCore.plot!), Type{MakieCore.Combined{MakieCore.lines, ArgType} where ArgType}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Observables.Observable{Array{GeometryBasics.Point{2, Float32}, 1}}})
@precompile(Tuple{typeof(MakieCore.default_theme), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}, Type{MakieCore.Combined{MakieCore.lines, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#676#678", Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Makie.var"#664#665", MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Base.Iterators.Flatten{Base.Generator{Array{GeometryBasics.Mesh{2, Float32, GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.FaceView{GeometryBasics.Ngon{2, Float32, 3, GeometryBasics.Point{2, Float32}}, GeometryBasics.Point{2, Float32}, GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, Array{GeometryBasics.Point{2, Float32}, 1}, Array{GeometryBasics.NgonFace{3, GeometryBasics.OffsetInteger{-1, UInt32}}, 1}}}, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}}}})
@precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Base.Iterators.Flatten{Base.Generator{Array{MakieCore.AbstractPlot{Typ} where Typ, 1}, Makie.var"#664#665"}}, Tuple{Int64, Array{GeometryBasics.Point{2, Float32}, 1}, Int64}}})
@precompile(Tuple{typeof(MakieCore.plot!), Makie.Axis, Type{MakieCore.Combined{Makie.barplot, ArgType} where ArgType}, MakieCore.Attributes, Base.UnitRange{Int64}})
@precompile(Tuple{typeof(MakieCore.default_theme), Nothing, Type{MakieCore.Combined{Makie.barplot, ArgType} where ArgType}})
@precompile(Tuple{Makie.var"#677#679"{Makie.var"#exclude#1281"{Int64}, Base.RefValue{GeometryBasics.HyperRectangle{3, Float32}}}, MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{Type{Makie.FigureAxisPlot}, Makie.Figure, Makie.Axis, MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Base.insert!), GLMakie.Screen, Makie.Scene, MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#179#180"{GLMakie.Screen, Makie.Scene}, MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}})
@precompile(Tuple{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Makie.LinePattern})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ignore_equal_values,), Tuple{Bool}}, Type{Observables.Observable{T} where T}, Makie.LinePattern})
@precompile(Tuple{Base.var"#map!##kw", NamedTuple{(:update,), Tuple{Bool}}, typeof(Base.map!), Any, Observables.Observable{Makie.LinePattern}, Observables.Observable{Any}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{Makie.LinePattern}}, Tuple{Observables.Observable{Any}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{Makie.LinePattern}}, Tuple{Observables.Observable{Any}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#183#184"{MakieCore.Key{:color}, MakieCore.Key{:mesh}}, Observables.Observable{Makie.LinePattern}}, Tuple{Observables.Observable{Any}}}}})
@precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Observables.Observable{Makie.LinePattern}})
@precompile(Tuple{typeof(Observables.to_value), Observables.Observable{Makie.LinePattern}})
@precompile(Tuple{typeof(Base.argtail), Tuple{}, Tuple{}, Vararg{Tuple{}}})
@precompile(Tuple{typeof(Base.argtail), Base.Missing, Base.Missing, Vararg{Base.Missing}})
@precompile(Tuple{typeof(Base.map), GLMakie.var"#241#244", Observables.Observable{Makie.LinePattern}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Makie.LinePattern}})
@precompile(Tuple{typeof(Core.convert), Type{Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#241#244", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 2}}}, Tuple{Observables.Observable{Makie.LinePattern}}}}, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#241#244", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 2}}}, Tuple{Observables.Observable{Makie.LinePattern}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, Observables.var"#callback#13"{Observables.var"#15#16"{GLMakie.var"#241#244", Observables.Observable{Array{ColorTypes.RGBA{Float32}, 2}}}, Tuple{Observables.Observable{Makie.LinePattern}}}}})
@precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:x_repeat, :minfilter), Tuple{Symbol, Symbol}}, Type{ShaderAbstractions.Sampler{T, N, Data} where Data where N where T}, Observables.Observable{Array{ColorTypes.RGBA{Float32}, 2}}})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Array{ColorTypes.RGBA{Float32}, 2}}})
@precompile(Tuple{typeof(Core.convert), Type{ShaderAbstractions.var"#7#8"{ShaderAbstractions.Sampler{ColorTypes.RGBA{Float32}, 2, Array{ColorTypes.RGBA{Float32}, 2}}}}, ShaderAbstractions.var"#7#8"{ShaderAbstractions.Sampler{ColorTypes.RGBA{Float32}, 2, Array{ColorTypes.RGBA{Float32}, 2}}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, ShaderAbstractions.var"#7#8"{ShaderAbstractions.Sampler{ColorTypes.RGBA{Float32}, 2, Array{ColorTypes.RGBA{Float32}, 2}}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.matches_target), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, ShaderAbstractions.Sampler{ColorTypes.RGBA{Float32}, 2, Array{ColorTypes.RGBA{Float32}, 2}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gl_convert), Type{GLMakie.GLAbstraction.Texture{T, NDIM} where NDIM where T<:Union{Real, ColorTypes.Colorant{T, N} where N where T, StaticArraysCore.StaticArray{Tuple{N}, T, 1} where T where N}}, ShaderAbstractions.Sampler{ColorTypes.RGBA{Float32}, 2, Array{ColorTypes.RGBA{Float32}, 2}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}, UInt32, UInt32})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.texparameter), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}, UInt32, Float32})
@precompile(Tuple{typeof(Observables.listeners), Observables.Observable{Tuple{Function, Tuple}}})
@precompile(Tuple{typeof(Core.convert), Type{ShaderAbstractions.var"#1#2"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}}}, ShaderAbstractions.var"#1#2"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}}})
@precompile(Tuple{typeof(Base.insert!), Array{Pair{Int64, Any}, 1}, Int64, Pair{Int64, ShaderAbstractions.var"#1#2"{GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.toglsltype_string), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.poly, Tuple{Array{GeometryBasics.HyperRectangle{2, Float32}, 1}}}})
@precompile(Tuple{typeof(Makie.zvalue2d), MakieCore.Combined{Makie.barplot, Tuple{Array{GeometryBasics.Point{2, Float32}, 1}}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.gluniform), Int32, Int64, GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}})
@precompile(Tuple{typeof(GLFW.Terminate)})
@precompile(Tuple{typeof(FreeTypeAbstraction.ft_done)})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{UInt32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{Float32}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLProgram})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Point{3, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{ColorTypes.RGBA{Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{4, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLBuffer{GeometryBasics.Vec{2, Float32}}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{GeometryBasics.Point{3, Float32}, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float32}, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{Float32, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{Float32, 1}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{Float32, 3}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{Float16, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.GLVertexArray{Int64}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{FixedPointNumbers.Normed{UInt8, 8}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{Float16}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{GLMakie.GLAbstraction.DepthStencil_24_8, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{GeometryBasics.Vec{2, UInt32}, 2}})
@precompile(Tuple{typeof(GLMakie.GLAbstraction.free), GLMakie.GLAbstraction.Texture{ColorTypes.RGBA{FixedPointNumbers.Normed{UInt8, 8}}, 2}})
