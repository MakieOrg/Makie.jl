~~~
<div id="application-dom" data-jscall-id="36">
  <div data-jscall-id="34">
    <script data-jscall-id="28" type="text/javascript">
    window.__define = window.define;
    window.__require = window.require;
    window.define = undefined;
    window.require = undefined;

</script>
    <script data-jscall-id="29" src="data:text/javascript;base64,"></script>
    <script data-jscall-id="30" src="data:text/javascript;base64,"></script>
    <script data-jscall-id="31" src="data:text/javascript;base64,LyoKICogYmFzZTY0LWFycmF5YnVmZmVyCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uaWtsYXN2aC9iYXNlNjQtYXJyYXlidWZmZXIKICoKICogQ29weXJpZ2h0IChjKSAyMDEyIE5pa2xhcyB2b24gSGVydHplbgogKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqLwpjb25zdCBCYXNlNjQgPSAoZnVuY3Rpb24gKCkgewogICAgInVzZSBzdHJpY3QiOwoKICAgIGNvbnN0IGNoYXJzID0KICAgICAgICAiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyI7CgogICAgLy8gVXNlIGEgbG9va3VwIHRhYmxlIHRvIGZpbmQgdGhlIGluZGV4LgogICAgY29uc3QgbG9va3VwID0gbmV3IFVpbnQ4QXJyYXkoMjU2KTsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBsb29rdXBbY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgICAgZW5jb2RlOiBmdW5jdGlvbiAoYXJyYXlidWZmZXIpIHsKICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheWJ1ZmZlcikKICAgICAgICAgICAgbGV0IGksCiAgICAgICAgICAgICAgICBsZW4gPSBieXRlcy5sZW5ndGgsCiAgICAgICAgICAgICAgICBiYXNlNjQgPSAiIjsKCiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMykgewogICAgICAgICAgICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2ldID4+IDJdOwogICAgICAgICAgICAgICAgYmFzZTY0ICs9IGNoYXJzWygoYnl0ZXNbaV0gJiAzKSA8PCA0KSB8IChieXRlc1tpICsgMV0gPj4gNCldOwogICAgICAgICAgICAgICAgYmFzZTY0ICs9CiAgICAgICAgICAgICAgICAgICAgY2hhcnNbKChieXRlc1tpICsgMV0gJiAxNSkgPDwgMikgfCAoYnl0ZXNbaSArIDJdID4+IDYpXTsKICAgICAgICAgICAgICAgIGJhc2U2NCArPSBjaGFyc1tieXRlc1tpICsgMl0gJiA2M107CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChsZW4gJSAzID09PSAyKSB7CiAgICAgICAgICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAxKSArICI9IjsKICAgICAgICAgICAgfSBlbHNlIGlmIChsZW4gJSAzID09PSAxKSB7CiAgICAgICAgICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAyKSArICI9PSI7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBiYXNlNjQ7CiAgICAgICAgfSwKCiAgICAgICAgZGVjb2RlOiBmdW5jdGlvbiAoYmFzZTY0KSB7CiAgICAgICAgICAgIGNvbnN0IGxlbiA9IGJhc2U2NC5sZW5ndGgKICAgICAgICAgICAgbGV0IGJ1ZmZlckxlbmd0aCA9IGJhc2U2NC5sZW5ndGggKiAwLjc1CiAgICAgICAgICAgIGxldCBpLAogICAgICAgICAgICAgICAgcCA9IDAsCiAgICAgICAgICAgICAgICBlbmNvZGVkMSwKICAgICAgICAgICAgICAgIGVuY29kZWQyLAogICAgICAgICAgICAgICAgZW5jb2RlZDMsCiAgICAgICAgICAgICAgICBlbmNvZGVkNDsKCiAgICAgICAgICAgIGlmIChiYXNlNjRbYmFzZTY0Lmxlbmd0aCAtIDFdID09PSAiPSIpIHsKICAgICAgICAgICAgICAgIGJ1ZmZlckxlbmd0aC0tOwogICAgICAgICAgICAgICAgaWYgKGJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMl0gPT09ICI9IikgewogICAgICAgICAgICAgICAgICAgIGJ1ZmZlckxlbmd0aC0tOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBjb25zdCBhcnJheWJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXJMZW5ndGgpLAogICAgICAgICAgICAgICAgYnl0ZXMgPSBuZXcgVWludDhBcnJheShhcnJheWJ1ZmZlcik7CgogICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHsKICAgICAgICAgICAgICAgIGVuY29kZWQxID0gbG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkpXTsKICAgICAgICAgICAgICAgIGVuY29kZWQyID0gbG9va3VwW2Jhc2U2NC5jaGFyQ29kZUF0KGkgKyAxKV07CiAgICAgICAgICAgICAgICBlbmNvZGVkMyA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMildOwogICAgICAgICAgICAgICAgZW5jb2RlZDQgPSBsb29rdXBbYmFzZTY0LmNoYXJDb2RlQXQoaSArIDMpXTsKCiAgICAgICAgICAgICAgICBieXRlc1twKytdID0gKGVuY29kZWQxIDw8IDIpIHwgKGVuY29kZWQyID4+IDQpOwogICAgICAgICAgICAgICAgYnl0ZXNbcCsrXSA9ICgoZW5jb2RlZDIgJiAxNSkgPDwgNCkgfCAoZW5jb2RlZDMgPj4gMik7CiAgICAgICAgICAgICAgICBieXRlc1twKytdID0gKChlbmNvZGVkMyAmIDMpIDw8IDYpIHwgKGVuY29kZWQ0ICYgNjMpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gYXJyYXlidWZmZXI7CiAgICAgICAgfSwKICAgIH07Cn0pKCk7Cg=="></script>
    <script data-jscall-id="32" src="data:text/javascript;base64,"></script>
    <script data-jscall-id="33" type="text/javascript">
    window.define = window.__define;
    window.require = window.__require;
    window.__define = undefined;
    window.__require = undefined;

</script>
    <script data-jscall-id="35" type="text/javascript">
JSServe.setup_connection({offline: true})
</script>
  </div>
</div>
~~~
