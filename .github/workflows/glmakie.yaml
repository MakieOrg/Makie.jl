name: GLMakie CI
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
    branches:
      - master
      - breaking-release
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
    branches:
      - master
      - breaking-release
    tags: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: GLMakie Julia ${{ matrix.version }}
    env:
      MODERNGL_DEBUGGING: "true" # turn on errors when running OpenGL tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1' # automatically expands to the latest stable 1.x release of Julia
        os:
          - ubuntu-20.04
        arch:
          - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - name: Install Julia dependencies
        shell: julia --project=monorepo {0}
        run: |
          using Pkg;
          # dev mono repo versions
          pkg"dev . ./MakieCore ./GLMakie ./ReferenceTests"
      - name: Run the tests
        id: referencetests
        continue-on-error: true
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --color=yes --project=monorepo -e 'using Pkg; Pkg.test("GLMakie", coverage=true)'
          && echo "TESTS_SUCCESSFUL=true" >> $GITHUB_ENV
      - name: Add reference images status
        uses: actions/github-script@v6
        if: matrix.version == '1'
        env:
          n_missing_refimages: ${{ steps.referencetests.outputs.n_missing_refimages }}
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          script: |
            // Docs: https://docs.github.com/en/rest/checks/runs#create-a-check-run
            // Rest: https://octokit.github.io/rest.js/v18#checks-create
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: "reference-check-status",
              conclusion: process.env.n_missing_refimages === '0' ? 'success' : 'action_required',
              output: {
                title: "Reference images",
                summary: process.env.n_missing_refimages + " tests without reference images detected",
              },
            });
      - name: Upload test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ReferenceImages_${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.version }}
          path: |
            ./GLMakie/test/recorded_reference_images/
      - name: Fail after artifacts if tests failed
        if: ${{ env.TESTS_SUCCESSFUL != 'true' }}
        run: exit 1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
