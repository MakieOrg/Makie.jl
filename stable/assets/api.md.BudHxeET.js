import{_ as l,C as d,c as r,o as c,j as s,a as o,G as i,w as a,aA as n}from"./chunks/framework.Du61mWnz.js";const ed=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),p={name:"api.md"},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ee={class:"jldocstring custom-block",open:""},se={class:"jldocstring custom-block",open:""},te={class:"jldocstring custom-block",open:""},ie={class:"jldocstring custom-block",open:""},oe={class:"jldocstring custom-block",open:""},ae={class:"jldocstring custom-block",open:""},ne={class:"jldocstring custom-block",open:""},le={class:"jldocstring custom-block",open:""},de={class:"jldocstring custom-block",open:""},re={class:"jldocstring custom-block",open:""},ce={class:"jldocstring custom-block",open:""},pe={class:"jldocstring custom-block",open:""},he={class:"jldocstring custom-block",open:""},ke={class:"jldocstring custom-block",open:""},ge={class:"jldocstring custom-block",open:""},ue={class:"jldocstring custom-block",open:""},be={class:"jldocstring custom-block",open:""},ye={class:"jldocstring custom-block",open:""},fe={class:"jldocstring custom-block",open:""},me={class:"jldocstring custom-block",open:""},Ee={class:"jldocstring custom-block",open:""},ve={class:"jldocstring custom-block",open:""},_e={class:"jldocstring custom-block",open:""},Te={class:"jldocstring custom-block",open:""},je={class:"jldocstring custom-block",open:""},Me={class:"jldocstring custom-block",open:""},Ce={class:"jldocstring custom-block",open:""},Fe={class:"jldocstring custom-block",open:""},we={class:"jldocstring custom-block",open:""},xe={class:"jldocstring custom-block",open:""},Ae={class:"jldocstring custom-block",open:""},Se={class:"jldocstring custom-block",open:""},De={class:"jldocstring custom-block",open:""},Be={class:"jldocstring custom-block",open:""},Le={class:"jldocstring custom-block",open:""},Pe={class:"jldocstring custom-block",open:""},Ie={class:"jldocstring custom-block",open:""},Oe={class:"jldocstring custom-block",open:""},Ve={class:"jldocstring custom-block",open:""},Ne={class:"jldocstring custom-block",open:""},Re={class:"jldocstring custom-block",open:""},ze={class:"jldocstring custom-block",open:""},qe={class:"jldocstring custom-block",open:""},Ge={class:"jldocstring custom-block",open:""},Ue={class:"jldocstring custom-block",open:""},He={class:"jldocstring custom-block",open:""},We={class:"jldocstring custom-block",open:""},Ye={class:"jldocstring custom-block",open:""},Ke={class:"jldocstring custom-block",open:""},Qe={class:"jldocstring custom-block",open:""},$e={class:"jldocstring custom-block",open:""},Xe={class:"jldocstring custom-block",open:""},Je={class:"jldocstring custom-block",open:""},Ze={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},_s={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},Ps={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},Os={class:"jldocstring custom-block",open:""},Vs={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},Us={class:"jldocstring custom-block",open:""},Hs={class:"jldocstring custom-block",open:""},Ws={class:"jldocstring custom-block",open:""},Ys={class:"jldocstring custom-block",open:""},Ks={class:"jldocstring custom-block",open:""},Qs={class:"jldocstring custom-block",open:""},$s={class:"jldocstring custom-block",open:""},Xs={class:"jldocstring custom-block",open:""},Js={class:"jldocstring custom-block",open:""},Zs={class:"jldocstring custom-block",open:""},et={class:"jldocstring custom-block",open:""},st={class:"jldocstring custom-block",open:""},tt={class:"jldocstring custom-block",open:""},it={class:"jldocstring custom-block",open:""},ot={class:"jldocstring custom-block",open:""},at={class:"jldocstring custom-block",open:""},nt={class:"jldocstring custom-block",open:""},lt={class:"jldocstring custom-block",open:""},dt={class:"jldocstring custom-block",open:""},rt={class:"jldocstring custom-block",open:""},ct={class:"jldocstring custom-block",open:""},pt={class:"jldocstring custom-block",open:""},ht={class:"jldocstring custom-block",open:""},kt={class:"jldocstring custom-block",open:""},gt={class:"jldocstring custom-block",open:""},ut={class:"jldocstring custom-block",open:""},bt={class:"jldocstring custom-block",open:""},yt={class:"jldocstring custom-block",open:""},ft={class:"jldocstring custom-block",open:""},mt={class:"jldocstring custom-block",open:""},Et={class:"jldocstring custom-block",open:""},vt={class:"jldocstring custom-block",open:""},_t={class:"jldocstring custom-block",open:""},Tt={class:"jldocstring custom-block",open:""},jt={class:"jldocstring custom-block",open:""},Mt={class:"jldocstring custom-block",open:""},Ct={class:"jldocstring custom-block",open:""},Ft={class:"jldocstring custom-block",open:""},wt={class:"jldocstring custom-block",open:""},xt={class:"jldocstring custom-block",open:""},At={class:"jldocstring custom-block",open:""},St={class:"jldocstring custom-block",open:""},Dt={class:"jldocstring custom-block",open:""},Bt={class:"jldocstring custom-block",open:""},Lt={class:"jldocstring custom-block",open:""},Pt={class:"jldocstring custom-block",open:""},It={class:"jldocstring custom-block",open:""},Ot={class:"jldocstring custom-block",open:""},Vt={class:"jldocstring custom-block",open:""},Nt={class:"jldocstring custom-block",open:""},Rt={class:"jldocstring custom-block",open:""},zt={class:"jldocstring custom-block",open:""},qt={class:"jldocstring custom-block",open:""},Gt={class:"jldocstring custom-block",open:""},Ut={class:"jldocstring custom-block",open:""},Ht={class:"jldocstring custom-block",open:""},Wt={class:"jldocstring custom-block",open:""},Yt={class:"jldocstring custom-block",open:""},Kt={class:"jldocstring custom-block",open:""},Qt={class:"jldocstring custom-block",open:""},$t={class:"jldocstring custom-block",open:""},Xt={class:"jldocstring custom-block",open:""},Jt={class:"jldocstring custom-block",open:""},Zt={class:"jldocstring custom-block",open:""},ei={class:"jldocstring custom-block",open:""},si={class:"jldocstring custom-block",open:""},ti={class:"jldocstring custom-block",open:""},ii={class:"jldocstring custom-block",open:""},oi={class:"jldocstring custom-block",open:""},ai={class:"jldocstring custom-block",open:""},ni={class:"jldocstring custom-block",open:""},li={class:"jldocstring custom-block",open:""},di={class:"jldocstring custom-block",open:""},ri={class:"jldocstring custom-block",open:""},ci={class:"jldocstring custom-block",open:""},pi={class:"jldocstring custom-block",open:""},hi={class:"jldocstring custom-block",open:""},ki={class:"jldocstring custom-block",open:""},gi={class:"jldocstring custom-block",open:""},ui={class:"jldocstring custom-block",open:""},bi={class:"jldocstring custom-block",open:""},yi={class:"jldocstring custom-block",open:""},fi={class:"jldocstring custom-block",open:""},mi={class:"jldocstring custom-block",open:""},Ei={class:"jldocstring custom-block",open:""},vi={class:"jldocstring custom-block",open:""},_i={class:"jldocstring custom-block",open:""},Ti={class:"jldocstring custom-block",open:""},ji={class:"jldocstring custom-block",open:""},Mi={class:"jldocstring custom-block",open:""},Ci={class:"jldocstring custom-block",open:""},Fi={class:"jldocstring custom-block",open:""},wi={class:"jldocstring custom-block",open:""},xi={class:"jldocstring custom-block",open:""},Ai={class:"jldocstring custom-block",open:""},Si={class:"jldocstring custom-block",open:""},Di={class:"jldocstring custom-block",open:""},Bi={class:"jldocstring custom-block",open:""},Li={class:"jldocstring custom-block",open:""},Pi={class:"jldocstring custom-block",open:""},Ii={class:"jldocstring custom-block",open:""},Oi={class:"jldocstring custom-block",open:""},Vi={class:"jldocstring custom-block",open:""},Ni={class:"jldocstring custom-block",open:""},Ri={class:"jldocstring custom-block",open:""},zi={class:"jldocstring custom-block",open:""},qi={class:"jldocstring custom-block",open:""},Gi={class:"jldocstring custom-block",open:""},Ui={class:"jldocstring custom-block",open:""},Hi={class:"jldocstring custom-block",open:""},Wi={class:"jldocstring custom-block",open:""},Yi={class:"jldocstring custom-block",open:""},Ki={class:"jldocstring custom-block",open:""},Qi={class:"jldocstring custom-block",open:""},$i={class:"jldocstring custom-block",open:""},Xi={class:"jldocstring custom-block",open:""},Ji={class:"jldocstring custom-block",open:""},Zi={class:"jldocstring custom-block",open:""},eo={class:"jldocstring custom-block",open:""},so={class:"jldocstring custom-block",open:""},to={class:"jldocstring custom-block",open:""},io={class:"jldocstring custom-block",open:""},oo={class:"jldocstring custom-block",open:""},ao={class:"jldocstring custom-block",open:""},no={class:"jldocstring custom-block",open:""},lo={class:"jldocstring custom-block",open:""},ro={class:"jldocstring custom-block",open:""},co={class:"jldocstring custom-block",open:""},po={class:"jldocstring custom-block",open:""},ho={class:"jldocstring custom-block",open:""},ko={class:"jldocstring custom-block",open:""},go={class:"jldocstring custom-block",open:""},uo={class:"jldocstring custom-block",open:""},bo={class:"jldocstring custom-block",open:""},yo={class:"jldocstring custom-block",open:""},fo={class:"jldocstring custom-block",open:""},mo={class:"jldocstring custom-block",open:""},Eo={class:"jldocstring custom-block",open:""},vo={class:"jldocstring custom-block",open:""},_o={class:"jldocstring custom-block",open:""},To={class:"jldocstring custom-block",open:""},jo={class:"jldocstring custom-block",open:""},Mo={class:"jldocstring custom-block",open:""},Co={class:"jldocstring custom-block",open:""},Fo={class:"jldocstring custom-block",open:""},wo={class:"jldocstring custom-block",open:""},xo={class:"jldocstring custom-block",open:""},Ao={class:"jldocstring custom-block",open:""},So={class:"jldocstring custom-block",open:""},Do={class:"jldocstring custom-block",open:""},Bo={class:"jldocstring custom-block",open:""},Lo={class:"jldocstring custom-block",open:""},Po={class:"jldocstring custom-block",open:""},Io={class:"jldocstring custom-block",open:""},Oo={class:"jldocstring custom-block",open:""},Vo={class:"jldocstring custom-block",open:""},No={class:"jldocstring custom-block",open:""},Ro={class:"jldocstring custom-block",open:""},zo={class:"jldocstring custom-block",open:""},qo={class:"jldocstring custom-block",open:""},Go={class:"jldocstring custom-block",open:""},Uo={class:"jldocstring custom-block",open:""},Ho={class:"jldocstring custom-block",open:""},Wo={class:"jldocstring custom-block",open:""},Yo={class:"jldocstring custom-block",open:""},Ko={class:"jldocstring custom-block",open:""},Qo={class:"jldocstring custom-block",open:""},$o={class:"jldocstring custom-block",open:""},Xo={class:"jldocstring custom-block",open:""},Jo={class:"jldocstring custom-block",open:""},Zo={class:"jldocstring custom-block",open:""},ea={class:"jldocstring custom-block",open:""},sa={class:"jldocstring custom-block",open:""},ta={class:"jldocstring custom-block",open:""},ia={class:"jldocstring custom-block",open:""},oa={class:"jldocstring custom-block",open:""},aa={class:"jldocstring custom-block",open:""},na={class:"jldocstring custom-block",open:""},la={class:"jldocstring custom-block",open:""},da={class:"jldocstring custom-block",open:""},ra={class:"jldocstring custom-block",open:""},ca={class:"jldocstring custom-block",open:""},pa={class:"jldocstring custom-block",open:""},ha={class:"jldocstring custom-block",open:""},ka={class:"jldocstring custom-block",open:""},ga={class:"jldocstring custom-block",open:""},ua={class:"jldocstring custom-block",open:""},ba={class:"jldocstring custom-block",open:""},ya={class:"jldocstring custom-block",open:""},fa={class:"jldocstring custom-block",open:""},ma={class:"jldocstring custom-block",open:""},Ea={class:"jldocstring custom-block",open:""},va={class:"jldocstring custom-block",open:""},_a={class:"jldocstring custom-block",open:""},Ta={class:"jldocstring custom-block",open:""},ja={class:"jldocstring custom-block",open:""},Ma={class:"jldocstring custom-block",open:""},Ca={class:"jldocstring custom-block",open:""},Fa={class:"jldocstring custom-block",open:""},wa={class:"jldocstring custom-block",open:""},xa={class:"jldocstring custom-block",open:""},Aa={class:"jldocstring custom-block",open:""},Sa={class:"jldocstring custom-block",open:""},Da={class:"jldocstring custom-block",open:""},Ba={class:"jldocstring custom-block",open:""},La={class:"jldocstring custom-block",open:""},Pa={class:"jldocstring custom-block",open:""},Ia={class:"jldocstring custom-block",open:""},Oa={class:"jldocstring custom-block",open:""},Va={class:"jldocstring custom-block",open:""},Na={class:"jldocstring custom-block",open:""},Ra={class:"jldocstring custom-block",open:""},za={class:"jldocstring custom-block",open:""},qa={class:"jldocstring custom-block",open:""},Ga={class:"jldocstring custom-block",open:""},Ua={class:"jldocstring custom-block",open:""},Ha={class:"jldocstring custom-block",open:""},Wa={class:"jldocstring custom-block",open:""},Ya={class:"jldocstring custom-block",open:""},Ka={class:"jldocstring custom-block",open:""},Qa={class:"jldocstring custom-block",open:""},$a={class:"jldocstring custom-block",open:""},Xa={class:"jldocstring custom-block",open:""},Ja={class:"jldocstring custom-block",open:""},Za={class:"jldocstring custom-block",open:""},en={class:"jldocstring custom-block",open:""},sn={class:"jldocstring custom-block",open:""},tn={class:"jldocstring custom-block",open:""},on={class:"jldocstring custom-block",open:""},an={class:"jldocstring custom-block",open:""},nn={class:"jldocstring custom-block",open:""},ln={class:"jldocstring custom-block",open:""},dn={class:"jldocstring custom-block",open:""},rn={class:"jldocstring custom-block",open:""},cn={class:"jldocstring custom-block",open:""},pn={class:"jldocstring custom-block",open:""},hn={class:"jldocstring custom-block",open:""},kn={class:"jldocstring custom-block",open:""},gn={class:"jldocstring custom-block",open:""},un={class:"jldocstring custom-block",open:""},bn={class:"jldocstring custom-block",open:""},yn={class:"jldocstring custom-block",open:""},fn={class:"jldocstring custom-block",open:""},mn={class:"jldocstring custom-block",open:""},En={class:"jldocstring custom-block",open:""},vn={class:"jldocstring custom-block",open:""},_n={class:"jldocstring custom-block",open:""},Tn={class:"jldocstring custom-block",open:""},jn={class:"jldocstring custom-block",open:""},Mn={class:"jldocstring custom-block",open:""},Cn={class:"jldocstring custom-block",open:""},Fn={class:"jldocstring custom-block",open:""},wn={class:"jldocstring custom-block",open:""},xn={class:"jldocstring custom-block",open:""},An={class:"jldocstring custom-block",open:""},Sn={class:"jldocstring custom-block",open:""},Dn={class:"jldocstring custom-block",open:""},Bn={class:"jldocstring custom-block",open:""},Ln={class:"jldocstring custom-block",open:""},Pn={class:"jldocstring custom-block",open:""},In={class:"jldocstring custom-block",open:""},On={class:"jldocstring custom-block",open:""},Vn={class:"jldocstring custom-block",open:""},Nn={class:"jldocstring custom-block",open:""},Rn={class:"jldocstring custom-block",open:""},zn={class:"jldocstring custom-block",open:""},qn={class:"jldocstring custom-block",open:""},Gn={class:"jldocstring custom-block",open:""},Un={class:"jldocstring custom-block",open:""},Hn={class:"jldocstring custom-block",open:""},Wn={class:"jldocstring custom-block",open:""},Yn={class:"jldocstring custom-block",open:""},Kn={class:"jldocstring custom-block",open:""},Qn={class:"jldocstring custom-block",open:""},$n={class:"jldocstring custom-block",open:""},Xn={class:"jldocstring custom-block",open:""},Jn={class:"jldocstring custom-block",open:""},Zn={class:"jldocstring custom-block",open:""},el={class:"jldocstring custom-block",open:""},sl={class:"jldocstring custom-block",open:""},tl={class:"jldocstring custom-block",open:""},il={class:"jldocstring custom-block",open:""},ol={class:"jldocstring custom-block",open:""},al={class:"jldocstring custom-block",open:""},nl={class:"jldocstring custom-block",open:""},ll={class:"jldocstring custom-block",open:""},dl={class:"jldocstring custom-block",open:""},rl={class:"jldocstring custom-block",open:""},cl={class:"jldocstring custom-block",open:""},pl={class:"jldocstring custom-block",open:""},hl={class:"jldocstring custom-block",open:""},kl={class:"jldocstring custom-block",open:""},gl={class:"jldocstring custom-block",open:""},ul={class:"jldocstring custom-block",open:""},bl={class:"jldocstring custom-block",open:""},yl={class:"jldocstring custom-block",open:""},fl={class:"jldocstring custom-block",open:""},ml={class:"jldocstring custom-block",open:""},El={class:"jldocstring custom-block",open:""},vl={class:"jldocstring custom-block",open:""},_l={class:"jldocstring custom-block",open:""},Tl={class:"jldocstring custom-block",open:""},jl={class:"jldocstring custom-block",open:""},Ml={class:"jldocstring custom-block",open:""},Cl={class:"jldocstring custom-block",open:""},Fl={class:"jldocstring custom-block",open:""},wl={class:"jldocstring custom-block",open:""},xl={class:"jldocstring custom-block",open:""},Al={class:"jldocstring custom-block",open:""},Sl={class:"jldocstring custom-block",open:""},Dl={class:"jldocstring custom-block",open:""},Bl={class:"jldocstring custom-block",open:""},Ll={class:"jldocstring custom-block",open:""},Pl={class:"jldocstring custom-block",open:""},Il={class:"jldocstring custom-block",open:""},Ol={class:"jldocstring custom-block",open:""},Vl={class:"jldocstring custom-block",open:""},Nl={class:"jldocstring custom-block",open:""},Rl={class:"jldocstring custom-block",open:""},zl={class:"jldocstring custom-block",open:""},ql={class:"jldocstring custom-block",open:""},Gl={class:"jldocstring custom-block",open:""},Ul={class:"jldocstring custom-block",open:""},Hl={class:"jldocstring custom-block",open:""},Wl={class:"jldocstring custom-block",open:""};function Yl(Kl,e,Ql,$l,Xl,Jl){const t=d("Badge");return c(),r("div",null,[e[1860]||(e[1860]=s("h1",{id:"API",tabindex:"-1"},[o("API "),s("a",{class:"header-anchor",href:"#API","aria-label":'Permalink to "API {#API}"'},"​")],-1)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"Makie.ABLines",href:"#Makie.ABLines"},[s("span",{class:"jlbinding"},"Makie.ABLines")],-1)),e[1]||(e[1]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=s("p",null,[s("code",null,"ABLines"),o(" is the plot type associated with plotting function "),s("code",null,"ablines"),o(". Check the docstring for "),s("code",null,"ablines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[2]||(e[2]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),s("details",k,[s("summary",null,[e[4]||(e[4]=s("a",{id:"Makie.Absolute",href:"#Makie.Absolute"},[s("span",{class:"jlbinding"},"Makie.Absolute")],-1)),e[5]||(e[5]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[7]||(e[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Absolute</span></span></code></pre></div><p>Force transformation to be absolute, not relative to the current state. This is the default setting.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[6]||(e[6]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L99-L104",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),s("details",g,[s("summary",null,[e[8]||(e[8]=s("a",{id:"Makie.Accum",href:"#Makie.Accum"},[s("span",{class:"jlbinding"},"Makie.Accum")],-1)),e[9]||(e[9]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[11]||(e[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Accum</span></span></code></pre></div><p>Force transformation to be relative to the current state, not absolute.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[10]||(e[10]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L92-L96",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),s("details",u,[s("summary",null,[e[12]||(e[12]=s("a",{id:"Makie.AmbientLight",href:"#Makie.AmbientLight"},[s("span",{class:"jlbinding"},"Makie.AmbientLight")],-1)),e[13]||(e[13]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[15]||(e[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AmbientLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLight</span></span></code></pre></div><p>A simple ambient light that uniformly lights every object based on its light color.</p><p>Availability:</p><ul><li>All backends with <code>shading = FastShading</code> or <code>MultiLightShading</code></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[14]||(e[14]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L21-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),s("details",b,[s("summary",null,[e[16]||(e[16]=s("a",{id:"Makie.AngularTicks",href:"#Makie.AngularTicks"},[s("span",{class:"jlbinding"},"Makie.AngularTicks")],-1)),e[17]||(e[17]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[19]||(e[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AngularTicks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(label_factor, suffix[, n_ideal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Vec2f}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Sets up AngularTicks with a predetermined amount of ticks. <code>label_factor</code> can be used to transform the tick labels from radians to degree. <code>suffix</code> is added to the end of the generated label strings. <code>n_ideal</code> can be used to affect the ideal number of ticks. It represents a set of linear function which are combined using <code>mapreduce(v -&gt; v[1] * delta + v[2], min, m.n_ideal)</code> where <code>delta = maximum(limits) - minimum(limits)</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[18]||(e[18]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L102-L111",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[18]})]),s("details",y,[s("summary",null,[e[20]||(e[20]=s("a",{id:"Makie.Annotation",href:"#Makie.Annotation"},[s("span",{class:"jlbinding"},"Makie.Annotation")],-1)),e[21]||(e[21]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[23]||(e[23]=s("p",null,[s("code",null,"Annotation"),o(" is the plot type associated with plotting function "),s("code",null,"annotation"),o(". Check the docstring for "),s("code",null,"annotation"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[22]||(e[22]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[22]})]),s("details",f,[s("summary",null,[e[24]||(e[24]=s("a",{id:"Makie.Arc",href:"#Makie.Arc"},[s("span",{class:"jlbinding"},"Makie.Arc")],-1)),e[25]||(e[25]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[27]||(e[27]=s("p",null,[s("code",null,"Arc"),o(" is the plot type associated with plotting function "),s("code",null,"arc"),o(". Check the docstring for "),s("code",null,"arc"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[26]||(e[26]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[26]})]),s("details",m,[s("summary",null,[e[28]||(e[28]=s("a",{id:"Makie.Arrows2D",href:"#Makie.Arrows2D"},[s("span",{class:"jlbinding"},"Makie.Arrows2D")],-1)),e[29]||(e[29]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[31]||(e[31]=s("p",null,[s("code",null,"Arrows2D"),o(" is the plot type associated with plotting function "),s("code",null,"arrows2d"),o(". Check the docstring for "),s("code",null,"arrows2d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[30]||(e[30]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[30]})]),s("details",E,[s("summary",null,[e[32]||(e[32]=s("a",{id:"Makie.Arrows3D",href:"#Makie.Arrows3D"},[s("span",{class:"jlbinding"},"Makie.Arrows3D")],-1)),e[33]||(e[33]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[35]||(e[35]=s("p",null,[s("code",null,"Arrows3D"),o(" is the plot type associated with plotting function "),s("code",null,"arrows3d"),o(". Check the docstring for "),s("code",null,"arrows3d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[34]||(e[34]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[34]})]),s("details",v,[s("summary",null,[e[36]||(e[36]=s("a",{id:"Makie.Attributes",href:"#Makie.Attributes"},[s("span",{class:"jlbinding"},"Makie.Attributes")],-1)),e[37]||(e[37]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[39]||(e[39]=s("p",null,"Main structure for holding attributes, for theming plots etc! Will turn all values into observables, so that they can be updated.",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[38]||(e[38]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/coretypes.jl#L45-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[38]})]),s("details",_,[s("summary",null,[e[40]||(e[40]=s("a",{id:"Makie.Axis",href:"#Makie.Axis"},[s("span",{class:"jlbinding"},"Makie.Axis")],-1)),e[41]||(e[41]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[43]||(e[43]=n('<p><strong><code>Makie.Axis &lt;: Block</code></strong></p><p>A 2D axis which can be plotted into.</p><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene; palette </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Attributes</strong></p><p>(type <code>?Makie.Axis.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>aspect</code>, <code>autolimitaspect</code>, <code>backgroundcolor</code>, <code>bottomspinecolor</code>, <code>bottomspinevisible</code>, <code>dim1_conversion</code>, <code>dim2_conversion</code>, <code>flip_ylabel</code>, <code>halign</code>, <code>height</code>, <code>leftspinecolor</code>, <code>leftspinevisible</code>, <code>limits</code>, <code>panbutton</code>, <code>rightspinecolor</code>, <code>rightspinevisible</code>, <code>spinewidth</code>, <code>subtitle</code>, <code>subtitlecolor</code>, <code>subtitlefont</code>, <code>subtitlegap</code>, <code>subtitlelineheight</code>, <code>subtitlesize</code>, <code>subtitlevisible</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>title</code>, <code>titlealign</code>, <code>titlecolor</code>, <code>titlefont</code>, <code>titlegap</code>, <code>titlelineheight</code>, <code>titlesize</code>, <code>titlevisible</code>, <code>topspinecolor</code>, <code>topspinevisible</code>, <code>valign</code>, <code>width</code>, <code>xautolimitmargin</code>, <code>xaxisposition</code>, <code>xgridcolor</code>, <code>xgridstyle</code>, <code>xgridvisible</code>, <code>xgridwidth</code>, <code>xlabel</code>, <code>xlabelcolor</code>, <code>xlabelfont</code>, <code>xlabelpadding</code>, <code>xlabelrotation</code>, <code>xlabelsize</code>, <code>xlabelvisible</code>, <code>xminorgridcolor</code>, <code>xminorgridstyle</code>, <code>xminorgridvisible</code>, <code>xminorgridwidth</code>, <code>xminortickalign</code>, <code>xminortickcolor</code>, <code>xminorticks</code>, <code>xminorticksize</code>, <code>xminorticksvisible</code>, <code>xminortickwidth</code>, <code>xpankey</code>, <code>xpanlock</code>, <code>xrectzoom</code>, <code>xreversed</code>, <code>xscale</code>, <code>xtickalign</code>, <code>xtickcolor</code>, <code>xtickformat</code>, <code>xticklabelalign</code>, <code>xticklabelcolor</code>, <code>xticklabelfont</code>, <code>xticklabelpad</code>, <code>xticklabelrotation</code>, <code>xticklabelsize</code>, <code>xticklabelspace</code>, <code>xticklabelsvisible</code>, <code>xticks</code>, <code>xticksize</code>, <code>xticksmirrored</code>, <code>xticksvisible</code>, <code>xtickwidth</code>, <code>xtrimspine</code>, <code>xzoomkey</code>, <code>xzoomlock</code>, <code>yautolimitmargin</code>, <code>yaxisposition</code>, <code>ygridcolor</code>, <code>ygridstyle</code>, <code>ygridvisible</code>, <code>ygridwidth</code>, <code>ylabel</code>, <code>ylabelcolor</code>, <code>ylabelfont</code>, <code>ylabelpadding</code>, <code>ylabelrotation</code>, <code>ylabelsize</code>, <code>ylabelvisible</code>, <code>yminorgridcolor</code>, <code>yminorgridstyle</code>, <code>yminorgridvisible</code>, <code>yminorgridwidth</code>, <code>yminortickalign</code>, <code>yminortickcolor</code>, <code>yminorticks</code>, <code>yminorticksize</code>, <code>yminorticksvisible</code>, <code>yminortickwidth</code>, <code>ypankey</code>, <code>ypanlock</code>, <code>yrectzoom</code>, <code>yreversed</code>, <code>yscale</code>, <code>ytickalign</code>, <code>ytickcolor</code>, <code>ytickformat</code>, <code>yticklabelalign</code>, <code>yticklabelcolor</code>, <code>yticklabelfont</code>, <code>yticklabelpad</code>, <code>yticklabelrotation</code>, <code>yticklabelsize</code>, <code>yticklabelspace</code>, <code>yticklabelsvisible</code>, <code>yticks</code>, <code>yticksize</code>, <code>yticksmirrored</code>, <code>yticksvisible</code>, <code>ytickwidth</code>, <code>ytrimspine</code>, <code>yzoomkey</code>, <code>yzoomlock</code>, <code>zoombutton</code></p>',7)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[42]||(e[42]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L135",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[42]})]),s("details",T,[s("summary",null,[e[44]||(e[44]=s("a",{id:"Makie.Axis3",href:"#Makie.Axis3"},[s("span",{class:"jlbinding"},"Makie.Axis3")],-1)),e[45]||(e[45]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[47]||(e[47]=n("<p><strong><code>Makie.Axis3 &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Axis3.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>aspect</code>, <code>axis_translation_mod</code>, <code>azimuth</code>, <code>backgroundcolor</code>, <code>clip</code>, <code>clip_decorations</code>, <code>cursorfocuskey</code>, <code>dim1_conversion</code>, <code>dim2_conversion</code>, <code>dim3_conversion</code>, <code>elevation</code>, <code>front_spines</code>, <code>halign</code>, <code>height</code>, <code>limits</code>, <code>near</code>, <code>perspectiveness</code>, <code>protrusions</code>, <code>targetlimits</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>title</code>, <code>titlealign</code>, <code>titlecolor</code>, <code>titlefont</code>, <code>titlegap</code>, <code>titlesize</code>, <code>titlevisible</code>, <code>valign</code>, <code>viewmode</code>, <code>width</code>, <code>xautolimitmargin</code>, <code>xgridcolor</code>, <code>xgridvisible</code>, <code>xgridwidth</code>, <code>xlabel</code>, <code>xlabelalign</code>, <code>xlabelcolor</code>, <code>xlabelfont</code>, <code>xlabeloffset</code>, <code>xlabelrotation</code>, <code>xlabelsize</code>, <code>xlabelvisible</code>, <code>xreversed</code>, <code>xspinecolor_1</code>, <code>xspinecolor_2</code>, <code>xspinecolor_3</code>, <code>xspinecolor_4</code>, <code>xspinesvisible</code>, <code>xspinewidth</code>, <code>xtickcolor</code>, <code>xtickformat</code>, <code>xticklabelcolor</code>, <code>xticklabelfont</code>, <code>xticklabelpad</code>, <code>xticklabelsize</code>, <code>xticklabelsvisible</code>, <code>xticks</code>, <code>xticksize</code>, <code>xticksvisible</code>, <code>xtickwidth</code>, <code>xtranslationkey</code>, <code>xtranslationlock</code>, <code>xypanelcolor</code>, <code>xypanelvisible</code>, <code>xzoomkey</code>, <code>xzoomlock</code>, <code>xzpanelcolor</code>, <code>xzpanelvisible</code>, <code>yautolimitmargin</code>, <code>ygridcolor</code>, <code>ygridvisible</code>, <code>ygridwidth</code>, <code>ylabel</code>, <code>ylabelalign</code>, <code>ylabelcolor</code>, <code>ylabelfont</code>, <code>ylabeloffset</code>, <code>ylabelrotation</code>, <code>ylabelsize</code>, <code>ylabelvisible</code>, <code>yreversed</code>, <code>yspinecolor_1</code>, <code>yspinecolor_2</code>, <code>yspinecolor_3</code>, <code>yspinecolor_4</code>, <code>yspinesvisible</code>, <code>yspinewidth</code>, <code>ytickcolor</code>, <code>ytickformat</code>, <code>yticklabelcolor</code>, <code>yticklabelfont</code>, <code>yticklabelpad</code>, <code>yticklabelsize</code>, <code>yticklabelsvisible</code>, <code>yticks</code>, <code>yticksize</code>, <code>yticksvisible</code>, <code>ytickwidth</code>, <code>ytranslationkey</code>, <code>ytranslationlock</code>, <code>yzoomkey</code>, <code>yzoomlock</code>, <code>yzpanelcolor</code>, <code>yzpanelvisible</code>, <code>zautolimitmargin</code>, <code>zgridcolor</code>, <code>zgridvisible</code>, <code>zgridwidth</code>, <code>zlabel</code>, <code>zlabelalign</code>, <code>zlabelcolor</code>, <code>zlabelfont</code>, <code>zlabeloffset</code>, <code>zlabelrotation</code>, <code>zlabelsize</code>, <code>zlabelvisible</code>, <code>zoommode</code>, <code>zreversed</code>, <code>zspinecolor_1</code>, <code>zspinecolor_2</code>, <code>zspinecolor_3</code>, <code>zspinecolor_4</code>, <code>zspinesvisible</code>, <code>zspinewidth</code>, <code>ztickcolor</code>, <code>ztickformat</code>, <code>zticklabelcolor</code>, <code>zticklabelfont</code>, <code>zticklabelpad</code>, <code>zticklabelsize</code>, <code>zticklabelsvisible</code>, <code>zticks</code>, <code>zticksize</code>, <code>zticksvisible</code>, <code>ztickwidth</code>, <code>ztranslationkey</code>, <code>ztranslationlock</code>, <code>zzoomkey</code>, <code>zzoomlock</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[46]||(e[46]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[46]})]),s("details",j,[s("summary",null,[e[48]||(e[48]=s("a",{id:"Makie.Band",href:"#Makie.Band"},[s("span",{class:"jlbinding"},"Makie.Band")],-1)),e[49]||(e[49]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[51]||(e[51]=s("p",null,[s("code",null,"Band"),o(" is the plot type associated with plotting function "),s("code",null,"band"),o(". Check the docstring for "),s("code",null,"band"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[50]||(e[50]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[50]})]),s("details",M,[s("summary",null,[e[52]||(e[52]=s("a",{id:"Makie.BarPlot",href:"#Makie.BarPlot"},[s("span",{class:"jlbinding"},"Makie.BarPlot")],-1)),e[53]||(e[53]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[55]||(e[55]=s("p",null,[s("code",null,"BarPlot"),o(" is the plot type associated with plotting function "),s("code",null,"barplot"),o(". Check the docstring for "),s("code",null,"barplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[54]||(e[54]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[54]})]),s("details",C,[s("summary",null,[e[56]||(e[56]=s("a",{id:"Makie.BezierPath",href:"#Makie.BezierPath"},[s("span",{class:"jlbinding"},"Makie.BezierPath")],-1)),e[57]||(e[57]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[59]||(e[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BezierPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(commands</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a <code>BezierPath</code> with a vector of path commands. The available path commands are</p><ul><li><p><code>MoveTo</code></p></li><li><p><code>LineTo</code></p></li><li><p><code>CurveTo</code></p></li><li><p><code>EllipticalArc</code></p></li><li><p><code>ClosePath</code></p></li></ul><p>A <code>BezierPath</code> can be used in certain places in Makie as an alternative to a polygon or a collection of lines, for example as an input to <code>poly</code> or <code>lines</code>, or as a <code>marker</code> for <code>scatter</code>.</p><p>The benefit of using a <code>BezierPath</code> is that curves do not need to be converted into a vector of vertices by the user. CairoMakie can use the path commands directly when it writes vector graphics which is more efficient and uses less space than approximating them visually using line segments.</p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[58]||(e[58]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L176-L195",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[58]})]),s("details",F,[s("summary",null,[e[60]||(e[60]=s("a",{id:"Makie.BezierPath-Tuple{AbstractString}",href:"#Makie.BezierPath-Tuple{AbstractString}"},[s("span",{class:"jlbinding"},"Makie.BezierPath")],-1)),e[61]||(e[61]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[63]||(e[63]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BezierPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(svg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; fit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bbox </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, flipy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, flipx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, keep_aspect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a <code>BezierPath</code> using a string of <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d#path_commands" target="_blank" rel="noreferrer">SVG path commands</a>. The commands will be parsed first into <code>MoveTo</code>, <code>LineTo</code>, <code>CurveTo</code>, <code>EllipticalArc</code> and <code>ClosePath</code> objects which are then passed to the <code>BezierPath</code> constructor.</p><p>If <code>fit === true</code>, the path will be scaled to fit into a square of width 1 centered on the origin. If, additionally, <code>bbox</code> is set to some <code>Rect</code>, the path will be fit into this rectangle instead. If you want to use a path as a scatter marker, it is usually good to fit it so that it&#39;s centered and of a comparable size relative to other scatter markers.</p><p>If <code>flipy === true</code> or <code>flipx === true</code>, the respective dimensions of the path will be flipped. Makie uses a coordinate system where y=0 is at the bottom and y increases upwards while in SVG, y=0 is at the top and y increases downwards, so for most SVG paths <code>flipy = true</code> will be needed.</p><p>If <code>keep_aspect === true</code>, the path will be fit into the bounding box such that its longer dimension fits and the other one is scaled to retain the original aspect ratio. If you set <code>keep_aspect = false</code>, the new boundingbox of the path will be the one it is fit to, but note that this can result in a squished appearance.</p><p><strong>Example</strong></p><p>Construct a triangular <code>BezierPath</code> out of a path command string and use it as a scatter marker:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;M 0,0 L 10,0 L 5,10 z&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BezierPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str, fit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, marker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bp, markersize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,8)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[62]||(e[62]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L348-L377",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[62]})]),s("details",w,[s("summary",null,[e[64]||(e[64]=s("a",{id:"Makie.Billboard",href:"#Makie.Billboard"},[s("span",{class:"jlbinding"},"Makie.Billboard")],-1)),e[65]||(e[65]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[67]||(e[67]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Billboard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([angle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Billboard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([angles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;: Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Billboard attribute to always have a primitive face the camera. Can be used for rotation.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[66]||(e[66]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/coretypes.jl#L123-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[66]})]),s("details",x,[s("summary",null,[e[68]||(e[68]=s("a",{id:"Makie.Box",href:"#Makie.Box"},[s("span",{class:"jlbinding"},"Makie.Box")],-1)),e[69]||(e[69]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[71]||(e[71]=n("<p><strong><code>Makie.Box &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Box.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>color</code>, <code>cornerradius</code>, <code>halign</code>, <code>height</code>, <code>linestyle</code>, <code>strokecolor</code>, <code>strokevisible</code>, <code>strokewidth</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>visible</code>, <code>width</code>, <code>z</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[70]||(e[70]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[70]})]),s("details",A,[s("summary",null,[e[72]||(e[72]=s("a",{id:"Makie.BoxPlot",href:"#Makie.BoxPlot"},[s("span",{class:"jlbinding"},"Makie.BoxPlot")],-1)),e[73]||(e[73]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[75]||(e[75]=s("p",null,[s("code",null,"BoxPlot"),o(" is the plot type associated with plotting function "),s("code",null,"boxplot"),o(". Check the docstring for "),s("code",null,"boxplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[74]||(e[74]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[74]})]),s("details",S,[s("summary",null,[e[76]||(e[76]=s("a",{id:"Makie.Bracket",href:"#Makie.Bracket"},[s("span",{class:"jlbinding"},"Makie.Bracket")],-1)),e[77]||(e[77]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[79]||(e[79]=s("p",null,[s("code",null,"Bracket"),o(" is the plot type associated with plotting function "),s("code",null,"bracket"),o(". Check the docstring for "),s("code",null,"bracket"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[78]||(e[78]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[78]})]),s("details",D,[s("summary",null,[e[80]||(e[80]=s("a",{id:"Makie.Button",href:"#Makie.Button"},[s("span",{class:"jlbinding"},"Makie.Button")],-1)),e[81]||(e[81]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[83]||(e[83]=n("<p><strong><code>Makie.Button &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Button.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>buttoncolor</code>, <code>buttoncolor_active</code>, <code>buttoncolor_hover</code>, <code>clicks</code>, <code>cornerradius</code>, <code>cornersegments</code>, <code>font</code>, <code>fontsize</code>, <code>halign</code>, <code>height</code>, <code>label</code>, <code>labelcolor</code>, <code>labelcolor_active</code>, <code>labelcolor_hover</code>, <code>padding</code>, <code>strokecolor</code>, <code>strokewidth</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[82]||(e[82]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[82]})]),s("details",B,[s("summary",null,[e[84]||(e[84]=s("a",{id:"Makie.Camera",href:"#Makie.Camera"},[s("span",{class:"jlbinding"},"Makie.Camera")],-1)),e[85]||(e[85]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[87]||(e[87]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pixel_area)</span></span></code></pre></div><p>Struct to hold all relevant matrices and additional parameters, to let backends apply camera based transformations.</p><p><strong>Fields</strong></p><ul><li><p><code>pixel_space::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code>: projection used to convert pixel to device units</p></li><li><p><code>view::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code>: View matrix is usually used to rotate, scale and translate the scene</p></li><li><p><code>projection::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code>: Projection matrix is used for any perspective transformation</p></li><li><p><code>projectionview::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code>: just projection * view</p></li><li><p><code>resolution::Observable{Vec{2, Float32}}</code>: resolution of the canvas this camera draws to</p></li><li><p><code>view_direction::Observable{Vec{3, Float32}}</code>: Direction in which the camera looks.</p></li><li><p><code>eyeposition::Observable{Vec{3, Float32}}</code>: Eye position of the camera, used for e.g. ray tracing.</p></li><li><p><code>upvector::Observable{Vec{3, Float32}}</code>: Up direction of the current camera (e.g. Vec3f(0, 1, 0) for 2d)</p></li><li><p><code>steering_nodes::Vector{Observables.ObserverFunction}</code>: To make camera interactive, steering observables are connected to the different matrices. We need to keep track of them, so, that we can connect and disconnect them.</p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[86]||(e[86]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/types.jl#L261-L269",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[86]})]),s("details",L,[s("summary",null,[e[88]||(e[88]=s("a",{id:"Makie.Camera3D-Tuple{Scene}",href:"#Makie.Camera3D-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.Camera3D")],-1)),e[89]||(e[89]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[91]||(e[91]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera3D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Sets up a 3D camera with mouse and keyboard controls.</p><p>The behavior of the camera can be adjusted via keyword arguments or the fields <code>settings</code> and <code>controls</code>.</p><p><strong>Settings</strong></p><p>Settings include anything that isn&#39;t a mouse or keyboard button.</p><ul><li><p><code>projectiontype = Perspective</code> sets the type of the projection. Can be <code>Orthographic</code> or <code>Perspective</code>.</p></li><li><p><code>rotation_center = :lookat</code> sets the default center for camera rotations. Currently allows <code>:lookat</code> or <code>:eyeposition</code>.</p></li><li><p><code>fixed_axis = true</code>: If true panning uses the (world/plot) z-axis instead of the camera up direction.</p></li><li><p><code>zoom_shift_lookat = true</code>: If true keeps the data under the cursor when zooming.</p></li><li><p><code>cad = false</code>: If true rotates the view around <code>lookat</code> when zooming off-center.</p></li><li><p><code>clipping_mode = :adaptive</code>: Controls how <code>near</code> and <code>far</code> get processed. Options:</p><ul><li><p><code>:static</code> passes <code>near</code> and <code>far</code> as is</p></li><li><p><code>:adaptive</code> scales <code>near</code> by <code>norm(eyeposition - lookat)</code> and passes <code>far</code> as is</p></li><li><p><code>:view_relative</code> scales <code>near</code> and <code>far</code> by <code>norm(eyeposition - lookat)</code></p></li><li><p><code>:bbox_relative</code> scales <code>near</code> and <code>far</code> to the scene bounding box as passed to the camera with <code>update_cam!(..., bbox)</code>. (More specifically <code>far = 1</code> is scaled to the furthest point of a bounding sphere and <code>near</code> is generally overwritten to be the closest point.)</p></li></ul></li><li><p><code>center = true</code>: Controls whether the camera placement gets reset when calling <code>center!(scene)</code>, which is called when a new plot is added.</p></li><li><p><code>keyboard_rotationspeed = 1.0</code> sets the speed of keyboard based rotations.</p></li><li><p><code>keyboard_translationspeed = 0.5</code> sets the speed of keyboard based translations.</p></li><li><p><code>keyboard_zoomspeed = 1.0</code> sets the speed of keyboard based zooms.</p></li><li><p><code>mouse_rotationspeed = 1.0</code> sets the speed of mouse rotations.</p></li><li><p><code>mouse_translationspeed = 0.5</code> sets the speed of mouse translations.</p></li><li><p><code>mouse_zoomspeed = 1.0</code> sets the speed of mouse zooming (mousewheel).</p></li><li><p><code>circular_rotation = (false, false, false)</code> enables circular rotations for (fixed x, fixed y, fixed z) rotation axis. (This means drawing a circle with your mouse around the center of the scene will result in a continuous rotation.)</p></li></ul><p><strong>Controls</strong></p><p>Controls include any kind of hotkey setting.</p><ul><li><p><code>up_key = Keyboard.r</code> sets the key for translations towards the top of the screen.</p></li><li><p><code>down_key = Keyboard.f</code> sets the key for translations towards the bottom of the screen.</p></li><li><p><code>left_key = Keyboard.a</code> sets the key for translations towards the left of the screen.</p></li><li><p><code>right_key = Keyboard.d</code> sets the key for translations towards the right of the screen.</p></li><li><p><code>forward_key = Keyboard.w</code> sets the key for translations into the screen.</p></li><li><p><code>backward_key = Keyboard.s</code> sets the key for translations out of the screen.</p></li><li><p><code>zoom_in_key = Keyboard.u</code> sets the key for zooming into the scene (translate eyeposition towards lookat).</p></li><li><p><code>zoom_out_key = Keyboard.o</code> sets the key for zooming out of the scene (translate eyeposition away from lookat).</p></li><li><p><code>increase_fov_key = Keyboard.b</code> sets the key for increasing the fov.</p></li><li><p><code>decrease_fov_key = Keyboard.n</code> sets the key for decreasing the fov.</p></li><li><p><code>pan_left_key = Keyboard.j</code> sets the key for rotations around the screens vertical axis.</p></li><li><p><code>pan_right_key = Keyboard.l</code> sets the key for rotations around the screens vertical axis.</p></li><li><p><code>tilt_up_key = Keyboard.i</code> sets the key for rotations around the screens horizontal axis.</p></li><li><p><code>tilt_down_key = Keyboard.k</code> sets the key for rotations around the screens horizontal axis.</p></li><li><p><code>roll_clockwise_key = Keyboard.e</code> sets the key for rotations of the screen.</p></li><li><p><code>roll_counterclockwise_key = Keyboard.q</code> sets the key for rotations of the screen.</p></li><li><p><code>fix_x_key = Keyboard.x</code> sets the key for fixing translations and rotations to the (world/plot) x-axis.</p></li><li><p><code>fix_y_key = Keyboard.y</code> sets the key for fixing translations and rotations to the (world/plot) y-axis.</p></li><li><p><code>fix_z_key = Keyboard.z</code> sets the key for fixing translations and rotations to the (world/plot) z-axis.</p></li><li><p><code>reset = Keyboard.left_control &amp; Mouse.left</code> sets the key for resetting the camera. This equivalent to calling <code>center!(scene)</code>.</p></li><li><p><code>reposition_button = Keyboard.left_alt &amp; Mouse.left</code> sets the key for focusing the camera on a plot object.</p></li><li><p><code>translation_button = Mouse.right</code> sets the mouse button for drag-translations. (up/down/left/right)</p></li><li><p><code>scroll_mod = true</code> sets an additional modifier button for scroll-based zoom. (true being neutral)</p></li><li><p><code>rotation_button = Mouse.left</code> sets the mouse button for drag-rotations. (pan, tilt)</p></li></ul><p><strong>Other kwargs</strong></p><p>Some keyword arguments are used to initialize fields. These include</p><ul><li><p><code>eyeposition = Vec3d(3)</code>: The position of the camera.</p></li><li><p><code>lookat = Vec3d(0)</code>: The point the camera is focused on.</p></li><li><p><code>upvector = Vec3d(0, 0, 1)</code>: The world direction corresponding to the up direction of the screen.</p></li><li><p><code>fov = 45.0</code> is the field of view. This is irrelevant if the camera uses an orthographic projection.</p></li><li><p><code>near = automatic</code> sets the position of the near clip plane. Anything between the camera and the near clip plane is hidden. Must be greater 0. Usage depends on <code>clipping_mode</code>.</p></li><li><p><code>far = automatic</code> sets the position of the far clip plane. Anything further away than the far clip plane is hidden. Usage depends on <code>clipping_mode</code>. Defaults to <code>1</code> for <code>clipping_mode = :bbox_relative</code>, <code>2</code> for <code>:view_relative</code> or a value derived from limits for <code>:static</code>.</p></li></ul><p>Note that updating these observables in an active camera requires a call to <code>update_cam(scene)</code> for them to be applied. For updating <code>eyeposition</code>, <code>lookat</code> and/or upvector <code>update_cam!(scene, eyeposition, lookat, upvector = Vec3d(0,0,1))</code> is preferred.</p><p>The camera position and orientation can also be adjusted via the functions</p><ul><li><p><code>translate_cam!(scene, v)</code> will translate the camera by the given vector <code>v</code>.</p></li><li><p><code>rotate_cam!(scene, angles)</code> will rotate the camera around its axes with the corresponding angles. The first angle will rotate around the cameras &quot;right&quot; that is the screens horizontal axis, the second around the up vector/vertical axis or <code>Vec3d(0, 0, +-1)</code> if <code>fixed_axis = true</code>, and the third will rotate around the view direction i.e. the axis out of the screen. The rotation respects the current <code>rotation_center</code> of the camera.</p></li><li><p><code>zoom!(scene, zoom_step)</code> will change the zoom level of the scene without translating or rotating the scene. <code>zoom_step</code> applies multiplicatively to <code>cam.zoom_mult</code> which is used as a multiplier to the fov (perspective projection) or width and height (orthographic projection).</p></li></ul>',15)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[90]||(e[90]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L25-L113",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[90]})]),s("details",P,[s("summary",null,[e[92]||(e[92]=s("a",{id:"Makie.Categorical",href:"#Makie.Categorical"},[s("span",{class:"jlbinding"},"Makie.Categorical")],-1)),e[93]||(e[93]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[95]||(e[95]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Categorical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colormaplike)</span></span></code></pre></div><p>Accepts all colormap values that the <code>colormap</code> attribute of a plot accepts. Will make sure to map one value to one color and create the correct Colorbar for the plot.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ax, pl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> barplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Categorical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:viridis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This feature might change outside breaking releases, since the API is not yet finalized</p></div>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[94]||(e[94]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/colorsampler.jl#L252-L265",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[94]})]),s("details",I,[s("summary",null,[e[96]||(e[96]=s("a",{id:"Makie.CellGrid",href:"#Makie.CellGrid"},[s("span",{class:"jlbinding"},"Makie.CellGrid")],-1)),e[97]||(e[97]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[99]||(e[99]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CellGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GridBased</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConversionTrait</span></span></code></pre></div><p>Plots with the <code>CellGrid</code> trait convert their input data to <code>(xs::Vector{Float32}, ys::Vector{Float32}, zs::Matrix{Float32})</code> such that <code>(length(xs), length(ys)) == size(zs) .+ 1</code>. After the conversion the x and y values represent the edges of cells corresponding to z values.</p><p>See also: <a href="/stable/api#Makie.VertexGrid"><code>VertexGrid</code></a>, <a href="/stable/api#Makie.ImageLike"><code>ImageLike</code></a> Used for: Heatmap</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[98]||(e[98]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L66-L76",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[98]})]),s("details",O,[s("summary",null,[e[100]||(e[100]=s("a",{id:"Makie.Checkbox",href:"#Makie.Checkbox"},[s("span",{class:"jlbinding"},"Makie.Checkbox")],-1)),e[101]||(e[101]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[103]||(e[103]=n("<p><strong><code>Makie.Checkbox &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Checkbox.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>checkboxcolor_checked</code>, <code>checkboxcolor_unchecked</code>, <code>checkboxstrokecolor_checked</code>, <code>checkboxstrokecolor_unchecked</code>, <code>checkboxstrokewidth</code>, <code>checked</code>, <code>checkmark</code>, <code>checkmarkcolor_checked</code>, <code>checkmarkcolor_unchecked</code>, <code>checkmarksize</code>, <code>halign</code>, <code>height</code>, <code>onchange</code>, <code>roundness</code>, <code>size</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[102]||(e[102]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[102]})]),s("details",V,[s("summary",null,[e[104]||(e[104]=s("a",{id:"Makie.ClosePath",href:"#Makie.ClosePath"},[s("span",{class:"jlbinding"},"Makie.ClosePath")],-1)),e[105]||(e[105]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[107]||(e[107]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>A path command for use within a <code>BezierPath</code> which closes the current subpath. The resulting path will have an implicit line segment between the last point and the first point if they do not match.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[106]||(e[106]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L88-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[106]})]),s("details",N,[s("summary",null,[e[108]||(e[108]=s("a",{id:"Makie.Colorbar",href:"#Makie.Colorbar"},[s("span",{class:"jlbinding"},"Makie.Colorbar")],-1)),e[109]||(e[109]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[111]||(e[111]=n(`<p><strong><code>Makie.Colorbar &lt;: Block</code></strong></p><p>Create a colorbar that shows a continuous or categorical colormap with ticks chosen according to the colorrange.</p><p>You can set colorrange and colormap manually, or pass a plot object as the second argument to copy its respective attributes.</p><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colorbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colorbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene, plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPlot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colorbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene, heatmap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Heatmap, Image}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colorbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene, contourf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Makie.Contourf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Attributes</strong></p><p>(type <code>?Makie.Colorbar.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>bottomspinecolor</code>, <code>bottomspinevisible</code>, <code>colormap</code>, <code>colorrange</code>, <code>flip_vertical_label</code>, <code>flipaxis</code>, <code>halign</code>, <code>height</code>, <code>highclip</code>, <code>label</code>, <code>labelcolor</code>, <code>labelfont</code>, <code>labelpadding</code>, <code>labelrotation</code>, <code>labelsize</code>, <code>labelvisible</code>, <code>leftspinecolor</code>, <code>leftspinevisible</code>, <code>limits</code>, <code>lowclip</code>, <code>minortickalign</code>, <code>minortickcolor</code>, <code>minorticks</code>, <code>minorticksize</code>, <code>minorticksvisible</code>, <code>minortickwidth</code>, <code>nsteps</code>, <code>rightspinecolor</code>, <code>rightspinevisible</code>, <code>scale</code>, <code>size</code>, <code>spinewidth</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>tickalign</code>, <code>tickcolor</code>, <code>tickformat</code>, <code>ticklabelalign</code>, <code>ticklabelcolor</code>, <code>ticklabelfont</code>, <code>ticklabelpad</code>, <code>ticklabelrotation</code>, <code>ticklabelsize</code>, <code>ticklabelspace</code>, <code>ticklabelsvisible</code>, <code>ticks</code>, <code>ticksize</code>, <code>ticksvisible</code>, <code>tickwidth</code>, <code>topspinecolor</code>, <code>topspinevisible</code>, <code>valign</code>, <code>vertical</code>, <code>width</code></p>`,8)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[110]||(e[110]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L140",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[110]})]),s("details",R,[s("summary",null,[e[112]||(e[112]=s("a",{id:"Makie.Contour",href:"#Makie.Contour"},[s("span",{class:"jlbinding"},"Makie.Contour")],-1)),e[113]||(e[113]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[115]||(e[115]=s("p",null,[s("code",null,"Contour"),o(" is the plot type associated with plotting function "),s("code",null,"contour"),o(". Check the docstring for "),s("code",null,"contour"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[114]||(e[114]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[114]})]),s("details",z,[s("summary",null,[e[116]||(e[116]=s("a",{id:"Makie.Contour3d",href:"#Makie.Contour3d"},[s("span",{class:"jlbinding"},"Makie.Contour3d")],-1)),e[117]||(e[117]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[119]||(e[119]=s("p",null,[s("code",null,"Contour3d"),o(" is the plot type associated with plotting function "),s("code",null,"contour3d"),o(". Check the docstring for "),s("code",null,"contour3d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[118]||(e[118]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[118]})]),s("details",q,[s("summary",null,[e[120]||(e[120]=s("a",{id:"Makie.Contourf",href:"#Makie.Contourf"},[s("span",{class:"jlbinding"},"Makie.Contourf")],-1)),e[121]||(e[121]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[123]||(e[123]=s("p",null,[s("code",null,"Contourf"),o(" is the plot type associated with plotting function "),s("code",null,"contourf"),o(". Check the docstring for "),s("code",null,"contourf"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[122]||(e[122]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[122]})]),s("details",G,[s("summary",null,[e[124]||(e[124]=s("a",{id:"Makie.CrossBar",href:"#Makie.CrossBar"},[s("span",{class:"jlbinding"},"Makie.CrossBar")],-1)),e[125]||(e[125]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[127]||(e[127]=s("p",null,[s("code",null,"CrossBar"),o(" is the plot type associated with plotting function "),s("code",null,"crossbar"),o(". Check the docstring for "),s("code",null,"crossbar"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[126]||(e[126]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[126]})]),s("details",U,[s("summary",null,[e[128]||(e[128]=s("a",{id:"Makie.CurveTo",href:"#Makie.CurveTo"},[s("span",{class:"jlbinding"},"Makie.CurveTo")],-1)),e[129]||(e[129]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[131]||(e[131]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CurveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CurveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cx1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cy1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cx2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cy2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, py</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A path command for use within a <code>BezierPath</code> which continues the current subpath with a cubic bezier curve to point <code>p</code>, with the first control point <code>c1</code> and the second control point <code>c2</code>.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[130]||(e[130]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L26-L32",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[130]})]),s("details",H,[s("summary",null,[e[132]||(e[132]=s("a",{id:"Makie.Cycled",href:"#Makie.Cycled"},[s("span",{class:"jlbinding"},"Makie.Cycled")],-1)),e[133]||(e[133]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[135]||(e[135]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Cycled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If a <code>Cycled</code> value is passed as an attribute to a plotting function, it is replaced with the value from the cycler for this attribute (as long as there is one defined) at the index <code>i</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[134]||(e[134]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L44-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[134]})]),s("details",W,[s("summary",null,[e[136]||(e[136]=s("a",{id:"Makie.DataInspector-Tuple{Any}",href:"#Makie.DataInspector-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.DataInspector")],-1)),e[137]||(e[137]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[139]||(e[139]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataInspector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figure_axis_or_scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current_figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a data inspector which will show relevant information in a tooltip when you hover over a plot.</p><p>This functionality can be disabled on a per-plot basis by setting <code>plot.inspectable[] = false</code>. The displayed text can be adjusted by setting <code>plot.inspector_label</code> to a function <code>(plot, index, position) -&gt; &quot;my_label&quot;</code> returning a label. See Makie documentation for more detail.</p><p><strong>Keyword Arguments:</strong></p><ul><li><p><code>range = 10</code>: Controls the snapping range for selecting an element of a plot.</p></li><li><p><code>priority = 100</code>: The priority of creating a tooltip on a mouse movement or scrolling event.</p></li><li><p><code>enabled = true</code>: Disables inspection of plots when set to false. Can also be adjusted with <code>enable!(inspector)</code> and <code>disable!(inspector)</code>.</p></li><li><p><code>indicator_color = :red</code>: Color of the selection indicator.</p></li><li><p><code>indicator_linewidth = 2</code>: Linewidth of the selection indicator.</p></li><li><p><code>indicator_linestyle = nothing</code>: Linestyle of the selection indicator</p></li><li><p><code>enable_indicators = true</code>: Enables or disables indicators</p></li><li><p><code>depth = 9e3</code>: Depth value of the tooltip. This should be high so that the tooltip is always in front.</p></li><li><p><code>apply_tooltip_offset = true</code>: Enables or disables offsetting tooltips based on, for example, markersize.</p></li><li><p>and all attributes from <code>Tooltip</code></p></li></ul>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[138]||(e[138]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/inspector.jl#L218-L244",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[138]})]),s("details",Y,[s("summary",null,[e[140]||(e[140]=s("a",{id:"Makie.DataShader",href:"#Makie.DataShader"},[s("span",{class:"jlbinding"},"Makie.DataShader")],-1)),e[141]||(e[141]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[143]||(e[143]=s("p",null,[s("code",null,"DataShader"),o(" is the plot type associated with plotting function "),s("code",null,"datashader"),o(". Check the docstring for "),s("code",null,"datashader"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[142]||(e[142]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[142]})]),s("details",K,[s("summary",null,[e[144]||(e[144]=s("a",{id:"Makie.DateTimeTicks",href:"#Makie.DateTimeTicks"},[s("span",{class:"jlbinding"},"Makie.DateTimeTicks")],-1)),e[145]||(e[145]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[147]||(e[147]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTimeTicks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k_ideal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A tick finder that tries to locate around <code>k_ideal</code> equally spaced ticks in a <code>DateTime</code> interval. The ticks are formatted such that neighboring ticks omit redundant information. For example, two neighboring ticks that lie in the same minute would only show the time up to the minute once, and the second otherwise.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[146]||(e[146]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/dim-converts/dates-integration.jl#L152-L160",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[146]})]),s("details",Q,[s("summary",null,[e[148]||(e[148]=s("a",{id:"Makie.Dendrogram",href:"#Makie.Dendrogram"},[s("span",{class:"jlbinding"},"Makie.Dendrogram")],-1)),e[149]||(e[149]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[151]||(e[151]=s("p",null,[s("code",null,"Dendrogram"),o(" is the plot type associated with plotting function "),s("code",null,"dendrogram"),o(". Check the docstring for "),s("code",null,"dendrogram"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[150]||(e[150]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[150]})]),s("details",$,[s("summary",null,[e[152]||(e[152]=s("a",{id:"Makie.Density",href:"#Makie.Density"},[s("span",{class:"jlbinding"},"Makie.Density")],-1)),e[153]||(e[153]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[155]||(e[155]=s("p",null,[s("code",null,"Density"),o(" is the plot type associated with plotting function "),s("code",null,"density"),o(". Check the docstring for "),s("code",null,"density"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[154]||(e[154]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[154]})]),s("details",X,[s("summary",null,[e[156]||(e[156]=s("a",{id:"Makie.DirectionalLight",href:"#Makie.DirectionalLight"},[s("span",{class:"jlbinding"},"Makie.DirectionalLight")],-1)),e[157]||(e[157]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[159]||(e[159]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DirectionalLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, direction[, camera_relative </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>A light type which simulates a distant light source with parallel light rays going in the given <code>direction</code>.</p><p>Availability:</p><ul><li>All backends with <code>shading = FastShading</code> or <code>MultiLightShading</code></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[158]||(e[158]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L78-L86",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[158]})]),s("details",J,[s("summary",null,[e[160]||(e[160]=s("a",{id:"Makie.ECDFPlot",href:"#Makie.ECDFPlot"},[s("span",{class:"jlbinding"},"Makie.ECDFPlot")],-1)),e[161]||(e[161]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[163]||(e[163]=s("p",null,[s("code",null,"ECDFPlot"),o(" is the plot type associated with plotting function "),s("code",null,"ecdfplot"),o(". Check the docstring for "),s("code",null,"ecdfplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[162]||(e[162]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[162]})]),s("details",Z,[s("summary",null,[e[164]||(e[164]=s("a",{id:"Makie.EllipticalArc",href:"#Makie.EllipticalArc"},[s("span",{class:"jlbinding"},"Makie.EllipticalArc")],-1)),e[165]||(e[165]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[167]||(e[167]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipticalArc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, angle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipticalArc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, r2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, angle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A path command for use within a <code>BezierPath</code> which continues the current subpath with an elliptical arc. The ellipse is centered at <code>c</code> and has two radii, <code>r1</code> and <code>r2</code>, the orientation of which depends on <code>angle</code>.</p><p>If <code>angle == 0</code>, <code>r1</code> goes in x direction and <code>r2</code> in y direction. A positive <code>angle</code> in radians rotates the ellipse counterclockwise, and a negative <code>angle</code> clockwise.</p><p>The angles <code>a1</code> and <code>a2</code> are the start and stop positions of the arc on the ellipse. A value of <code>0</code> is where the radius <code>r1</code> points to, <code>pi/2</code> is where the radius <code>r2</code> points to, and so on. If <code>a2 &gt; a1</code>, the arc turns counterclockwise. If <code>a1 &gt; a2</code>, it turns clockwise.</p><p>If the last position of the subpath does not equal the start of the arc, the resulting path will have an implicit line segment between the two.</p>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[166]||(e[166]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L56-L73",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[166]})]),s("details",ee,[s("summary",null,[e[168]||(e[168]=s("a",{id:"Makie.EllipticalArc-Tuple{Any, Any, Any, Any, Any, Any, Any, Bool, Bool}",href:"#Makie.EllipticalArc-Tuple{Any, Any, Any, Any, Any, Any, Any, Bool, Bool}"},[s("span",{class:"jlbinding"},"Makie.EllipticalArc")],-1)),e[169]||(e[169]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[171]||(e[171]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipticalArc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ϕ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, largearc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sweepflag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct an <code>EllipticalArc</code> using the endpoint parameterization.</p><p><code>x1, y1</code> is the starting point and <code>x2, y2</code> the end point, <code>rx</code> and <code>ry</code> are the two ellipse radii. <code>ϕ</code> is the angle of <code>rx</code> vs the x axis.</p><p>Usually, four arcs can be constructed between two points given these ellipse parameters. One of them is chosen using two boolean flags:</p><p>If <code>largearc === true</code>, the arc will be longer than 180 degrees. If <code>sweepflag === true</code>, the arc will sweep through increasing angles.</p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[170]||(e[170]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L561-L574",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[170]})]),s("details",se,[s("summary",null,[e[172]||(e[172]=s("a",{id:"Makie.EnvironmentLight",href:"#Makie.EnvironmentLight"},[s("span",{class:"jlbinding"},"Makie.EnvironmentLight")],-1)),e[173]||(e[173]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[175]||(e[175]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EnvironmentLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(intensity, image)</span></span></code></pre></div><p>An environment light that uses a spherical environment map to provide lighting. See: <a href="https://en.wikipedia.org/wiki/Reflection_mapping" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Reflection_mapping</a></p><p>Availability:</p><ul><li>RPRMakie</li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[174]||(e[174]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L127-L135",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[174]})]),s("details",te,[s("summary",null,[e[176]||(e[176]=s("a",{id:"Makie.Errorbars",href:"#Makie.Errorbars"},[s("span",{class:"jlbinding"},"Makie.Errorbars")],-1)),e[177]||(e[177]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[179]||(e[179]=s("p",null,[s("code",null,"Errorbars"),o(" is the plot type associated with plotting function "),s("code",null,"errorbars"),o(". Check the docstring for "),s("code",null,"errorbars"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[178]||(e[178]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[178]})]),s("details",ie,[s("summary",null,[e[180]||(e[180]=s("a",{id:"Makie.Events",href:"#Makie.Events"},[s("span",{class:"jlbinding"},"Makie.Events")],-1)),e[181]||(e[181]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[183]||(e[183]=n(`<p>This struct provides accessible <code>Observable</code>s to monitor the events associated with a Scene.</p><p>Functions that act on an <code>Observable</code> must return <code>Consume()</code> if the function consumes an event. When an event is consumed it does not trigger other observer functions. The order in which functions are executed can be controlled via the <code>priority</code> keyword (default 0) in <code>on</code>.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mousebutton, priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> is_correct_event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        do_something</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Consume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Fields</strong></p><ul><li><p><code>window_area::Observable{GeometryBasics.HyperRectangle{2, Int64}}</code>: The area of the window in pixels, as a <code>Rect2</code>.</p></li><li><p><code>window_dpi::Observable{Float64}</code>: The DPI resolution of the window, as a <code>Float64</code>.</p></li><li><p><code>window_open::Observable{Bool}</code>: The state of the window (open =&gt; true, closed =&gt; false).</p></li><li><p><code>mousebutton::Observable{Makie.MouseButtonEvent}</code>: Most recently triggered <code>MouseButtonEvent</code>. Contains the relevant <code>event.button</code> and <code>event.action</code> (press/release) See also <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>.</p></li><li><p><code>mousebuttonstate::Set{Makie.Mouse.Button}</code>: A Set of all currently pressed mousebuttons.</p></li><li><p><code>mouseposition::Observable{Tuple{Float64, Float64}}</code>: The position of the mouse as a <code>NTuple{2, Float64}</code>. Updates once per event poll/frame.</p></li><li><p><code>scroll::Observable{Tuple{Float64, Float64}}</code>: The direction of scroll</p></li><li><p><code>keyboardbutton::Observable{Makie.KeyEvent}</code>: Most recently triggered <code>KeyEvent</code>. Contains the relevant <code>event.key</code> and <code>event.action</code> (press/repeat/release) See also <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>.</p></li><li><p><code>keyboardstate::Set{Makie.Keyboard.Button}</code>: Contains all currently pressed keys.</p></li><li><p><code>unicode_input::Observable{Char}</code>: Contains the last typed character.</p></li><li><p><code>dropped_files::Observable{Vector{String}}</code>: Contains a list of filepaths to files dragged into the scene.</p></li><li><p><code>hasfocus::Observable{Bool}</code>: Whether the Scene window is in focus or not.</p></li><li><p><code>entered_window::Observable{Bool}</code>: Whether the mouse is inside the window or not.</p></li><li><p><code>tick::Observable{Makie.Tick}</code>: A <code>tick</code> is triggered whenever a new frame is requested, i.e. during normal rendering (even if the renderloop is paused) or when an image is produced for <code>save</code> or <code>record</code>. A Tick contains:</p><ul><li><p><code>state</code> which identifies what caused the tick (see Makie.TickState)</p></li><li><p><code>count</code> which increments with every tick</p></li><li><p><code>time</code> which is the total time since the screen has been created</p></li><li><p><code>delta_time</code> which is the time since the last frame</p></li></ul></li></ul>`,6)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[182]||(e[182]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/types.jl#L60-L82",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[182]})]),s("details",oe,[s("summary",null,[e[184]||(e[184]=s("a",{id:"Makie.Exclusively",href:"#Makie.Exclusively"},[s("span",{class:"jlbinding"},"Makie.Exclusively")],-1)),e[185]||(e[185]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[187]||(e[187]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Exclusively</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Marks a button, button collection or logical expression of buttons as the exclusive subset of buttons that must be pressed for <code>ispressed</code> to return true.</p><p>For example <code>Exclusively((Keyboard.left_control, Keyboard.c))</code> would require left control and c to be pressed without any other buttons.</p><p>Boolean expressions are lowered to multiple <code>Exclusive</code> sets in an <code>Or</code>. It is worth noting that <code>Not</code> branches are ignored here, i.e. it assumed that every button under a <code>Not</code> must not be pressed and that this follows automatically from the subset of buttons that must be pressed.</p><p>See also: <a href="/stable/api#Makie.And"><code>And</code></a>, <a href="/stable/api#Makie.Or"><code>Or</code></a>, <a href="/stable/api#Makie.Not"><code>Not</code></a>, <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>, <code>&amp;</code>, <code>|</code>, <code>!</code></p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[186]||(e[186]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L145-L161",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[186]})]),s("details",ae,[s("summary",null,[e[188]||(e[188]=s("a",{id:"Makie.FastPixel",href:"#Makie.FastPixel"},[s("span",{class:"jlbinding"},"Makie.FastPixel")],-1)),e[189]||(e[189]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[191]||(e[191]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FastPixel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Use</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FastPixel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>For significantly faster plotting times for large amount of points. Note, that this will draw markers always as 1 pixel.</p>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[190]||(e[190]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L2259-L2270",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[190]})]),s("details",ne,[s("summary",null,[e[192]||(e[192]=s("a",{id:"Makie.Figure-Tuple{}",href:"#Makie.Figure-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.Figure")],-1)),e[193]||(e[193]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[195]||(e[195]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; [figure_padding,] kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a <code>Figure</code> which allows to place <code>Block</code>s like <a href="/stable/reference/blocks/axis#Axis"><code>Axis</code></a>, <a href="/stable/api#Makie.Colorbar"><code>Colorbar</code></a> and <a href="/stable/api#Makie.Legend"><code>Legend</code></a> inside. The outer padding of the figure (the distance of the content to the edges) can be set by passing either one number or a tuple of four numbers for left, right, bottom and top paddings via the <code>figure_padding</code> keyword.</p><p>All other keyword arguments such as <code>size</code> and <code>backgroundcolor</code> are forwarded to the <a href="/stable/api#Makie.Scene"><code>Scene</code></a> owned by the figure which acts as the container for all other visual objects.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[194]||(e[194]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L97-L106",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[194]})]),s("details",le,[s("summary",null,[e[196]||(e[196]=s("a",{id:"Makie.GridBased",href:"#Makie.GridBased"},[s("span",{class:"jlbinding"},"Makie.GridBased")],-1)),e[197]||(e[197]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[199]||(e[199]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GridBased </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConversionTrait</span></span></code></pre></div><p>GridBased is an abstract conversion trait for data that exists on a grid.</p><p>Child types: <a href="/stable/api#Makie.VertexGrid"><code>VertexGrid</code></a>, <a href="/stable/api#Makie.CellGrid"><code>CellGrid</code></a> See also: <a href="/stable/api#Makie.ImageLike"><code>ImageLike</code></a> Used for: Scatter, Lines</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[198]||(e[198]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L40-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[198]})]),s("details",de,[s("summary",null,[e[200]||(e[200]=s("a",{id:"Makie.HLines",href:"#Makie.HLines"},[s("span",{class:"jlbinding"},"Makie.HLines")],-1)),e[201]||(e[201]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[203]||(e[203]=s("p",null,[s("code",null,"HLines"),o(" is the plot type associated with plotting function "),s("code",null,"hlines"),o(". Check the docstring for "),s("code",null,"hlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[202]||(e[202]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[202]})]),s("details",re,[s("summary",null,[e[204]||(e[204]=s("a",{id:"Makie.HSpan",href:"#Makie.HSpan"},[s("span",{class:"jlbinding"},"Makie.HSpan")],-1)),e[205]||(e[205]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[207]||(e[207]=s("p",null,[s("code",null,"HSpan"),o(" is the plot type associated with plotting function "),s("code",null,"hspan"),o(". Check the docstring for "),s("code",null,"hspan"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[206]||(e[206]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[206]})]),s("details",ce,[s("summary",null,[e[208]||(e[208]=s("a",{id:"Makie.Heatmap",href:"#Makie.Heatmap"},[s("span",{class:"jlbinding"},"Makie.Heatmap")],-1)),e[209]||(e[209]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[211]||(e[211]=s("p",null,[s("code",null,"Heatmap"),o(" is the plot type associated with plotting function "),s("code",null,"heatmap"),o(". Check the docstring for "),s("code",null,"heatmap"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[210]||(e[210]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[210]})]),s("details",pe,[s("summary",null,[e[212]||(e[212]=s("a",{id:"Makie.Hexbin",href:"#Makie.Hexbin"},[s("span",{class:"jlbinding"},"Makie.Hexbin")],-1)),e[213]||(e[213]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[215]||(e[215]=s("p",null,[s("code",null,"Hexbin"),o(" is the plot type associated with plotting function "),s("code",null,"hexbin"),o(". Check the docstring for "),s("code",null,"hexbin"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[214]||(e[214]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[214]})]),s("details",he,[s("summary",null,[e[216]||(e[216]=s("a",{id:"Makie.Hist",href:"#Makie.Hist"},[s("span",{class:"jlbinding"},"Makie.Hist")],-1)),e[217]||(e[217]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[219]||(e[219]=s("p",null,[s("code",null,"Hist"),o(" is the plot type associated with plotting function "),s("code",null,"hist"),o(". Check the docstring for "),s("code",null,"hist"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[218]||(e[218]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[218]})]),s("details",ke,[s("summary",null,[e[220]||(e[220]=s("a",{id:"Makie.Image",href:"#Makie.Image"},[s("span",{class:"jlbinding"},"Makie.Image")],-1)),e[221]||(e[221]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[223]||(e[223]=s("p",null,[s("code",null,"Image"),o(" is the plot type associated with plotting function "),s("code",null,"image"),o(". Check the docstring for "),s("code",null,"image"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[222]||(e[222]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[222]})]),s("details",ge,[s("summary",null,[e[224]||(e[224]=s("a",{id:"Makie.ImageLike",href:"#Makie.ImageLike"},[s("span",{class:"jlbinding"},"Makie.ImageLike")],-1)),e[225]||(e[225]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[227]||(e[227]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ImageLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConversionTrait</span></span></code></pre></div><p>Plots with the <code>ImageLike</code> trait convert their input data to <code>(xs::Interval, ys::Interval, zs::Matrix{Float32})</code> where xs and ys mark the limits of a quad containing zs.</p><p>See also: <a href="/stable/api#Makie.CellGrid"><code>CellGrid</code></a>, <a href="/stable/api#Makie.VertexGrid"><code>VertexGrid</code></a> Used for: Image</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[226]||(e[226]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L80-L89",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[226]})]),s("details",ue,[s("summary",null,[e[228]||(e[228]=s("a",{id:"Makie.IntervalSlider",href:"#Makie.IntervalSlider"},[s("span",{class:"jlbinding"},"Makie.IntervalSlider")],-1)),e[229]||(e[229]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[231]||(e[231]=n("<p><strong><code>Makie.IntervalSlider &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.IntervalSlider.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>color_active</code>, <code>color_active_dimmed</code>, <code>color_inactive</code>, <code>halign</code>, <code>height</code>, <code>horizontal</code>, <code>interval</code>, <code>linewidth</code>, <code>range</code>, <code>snap</code>, <code>startvalues</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[230]||(e[230]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[230]})]),s("details",be,[s("summary",null,[e[232]||(e[232]=s("a",{id:"Makie.IntervalsBetween",href:"#Makie.IntervalsBetween"},[s("span",{class:"jlbinding"},"Makie.IntervalsBetween")],-1)),e[233]||(e[233]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[235]||(e[235]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntervalsBetween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mirror</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Indicates to create n-1 minor ticks between every pair of adjacent major ticks.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[234]||(e[234]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L142-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[234]})]),s("details",ye,[s("summary",null,[e[236]||(e[236]=s("a",{id:"Makie.LScene",href:"#Makie.LScene"},[s("span",{class:"jlbinding"},"Makie.LScene")],-1)),e[237]||(e[237]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[239]||(e[239]=n("<p><strong><code>Makie.LScene &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.LScene.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>dim1_conversion</code>, <code>dim2_conversion</code>, <code>dim3_conversion</code>, <code>halign</code>, <code>height</code>, <code>show_axis</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[238]||(e[238]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[238]})]),s("details",fe,[s("summary",null,[e[240]||(e[240]=s("a",{id:"Makie.Label",href:"#Makie.Label"},[s("span",{class:"jlbinding"},"Makie.Label")],-1)),e[241]||(e[241]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[243]||(e[243]=n("<p><strong><code>Makie.Label &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Label.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>color</code>, <code>font</code>, <code>fontsize</code>, <code>halign</code>, <code>height</code>, <code>justification</code>, <code>lineheight</code>, <code>padding</code>, <code>rotation</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>text</code>, <code>valign</code>, <code>visible</code>, <code>width</code>, <code>word_wrap</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[242]||(e[242]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[242]})]),s("details",me,[s("summary",null,[e[244]||(e[244]=s("a",{id:"Makie.Legend",href:"#Makie.Legend"},[s("span",{class:"jlbinding"},"Makie.Legend")],-1)),e[245]||(e[245]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[247]||(e[247]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Legend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fig_or_scene,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a legend from <code>contents</code> and <code>labels</code> where each label is associated to one content element. A content element can be an <code>AbstractPlot</code>, an array of <code>AbstractPlots</code>, a <code>LegendElement</code>, or any other object for which the <code>legendelements</code> method is defined.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[246]||(e[246]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/legend.jl#L935-L947",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[246]})]),s("details",Ee,[s("summary",null,[e[248]||(e[248]=s("a",{id:"Makie.Legend-2",href:"#Makie.Legend-2"},[s("span",{class:"jlbinding"},"Makie.Legend")],-1)),e[249]||(e[249]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[251]||(e[251]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Legend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene, axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Axis, Scene, LScene}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; merge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, unique </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a single-group legend with all plots from <code>axis</code> that have the attribute <code>label</code> set.</p><p>If <code>merge</code> is <code>true</code>, all plot objects with the same label will be layered on top of each other into one legend entry. If <code>unique</code> is <code>true</code>, all plot objects with the same plot type and label will be reduced to one occurrence.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[250]||(e[250]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/legend.jl#L999-L1007",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[250]})]),s("details",ve,[s("summary",null,[e[252]||(e[252]=s("a",{id:"Makie.Legend-3",href:"#Makie.Legend-3"},[s("span",{class:"jlbinding"},"Makie.Legend")],-1)),e[253]||(e[253]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[255]||(e[255]=n("<p><strong><code>Makie.Legend &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Legend.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>alpha</code>, <code>backgroundcolor</code>, <code>bgcolor</code>, <code>colgap</code>, <code>framecolor</code>, <code>framevisible</code>, <code>framewidth</code>, <code>gridshalign</code>, <code>gridsvalign</code>, <code>groupgap</code>, <code>halign</code>, <code>heatmapcolorrange</code>, <code>heatmaplimits</code>, <code>heatmapvalues</code>, <code>height</code>, <code>imagecolorrange</code>, <code>imagelimits</code>, <code>imagevalues</code>, <code>label</code>, <code>labelcolor</code>, <code>labelfont</code>, <code>labelhalign</code>, <code>labeljustification</code>, <code>labelsize</code>, <code>labelvalign</code>, <code>linecolor</code>, <code>linecolormap</code>, <code>linecolorrange</code>, <code>linepoints</code>, <code>linestyle</code>, <code>linewidth</code>, <code>margin</code>, <code>marker</code>, <code>markercolor</code>, <code>markercolormap</code>, <code>markercolorrange</code>, <code>markerpoints</code>, <code>markersize</code>, <code>markerstrokecolor</code>, <code>markerstrokewidth</code>, <code>mesh</code>, <code>meshcolor</code>, <code>meshcolormap</code>, <code>meshcolorrange</code>, <code>meshscattercolor</code>, <code>meshscattercolormap</code>, <code>meshscattercolorrange</code>, <code>meshscattermarker</code>, <code>meshscatterpoints</code>, <code>meshscatterrotation</code>, <code>meshscattersize</code>, <code>nbanks</code>, <code>orientation</code>, <code>padding</code>, <code>patchcolor</code>, <code>patchlabelgap</code>, <code>patchsize</code>, <code>patchstrokecolor</code>, <code>patchstrokewidth</code>, <code>polycolor</code>, <code>polycolormap</code>, <code>polycolorrange</code>, <code>polypoints</code>, <code>polystrokecolor</code>, <code>polystrokewidth</code>, <code>rowgap</code>, <code>surfacecolormap</code>, <code>surfacecolorrange</code>, <code>surfacedata</code>, <code>surfacevalues</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>titlecolor</code>, <code>titlefont</code>, <code>titlegap</code>, <code>titlehalign</code>, <code>titleposition</code>, <code>titlesize</code>, <code>titlevalign</code>, <code>titlevisible</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[254]||(e[254]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[254]})]),s("details",_e,[s("summary",null,[e[256]||(e[256]=s("a",{id:"Makie.Legend-Tuple{Any, AbstractVector{<:AbstractVector}, AbstractVector{<:AbstractVector}, AbstractVector}",href:"#Makie.Legend-Tuple{Any, AbstractVector{<:AbstractVector}, AbstractVector{<:AbstractVector}, AbstractVector}"},[s("span",{class:"jlbinding"},"Makie.Legend")],-1)),e[257]||(e[257]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[259]||(e[259]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Legend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fig_or_scene,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contentgroups</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractVector}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labelgroups</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractVector}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    titles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a multi-group legend from <code>contentgroups</code>, <code>labelgroups</code> and <code>titles</code>. Each group from <code>contentgroups</code> and <code>labelgroups</code> is associated with one title from <code>titles</code> (a title can be <code>nothing</code> to hide it).</p><p>Within each group, each content element is associated with one label. A content element can be an <code>AbstractPlot</code>, an array of <code>AbstractPlots</code>, a <code>LegendElement</code>, or any other object for which the <code>legendelements</code> method is defined.</p>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[258]||(e[258]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/legend.jl#L966-L981",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[258]})]),s("details",Te,[s("summary",null,[e[260]||(e[260]=s("a",{id:"Makie.LineSegments",href:"#Makie.LineSegments"},[s("span",{class:"jlbinding"},"Makie.LineSegments")],-1)),e[261]||(e[261]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[263]||(e[263]=s("p",null,[s("code",null,"LineSegments"),o(" is the plot type associated with plotting function "),s("code",null,"linesegments"),o(". Check the docstring for "),s("code",null,"linesegments"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[262]||(e[262]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[262]})]),s("details",je,[s("summary",null,[e[264]||(e[264]=s("a",{id:"Makie.LineTo",href:"#Makie.LineTo"},[s("span",{class:"jlbinding"},"Makie.LineTo")],-1)),e[265]||(e[265]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[267]||(e[267]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A path command for use within a <code>BezierPath</code> which continues the current subpath with a line to the given point.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[266]||(e[266]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L13-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[266]})]),s("details",Me,[s("summary",null,[e[268]||(e[268]=s("a",{id:"Makie.LinearTicks",href:"#Makie.LinearTicks"},[s("span",{class:"jlbinding"},"Makie.LinearTicks")],-1)),e[269]||(e[269]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[271]||(e[271]=s("p",null,[o("LinearTicks with ideally a number of "),s("code",null,"n_ideal"),o(" tick marks.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[270]||(e[270]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L55-L57",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[270]})]),s("details",Ce,[s("summary",null,[e[272]||(e[272]=s("a",{id:"Makie.Lines",href:"#Makie.Lines"},[s("span",{class:"jlbinding"},"Makie.Lines")],-1)),e[273]||(e[273]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[275]||(e[275]=s("p",null,[s("code",null,"Lines"),o(" is the plot type associated with plotting function "),s("code",null,"lines"),o(". Check the docstring for "),s("code",null,"lines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[274]||(e[274]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[274]})]),s("details",Fe,[s("summary",null,[e[276]||(e[276]=s("a",{id:"Makie.Linestyle",href:"#Makie.Linestyle"},[s("span",{class:"jlbinding"},"Makie.Linestyle")],-1)),e[277]||(e[277]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[279]||(e[279]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Linestyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A type that can be used as value for the <code>linestyle</code> keyword argument of plotting functions to arbitrarily customize the linestyle.</p><p>The <code>value</code> is a vector specifying the boundaries of the dashes in the line. Values 1 and 2 demarcate the first dash, values 2 and 3 the first gap, and so on. This means that usually, a pattern should have an odd number of values so that there&#39;s always a gap after a dash.</p><p>Here&#39;s an example in ASCII code. If we specify <code>[0, 3, 6, 11, 16]</code> then we get the following pattern:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#  0  3   6   11   16  3  6   11</span></span>
<span class="line"><span>#   ---   -----     ---   -----</span></span></code></pre></div>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[278]||(e[278]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1165-L1183",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[278]})]),s("details",we,[s("summary",null,[e[280]||(e[280]=s("a",{id:"Makie.LogTicks",href:"#Makie.LogTicks"},[s("span",{class:"jlbinding"},"Makie.LogTicks")],-1)),e[281]||(e[281]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[283]||(e[283]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogTicks{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(linear_ticks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Wraps any other tick object. Used to apply a linear tick searching algorithm on a log-transformed interval.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[282]||(e[282]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L132-L137",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[282]})]),s("details",xe,[s("summary",null,[e[284]||(e[284]=s("a",{id:"Makie.MakieScreen",href:"#Makie.MakieScreen"},[s("span",{class:"jlbinding"},"Makie.MakieScreen")],-1)),e[285]||(e[285]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[287]||(e[287]=n(`<p>Screen constructors implemented by all backends:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Constructor aimed at showing the plot in a window.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Screen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; screen_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Screen to save a png/jpeg to file or io</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Screen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mime; screen_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Screen that is efficient for \`colorbuffer(screen, format)\`</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Screen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Makie.ImageStorageFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; screen_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Interface implemented by all backends:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Needs to be overload:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screen) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Size in pixel</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">empty!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screen) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># empties screen state to reuse the screen, or to close it</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Optional</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(screen) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># waits as long window is open</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Provided by Makie:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">push_screen!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, screen)</span></span></code></pre></div>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[286]||(e[286]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/coretypes.jl#L13-L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[286]})]),s("details",Ae,[s("summary",null,[e[288]||(e[288]=s("a",{id:"Makie.Menu",href:"#Makie.Menu"},[s("span",{class:"jlbinding"},"Makie.Menu")],-1)),e[289]||(e[289]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[291]||(e[291]=n(`<p><strong><code>Makie.Menu &lt;: Block</code></strong></p><p>A drop-down menu with multiple selectable options. You can pass options with the keyword argument <code>options</code>.</p><p>Options are given as an iterable of elements. For each element, the option label in the menu is determined with <code>optionlabel(element)</code> and the option value with <code>optionvalue(element)</code>. These functions can be overloaded for custom types. The default is that tuples of two elements are expected to be label and value, where <code>string(label)</code> is used as the label, while for all other objects, label = <code>string(object)</code> and value = object.</p><p>When an item is selected in the menu, the menu&#39;s <code>selection</code> attribute is set to <code>optionvalue(selected_element)</code>. When nothing is selected, that value is <code>nothing</code>.</p><p>You can set the initial selection by passing one of the labels with the <code>default</code> keyword.</p><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene; default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Examples</strong></p><p>Menu with string entries, second preselected:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">menu1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;second&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;third&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;second&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Menu with two-element entries, label and function:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">funcs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [sin, cos, tan]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">labels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cosine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tangens&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">menu2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(labels, funcs))</span></span></code></pre></div><p>Executing a function when a selection is made:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(menu2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selection) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selected_function</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # do something with the selected function</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Attributes</strong></p><p>(type <code>?Makie.Menu.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>cell_color_active</code>, <code>cell_color_hover</code>, <code>cell_color_inactive_even</code>, <code>cell_color_inactive_odd</code>, <code>direction</code>, <code>dropdown_arrow_color</code>, <code>dropdown_arrow_size</code>, <code>fontsize</code>, <code>halign</code>, <code>height</code>, <code>i_selected</code>, <code>is_open</code>, <code>options</code>, <code>prompt</code>, <code>scroll_speed</code>, <code>selection</code>, <code>selection_cell_color_inactive</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>textcolor</code>, <code>textpadding</code>, <code>valign</code>, <code>width</code></p>`,17)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[290]||(e[290]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L166",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[290]})]),s("details",Se,[s("summary",null,[e[292]||(e[292]=s("a",{id:"Makie.Mesh",href:"#Makie.Mesh"},[s("span",{class:"jlbinding"},"Makie.Mesh")],-1)),e[293]||(e[293]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[295]||(e[295]=s("p",null,[s("code",null,"Mesh"),o(" is the plot type associated with plotting function "),s("code",null,"mesh"),o(". Check the docstring for "),s("code",null,"mesh"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[294]||(e[294]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[294]})]),s("details",De,[s("summary",null,[e[296]||(e[296]=s("a",{id:"Makie.MeshScatter",href:"#Makie.MeshScatter"},[s("span",{class:"jlbinding"},"Makie.MeshScatter")],-1)),e[297]||(e[297]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[299]||(e[299]=s("p",null,[s("code",null,"MeshScatter"),o(" is the plot type associated with plotting function "),s("code",null,"meshscatter"),o(". Check the docstring for "),s("code",null,"meshscatter"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[298]||(e[298]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[298]})]),s("details",Be,[s("summary",null,[e[300]||(e[300]=s("a",{id:"Makie.MouseEvent",href:"#Makie.MouseEvent"},[s("span",{class:"jlbinding"},"Makie.MouseEvent")],-1)),e[301]||(e[301]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[303]||(e[303]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MouseEvent</span></span></code></pre></div><p>Describes a mouse state change. Fields:</p><ul><li><p><code>type</code>: MouseEventType</p></li><li><p><code>t</code>: Time of the event</p></li><li><p><code>data</code>: Mouse position in data coordinates</p></li><li><p><code>px</code>: Mouse position in px relative to scene origin</p></li><li><p><code>prev_t</code>: Time of previous event</p></li><li><p><code>prev_data</code>: Previous mouse position in data coordinates</p></li><li><p><code>prev_px</code>: Previous mouse position in data coordinates</p></li></ul>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[302]||(e[302]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L42-L54",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[302]})]),s("details",Le,[s("summary",null,[e[304]||(e[304]=s("a",{id:"Makie.MoveTo",href:"#Makie.MoveTo"},[s("span",{class:"jlbinding"},"Makie.MoveTo")],-1)),e[305]||(e[305]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[307]||(e[307]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MoveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MoveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A path command for use within a <code>BezierPath</code> which starts a new subpath at the given point.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[306]||(e[306]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/bezier.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[306]})]),s("details",Pe,[s("summary",null,[e[308]||(e[308]=s("a",{id:"Makie.MultiplesTicks",href:"#Makie.MultiplesTicks"},[s("span",{class:"jlbinding"},"Makie.MultiplesTicks")],-1)),e[309]||(e[309]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[311]||(e[311]=n('<p>Like LinearTicks but for multiples of <code>multiple</code>. Example where approximately 5 numbers should be found that are multiples of pi, printed like &quot;1π&quot;, &quot;2π&quot;, etc.:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MultiplesTicks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;π&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If <code>strip_zero == true</code>, then the resulting labels will be checked and any label that is a multiple of 0 will be set to &quot;0&quot;.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[310]||(e[310]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/types.jl#L80-L92",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[310]})]),s("details",Ie,[s("summary",null,[e[312]||(e[312]=s("a",{id:"Makie.Pie",href:"#Makie.Pie"},[s("span",{class:"jlbinding"},"Makie.Pie")],-1)),e[313]||(e[313]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[315]||(e[315]=s("p",null,[s("code",null,"Pie"),o(" is the plot type associated with plotting function "),s("code",null,"pie"),o(". Check the docstring for "),s("code",null,"pie"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[314]||(e[314]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[314]})]),s("details",Oe,[s("summary",null,[e[316]||(e[316]=s("a",{id:"Makie.Pixel",href:"#Makie.Pixel"},[s("span",{class:"jlbinding"},"Makie.Pixel")],-1)),e[317]||(e[317]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[319]||(e[319]=s("p",null,[o("Unit in pixels on screen. This one is a bit tricky, since it refers to a static attribute (pixels on screen don't change) but since every visual is attached to a camera, the exact scale might change. So in the end, this is just relative to some normed camera - the value on screen, depending on the camera, will not actually sit on those pixels. Only camera that guarantees the correct mapping is the "),s("code",null,":pixel"),o(" camera type.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[318]||(e[318]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/coretypes.jl#L109-L116",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[318]})]),s("details",Ve,[s("summary",null,[e[320]||(e[320]=s("a",{id:"Makie.Plot",href:"#Makie.Plot"},[s("span",{class:"jlbinding"},"Makie.Plot")],-1)),e[321]||(e[321]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[323]||(e[323]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Plot{PlotFunc}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a Plot corresponding to the recipe function <code>PlotFunc</code>. Each recipe defines an alias for <code>Plot{PlotFunc}</code>. Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scatter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plot{scatter} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># defined in the scatter recipe</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Plot{scatter}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scatter</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Same as:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol, Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[322]||(e[322]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/coretypes.jl#L53-L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[322]})]),s("details",Ne,[s("summary",null,[e[324]||(e[324]=s("a",{id:"Makie.Plot-Union{NTuple{N, DataType}, Tuple{N}} where N",href:"#Makie.Plot-Union{NTuple{N, DataType}, Tuple{N}} where N"},[s("span",{class:"jlbinding"},"Makie.Plot")],-1)),e[325]||(e[325]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[327]||(e[327]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vararg{DataType,N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the Plot type that represents the signature of <code>args</code>. Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Vector{Point2f}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Plot{plot, Tuple{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Point2f}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}</span></span></code></pre></div><p>This can be used to more conveniently create recipes for <code>plot(mytype)</code> without the recipe macro:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MyType))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[326]||(e[326]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L638-L658",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[326]})]),s("details",Re,[s("summary",null,[e[328]||(e[328]=s("a",{id:"Makie.PlotSpec",href:"#Makie.PlotSpec"},[s("span",{class:"jlbinding"},"Makie.PlotSpec")],-1)),e[329]||(e[329]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[331]||(e[331]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PlotSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plottype, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Object encoding positional arguments (<code>args</code>), a <code>NamedTuple</code> of attributes (<code>kwargs</code>) as well as plot type <code>P</code> of a basic plot.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[330]||(e[330]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/specapi.jl#L14-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[330]})]),s("details",ze,[s("summary",null,[e[332]||(e[332]=s("a",{id:"Makie.PointBased",href:"#Makie.PointBased"},[s("span",{class:"jlbinding"},"Makie.PointBased")],-1)),e[333]||(e[333]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[335]||(e[335]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PointBased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConversionTrait</span></span></code></pre></div><p>Plots with the <code>PointBased</code> trait convert their input data to a <code>Vector{Point{D, Float32}}</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[334]||(e[334]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L31-L36",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[334]})]),s("details",qe,[s("summary",null,[e[336]||(e[336]=s("a",{id:"Makie.PointLight",href:"#Makie.PointLight"},[s("span",{class:"jlbinding"},"Makie.PointLight")],-1)),e[337]||(e[337]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[339]||(e[339]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PointLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, position[, attenuation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PointLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, position, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A point-like light source placed at the given <code>position</code> with the given light <code>color</code>.</p><p>Optionally an attenuation parameter can be used to reduce the brightness of the light source with distance. The reduction is given by <code>1 / (1 + attenuation[1] * distance + attenuation[2] * distance^2)</code>. Alternatively you can pass a light <code>range</code> to generate matching default attenuation parameters. Note that you may need to set the light intensity, i.e. the light color to values greater than 1 to get satisfying results.</p><p>Availability:</p><ul><li><p>GLMakie with <code>shading = MultiLightShading</code></p></li><li><p>RPRMakie</p></li></ul>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[338]||(e[338]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L33-L50",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[338]})]),s("details",Ge,[s("summary",null,[e[340]||(e[340]=s("a",{id:"Makie.PolarAxis",href:"#Makie.PolarAxis"},[s("span",{class:"jlbinding"},"Makie.PolarAxis")],-1)),e[341]||(e[341]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[343]||(e[343]=n("<p><strong><code>Makie.PolarAxis &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.PolarAxis.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>axis_rotation_button</code>, <code>backgroundcolor</code>, <code>clip</code>, <code>clip_r</code>, <code>clipcolor</code>, <code>dim1_conversion</code>, <code>dim2_conversion</code>, <code>direction</code>, <code>fixrmin</code>, <code>gridz</code>, <code>halign</code>, <code>height</code>, <code>normalize_theta_ticks</code>, <code>r_translation_button</code>, <code>radius_at_origin</code>, <code>rautolimitmargin</code>, <code>reset_axis_orientation</code>, <code>reset_button</code>, <code>rgridcolor</code>, <code>rgridstyle</code>, <code>rgridvisible</code>, <code>rgridwidth</code>, <code>rlimits</code>, <code>rminorgridcolor</code>, <code>rminorgridstyle</code>, <code>rminorgridvisible</code>, <code>rminorgridwidth</code>, <code>rminortickalign</code>, <code>rminortickcolor</code>, <code>rminorticks</code>, <code>rminorticksize</code>, <code>rminorticksvisible</code>, <code>rminortickwidth</code>, <code>rtickalign</code>, <code>rtickangle</code>, <code>rtickcolor</code>, <code>rtickformat</code>, <code>rticklabelcolor</code>, <code>rticklabelfont</code>, <code>rticklabelpad</code>, <code>rticklabelrotation</code>, <code>rticklabelsize</code>, <code>rticklabelstrokecolor</code>, <code>rticklabelstrokewidth</code>, <code>rticklabelsvisible</code>, <code>rticks</code>, <code>rticksize</code>, <code>rticksmirrored</code>, <code>rticksvisible</code>, <code>rtickwidth</code>, <code>rzoomkey</code>, <code>rzoomlock</code>, <code>sample_density</code>, <code>spinecolor</code>, <code>spinestyle</code>, <code>spinevisible</code>, <code>spinewidth</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>theta_0</code>, <code>theta_as_x</code>, <code>theta_translation_button</code>, <code>thetaautolimitmargin</code>, <code>thetagridcolor</code>, <code>thetagridstyle</code>, <code>thetagridvisible</code>, <code>thetagridwidth</code>, <code>thetalimits</code>, <code>thetaminorgridcolor</code>, <code>thetaminorgridstyle</code>, <code>thetaminorgridvisible</code>, <code>thetaminorgridwidth</code>, <code>thetaminortickalign</code>, <code>thetaminortickcolor</code>, <code>thetaminorticks</code>, <code>thetaminorticksize</code>, <code>thetaminorticksvisible</code>, <code>thetaminortickwidth</code>, <code>thetatickalign</code>, <code>thetatickcolor</code>, <code>thetatickformat</code>, <code>thetaticklabelcolor</code>, <code>thetaticklabelfont</code>, <code>thetaticklabelpad</code>, <code>thetaticklabelsize</code>, <code>thetaticklabelstrokecolor</code>, <code>thetaticklabelstrokewidth</code>, <code>thetaticklabelsvisible</code>, <code>thetaticks</code>, <code>thetaticksize</code>, <code>thetaticksmirrored</code>, <code>thetaticksvisible</code>, <code>thetatickwidth</code>, <code>thetazoomkey</code>, <code>thetazoomlock</code>, <code>title</code>, <code>titlealign</code>, <code>titlecolor</code>, <code>titlefont</code>, <code>titlegap</code>, <code>titlesize</code>, <code>titlevisible</code>, <code>valign</code>, <code>width</code>, <code>zoomspeed</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[342]||(e[342]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[342]})]),s("details",Ue,[s("summary",null,[e[344]||(e[344]=s("a",{id:"Makie.Poly",href:"#Makie.Poly"},[s("span",{class:"jlbinding"},"Makie.Poly")],-1)),e[345]||(e[345]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[347]||(e[347]=s("p",null,[s("code",null,"Poly"),o(" is the plot type associated with plotting function "),s("code",null,"poly"),o(". Check the docstring for "),s("code",null,"poly"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[346]||(e[346]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[346]})]),s("details",He,[s("summary",null,[e[348]||(e[348]=s("a",{id:"Makie.QQNorm",href:"#Makie.QQNorm"},[s("span",{class:"jlbinding"},"Makie.QQNorm")],-1)),e[349]||(e[349]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[351]||(e[351]=s("p",null,[s("code",null,"QQNorm"),o(" is the plot type associated with plotting function "),s("code",null,"qqnorm"),o(". Check the docstring for "),s("code",null,"qqnorm"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[350]||(e[350]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[350]})]),s("details",We,[s("summary",null,[e[352]||(e[352]=s("a",{id:"Makie.QQPlot",href:"#Makie.QQPlot"},[s("span",{class:"jlbinding"},"Makie.QQPlot")],-1)),e[353]||(e[353]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[355]||(e[355]=s("p",null,[s("code",null,"QQPlot"),o(" is the plot type associated with plotting function "),s("code",null,"qqplot"),o(". Check the docstring for "),s("code",null,"qqplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[354]||(e[354]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[354]})]),s("details",Ye,[s("summary",null,[e[356]||(e[356]=s("a",{id:"Makie.RainClouds",href:"#Makie.RainClouds"},[s("span",{class:"jlbinding"},"Makie.RainClouds")],-1)),e[357]||(e[357]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[359]||(e[359]=s("p",null,[s("code",null,"RainClouds"),o(" is the plot type associated with plotting function "),s("code",null,"rainclouds"),o(". Check the docstring for "),s("code",null,"rainclouds"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[358]||(e[358]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[358]})]),s("details",Ke,[s("summary",null,[e[360]||(e[360]=s("a",{id:"Makie.Rangebars",href:"#Makie.Rangebars"},[s("span",{class:"jlbinding"},"Makie.Rangebars")],-1)),e[361]||(e[361]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[363]||(e[363]=s("p",null,[s("code",null,"Rangebars"),o(" is the plot type associated with plotting function "),s("code",null,"rangebars"),o(". Check the docstring for "),s("code",null,"rangebars"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[362]||(e[362]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[362]})]),s("details",Qe,[s("summary",null,[e[364]||(e[364]=s("a",{id:"Makie.RectLight",href:"#Makie.RectLight"},[s("span",{class:"jlbinding"},"Makie.RectLight")],-1)),e[365]||(e[365]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[367]||(e[367]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rect2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">normal])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vec3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vec3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">normal])</span></span></code></pre></div><p>Creates a RectLight with a given color. The first constructor derives the light from a <code>Rect2</code> extending in x and y directions. The second specifies the <code>center</code> of the rect (or more accurately parallelogram) with <code>b1</code> and <code>b2</code> specifying the width and height vectors (including scale).</p><p>Note that RectLight implements <code>translate!</code>, <code>rotate!</code> and <code>scale!</code> to simplify adjusting the light.</p><p>Availability:</p><ul><li>GLMakie with <code>Shading = MultiLightShading</code></li></ul>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[366]||(e[366]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L141-L155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[366]})]),s("details",$e,[s("summary",null,[e[368]||(e[368]=s("a",{id:"Makie.Resampler",href:"#Makie.Resampler"},[s("span",{class:"jlbinding"},"Makie.Resampler")],-1)),e[369]||(e[369]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[371]||(e[371]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Resampler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(matrix; max_resolution</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">automatic, method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Interpolations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Linear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), update_while_button_pressed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a resampling type which can be used with <code>heatmap</code>, to display large images/heatmaps. Passed can be any array that supports <code>array(linrange, linrange)</code>, as the interpolation interface from Interpolations.jl. If the array doesn&#39;t support this, it will be converted to an interpolation object via: <code>Interpolations.interpolate(data, Interpolations.BSpline(method))</code>.</p><ul><li><p><code>max_resolution</code> can be set to <code>automatic</code> to use the full resolution of the screen, or a tuple/integer of the desired resolution.</p></li><li><p><code>method</code> is the interpolation method used, defaulting to <code>Interpolations.Linear()</code>.</p></li><li><p><code>update_while_button_pressed</code> will update the heatmap while a mouse button is pressed, useful for zooming/panning. Set it to false for e.g. WGLMakie to avoid updating while dragging.</p></li><li><p><code>lowres_background</code> will always show a low resolution background while the high resolution image is being calculated.</p></li></ul>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[370]||(e[370]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/datashader.jl#L519-L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[370]})]),s("details",Xe,[s("summary",null,[e[372]||(e[372]=s("a",{id:"Makie.Reverse",href:"#Makie.Reverse"},[s("span",{class:"jlbinding"},"Makie.Reverse")],-1)),e[373]||(e[373]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[375]||(e[375]=s("p",null,"Reverses the attribute T upon conversion",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[374]||(e[374]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1591-L1593",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[374]})]),s("details",Je,[s("summary",null,[e[376]||(e[376]=s("a",{id:"Makie.ReversibleScale",href:"#Makie.ReversibleScale"},[s("span",{class:"jlbinding"},"Makie.ReversibleScale")],-1)),e[377]||(e[377]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[379]||(e[379]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReversibleScale</span></span></code></pre></div><p>Custom scale struct, taking a forward and inverse arbitrary scale function.</p><p><strong>Fields</strong></p><ul><li><p><code>forward::Function</code>: forward transformation (e.g. <code>log10</code>)</p></li><li><p><code>inverse::Function</code>: inverse transformation (e.g. <code>exp10</code> for <code>log10</code> such that inverse ∘ forward ≡ identity)</p></li><li><p><code>limits::Tuple{Float32, Float32}</code>: default limits (optional)</p></li><li><p><code>interval::IntervalSets.AbstractInterval</code>: valid limits interval (optional)</p></li><li><p><code>name::Symbol</code></p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[378]||(e[378]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/types.jl#L508-L515",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[378]})]),s("details",Ze,[s("summary",null,[e[380]||(e[380]=s("a",{id:"Makie.Scatter",href:"#Makie.Scatter"},[s("span",{class:"jlbinding"},"Makie.Scatter")],-1)),e[381]||(e[381]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[383]||(e[383]=s("p",null,[s("code",null,"Scatter"),o(" is the plot type associated with plotting function "),s("code",null,"scatter"),o(". Check the docstring for "),s("code",null,"scatter"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[382]||(e[382]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[382]})]),s("details",es,[s("summary",null,[e[384]||(e[384]=s("a",{id:"Makie.ScatterLines",href:"#Makie.ScatterLines"},[s("span",{class:"jlbinding"},"Makie.ScatterLines")],-1)),e[385]||(e[385]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[387]||(e[387]=s("p",null,[s("code",null,"ScatterLines"),o(" is the plot type associated with plotting function "),s("code",null,"scatterlines"),o(". Check the docstring for "),s("code",null,"scatterlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[386]||(e[386]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[386]})]),s("details",ss,[s("summary",null,[e[388]||(e[388]=s("a",{id:"Makie.Scene",href:"#Makie.Scene"},[s("span",{class:"jlbinding"},"Makie.Scene")],-1)),e[389]||(e[389]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[391]||(e[391]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scene TODO document this</span></span></code></pre></div><p><strong>Constructors</strong></p><p><strong>Fields</strong></p><ul><li><p><code>parent</code>: The parent of the Scene; if it is a top-level Scene, <code>parent == nothing</code>.</p></li><li><p><code>events</code>: <a href="/stable/api#Makie.Events"><code>Events</code></a> associated with the Scene.</p></li><li><p><code>viewport</code>: The current pixel area of the Scene.</p></li><li><p><code>clear</code>: Whether the scene should be cleared.</p></li><li><p><code>camera</code>: The <code>Camera</code> associated with the Scene.</p></li><li><p><code>camera_controls</code>: The controls for the camera of the Scene.</p></li><li><p><code>transformation</code>: The <a href="/stable/api#Makie.Transformation"><code>Transformation</code></a> of the Scene.</p></li><li><p><code>float32convert</code>: A transformation rescaling data to a Float32-save range.</p></li><li><p><code>plots</code>: The plots contained in the Scene.</p></li><li><p><code>theme</code></p></li><li><p><code>children</code>: Children of the Scene inherit its transformation.</p></li><li><p><code>current_screens</code>: The Screens which the Scene is displayed to.</p></li><li><p><code>backgroundcolor</code></p></li><li><p><code>visible</code></p></li><li><p><code>ssao</code></p></li><li><p><code>deregister_callbacks</code></p></li><li><p><code>compute</code></p></li><li><p><code>conversions</code></p></li><li><p><code>isclosed</code></p></li><li><p><code>data_inspector</code></p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[390]||(e[390]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/scenes.jl#L40-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[390]})]),s("details",ts,[s("summary",null,[e[392]||(e[392]=s("a",{id:"Makie.SceneSpace",href:"#Makie.SceneSpace"},[s("span",{class:"jlbinding"},"Makie.SceneSpace")],-1)),e[393]||(e[393]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[395]||(e[395]=s("p",null,"Unit space of the scene it's displayed on. Also referred to as data units",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[394]||(e[394]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/units.jl#L31-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[394]})]),s("details",is,[s("summary",null,[e[396]||(e[396]=s("a",{id:"Makie.Series",href:"#Makie.Series"},[s("span",{class:"jlbinding"},"Makie.Series")],-1)),e[397]||(e[397]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[399]||(e[399]=s("p",null,[s("code",null,"Series"),o(" is the plot type associated with plotting function "),s("code",null,"series"),o(". Check the docstring for "),s("code",null,"series"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[398]||(e[398]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[398]})]),s("details",os,[s("summary",null,[e[400]||(e[400]=s("a",{id:"Makie.Slider",href:"#Makie.Slider"},[s("span",{class:"jlbinding"},"Makie.Slider")],-1)),e[401]||(e[401]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[403]||(e[403]=n("<p><strong><code>Makie.Slider &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Slider.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>color_active</code>, <code>color_active_dimmed</code>, <code>color_inactive</code>, <code>halign</code>, <code>height</code>, <code>horizontal</code>, <code>linewidth</code>, <code>range</code>, <code>snap</code>, <code>startvalue</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>update_while_dragging</code>, <code>valign</code>, <code>value</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[402]||(e[402]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[402]})]),s("details",as,[s("summary",null,[e[404]||(e[404]=s("a",{id:"Makie.SliderGrid",href:"#Makie.SliderGrid"},[s("span",{class:"jlbinding"},"Makie.SliderGrid")],-1)),e[405]||(e[405]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[407]||(e[407]=n(`<p><strong><code>Makie.SliderGrid &lt;: Block</code></strong></p><p>A grid of one or more horizontal <code>Slider</code>s, where each slider has a name label on the left and a value label on the right.</p><p>Each <code>NamedTuple</code> you pass specifies one <code>Slider</code>. You always have to pass <code>range</code> and <code>label</code>, and optionally a <code>format</code> for the value label. Beyond that, you can set any keyword that <code>Slider</code> takes, such as <code>startvalue</code>.</p><p>The <code>format</code> keyword can be a <code>String</code> with Format.jl style, such as &quot;{:.2f}Hz&quot;, or a function.</p><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SliderGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene, nts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SliderGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Amplitude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, startvalue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Frequency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{:.1f}Hz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, startvalue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Phase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, digits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;π&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Working with slider values:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sliders[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> val</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # do something with \`val\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Attributes</strong></p><p>(type <code>?Makie.SliderGrid.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>halign</code>, <code>height</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>valign</code>, <code>value_column_width</code>, <code>width</code></p>`,13)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[406]||(e[406]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L158",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[406]})]),s("details",ns,[s("summary",null,[e[408]||(e[408]=s("a",{id:"Makie.SpotLight",href:"#Makie.SpotLight"},[s("span",{class:"jlbinding"},"Makie.SpotLight")],-1)),e[409]||(e[409]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[411]||(e[411]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpotLight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, position, direction, angles)</span></span></code></pre></div><p>Creates a spot light which illuminates objects in a light cone starting at <code>position</code> pointing in <code>direction</code>. The opening angle is defined by an inner and outer angle given in <code>angles</code>, between which the light intensity drops off.</p><p>Availability:</p><ul><li><p>GLMakie with <code>shading = MultiLightShading</code></p></li><li><p>RPRMakie</p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[410]||(e[410]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L105-L115",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[410]})]),s("details",ls,[s("summary",null,[e[412]||(e[412]=s("a",{id:"Makie.Spy",href:"#Makie.Spy"},[s("span",{class:"jlbinding"},"Makie.Spy")],-1)),e[413]||(e[413]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[415]||(e[415]=s("p",null,[s("code",null,"Spy"),o(" is the plot type associated with plotting function "),s("code",null,"spy"),o(". Check the docstring for "),s("code",null,"spy"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[414]||(e[414]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[414]})]),s("details",ds,[s("summary",null,[e[416]||(e[416]=s("a",{id:"Makie.Stairs",href:"#Makie.Stairs"},[s("span",{class:"jlbinding"},"Makie.Stairs")],-1)),e[417]||(e[417]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[419]||(e[419]=s("p",null,[s("code",null,"Stairs"),o(" is the plot type associated with plotting function "),s("code",null,"stairs"),o(". Check the docstring for "),s("code",null,"stairs"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[418]||(e[418]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[418]})]),s("details",rs,[s("summary",null,[e[420]||(e[420]=s("a",{id:"Makie.Stem",href:"#Makie.Stem"},[s("span",{class:"jlbinding"},"Makie.Stem")],-1)),e[421]||(e[421]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[423]||(e[423]=s("p",null,[s("code",null,"Stem"),o(" is the plot type associated with plotting function "),s("code",null,"stem"),o(". Check the docstring for "),s("code",null,"stem"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[422]||(e[422]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[422]})]),s("details",cs,[s("summary",null,[e[424]||(e[424]=s("a",{id:"Makie.StepHist",href:"#Makie.StepHist"},[s("span",{class:"jlbinding"},"Makie.StepHist")],-1)),e[425]||(e[425]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[427]||(e[427]=s("p",null,[s("code",null,"StepHist"),o(" is the plot type associated with plotting function "),s("code",null,"stephist"),o(". Check the docstring for "),s("code",null,"stephist"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[426]||(e[426]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[426]})]),s("details",ps,[s("summary",null,[e[428]||(e[428]=s("a",{id:"Makie.StreamPlot",href:"#Makie.StreamPlot"},[s("span",{class:"jlbinding"},"Makie.StreamPlot")],-1)),e[429]||(e[429]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[431]||(e[431]=s("p",null,[s("code",null,"StreamPlot"),o(" is the plot type associated with plotting function "),s("code",null,"streamplot"),o(". Check the docstring for "),s("code",null,"streamplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[430]||(e[430]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[430]})]),s("details",hs,[s("summary",null,[e[432]||(e[432]=s("a",{id:"Makie.Surface",href:"#Makie.Surface"},[s("span",{class:"jlbinding"},"Makie.Surface")],-1)),e[433]||(e[433]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[435]||(e[435]=s("p",null,[s("code",null,"Surface"),o(" is the plot type associated with plotting function "),s("code",null,"surface"),o(". Check the docstring for "),s("code",null,"surface"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[434]||(e[434]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[434]})]),s("details",ks,[s("summary",null,[e[436]||(e[436]=s("a",{id:"Makie.Text",href:"#Makie.Text"},[s("span",{class:"jlbinding"},"Makie.Text")],-1)),e[437]||(e[437]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[439]||(e[439]=s("p",null,[s("code",null,"Text"),o(" is the plot type associated with plotting function "),s("code",null,"text"),o(". Check the docstring for "),s("code",null,"text"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[438]||(e[438]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[438]})]),s("details",gs,[s("summary",null,[e[440]||(e[440]=s("a",{id:"Makie.TextLabel",href:"#Makie.TextLabel"},[s("span",{class:"jlbinding"},"Makie.TextLabel")],-1)),e[441]||(e[441]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[443]||(e[443]=s("p",null,[s("code",null,"TextLabel"),o(" is the plot type associated with plotting function "),s("code",null,"textlabel"),o(". Check the docstring for "),s("code",null,"textlabel"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[442]||(e[442]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[442]})]),s("details",us,[s("summary",null,[e[444]||(e[444]=s("a",{id:"Makie.Textbox",href:"#Makie.Textbox"},[s("span",{class:"jlbinding"},"Makie.Textbox")],-1)),e[445]||(e[445]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[447]||(e[447]=n("<p><strong><code>Makie.Textbox &lt;: Block</code></strong></p><p>No docstring defined.</p><p><strong>Attributes</strong></p><p>(type <code>?Makie.Textbox.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>alignmode</code>, <code>bordercolor</code>, <code>bordercolor_focused</code>, <code>bordercolor_focused_invalid</code>, <code>bordercolor_hover</code>, <code>borderwidth</code>, <code>boxcolor</code>, <code>boxcolor_focused</code>, <code>boxcolor_focused_invalid</code>, <code>boxcolor_hover</code>, <code>cornerradius</code>, <code>cornersegments</code>, <code>cursorcolor</code>, <code>defocus_on_submit</code>, <code>displayed_string</code>, <code>focused</code>, <code>font</code>, <code>fontsize</code>, <code>halign</code>, <code>height</code>, <code>placeholder</code>, <code>reset_on_defocus</code>, <code>restriction</code>, <code>stored_string</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>textcolor</code>, <code>textcolor_placeholder</code>, <code>textpadding</code>, <code>validator</code>, <code>valign</code>, <code>width</code></p>",5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[446]||(e[446]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[446]})]),s("details",bs,[s("summary",null,[e[448]||(e[448]=s("a",{id:"Makie.TimeSeries",href:"#Makie.TimeSeries"},[s("span",{class:"jlbinding"},"Makie.TimeSeries")],-1)),e[449]||(e[449]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[451]||(e[451]=s("p",null,[s("code",null,"TimeSeries"),o(" is the plot type associated with plotting function "),s("code",null,"timeseries"),o(". Check the docstring for "),s("code",null,"timeseries"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[450]||(e[450]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[450]})]),s("details",ys,[s("summary",null,[e[452]||(e[452]=s("a",{id:"Makie.Toggle",href:"#Makie.Toggle"},[s("span",{class:"jlbinding"},"Makie.Toggle")],-1)),e[453]||(e[453]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[455]||(e[455]=n(`<p><strong><code>Makie.Toggle &lt;: Block</code></strong></p><p>A switch with two states.</p><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig_or_scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t_horizontal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t_vertical </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], orientation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :vertical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t_diagonal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], orientation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t_vertical</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">active) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> switch_is_on</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    switch_is_on </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;good morning!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;good night&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Attributes</strong></p><p>(type <code>?Makie.Toggle.x</code> in the REPL for more information about attribute <code>x</code>)</p><p><code>active</code>, <code>alignmode</code>, <code>buttoncolor</code>, <code>cornersegments</code>, <code>framecolor_active</code>, <code>framecolor_inactive</code>, <code>halign</code>, <code>height</code>, <code>length</code>, <code>markersize</code>, <code>orientation</code>, <code>rimfraction</code>, <code>tellheight</code>, <code>tellwidth</code>, <code>toggleduration</code>, <code>valign</code>, <code>width</code></p>`,9)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[454]||(e[454]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks.jl#L118-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[454]})]),s("details",fs,[s("summary",null,[e[456]||(e[456]=s("a",{id:"Makie.Tooltip",href:"#Makie.Tooltip"},[s("span",{class:"jlbinding"},"Makie.Tooltip")],-1)),e[457]||(e[457]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[459]||(e[459]=s("p",null,[s("code",null,"Tooltip"),o(" is the plot type associated with plotting function "),s("code",null,"tooltip"),o(". Check the docstring for "),s("code",null,"tooltip"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[458]||(e[458]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[458]})]),s("details",ms,[s("summary",null,[e[460]||(e[460]=s("a",{id:"Makie.Transformation",href:"#Makie.Transformation"},[s("span",{class:"jlbinding"},"Makie.Transformation")],-1)),e[461]||(e[461]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[463]||(e[463]=n("<p>Holds the transformations for Scenes.</p><p><strong>Fields</strong></p><ul><li><p><code>parent::Base.RefValue{Transformation}</code></p></li><li><p><code>translation::Observable{Vec{3, Float64}}</code></p></li><li><p><code>scale::Observable{Vec{3, Float64}}</code></p></li><li><p><code>rotation::Observable{Quaternionf}</code></p></li><li><p><code>origin::Observable{Vec{3, Float64}}</code></p></li><li><p><code>model::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code></p></li><li><p><code>parent_model::Observable{StaticArraysCore.SMatrix{4, 4, Float64, 16}}</code></p></li><li><p><code>transform_func::Observable{Any}</code></p></li></ul>",3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[462]||(e[462]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/types.jl#L317-L321",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[462]})]),s("details",Es,[s("summary",null,[e[464]||(e[464]=s("a",{id:"Makie.Tricontourf",href:"#Makie.Tricontourf"},[s("span",{class:"jlbinding"},"Makie.Tricontourf")],-1)),e[465]||(e[465]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[467]||(e[467]=s("p",null,[s("code",null,"Tricontourf"),o(" is the plot type associated with plotting function "),s("code",null,"tricontourf"),o(". Check the docstring for "),s("code",null,"tricontourf"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[466]||(e[466]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[466]})]),s("details",vs,[s("summary",null,[e[468]||(e[468]=s("a",{id:"Makie.Triplot",href:"#Makie.Triplot"},[s("span",{class:"jlbinding"},"Makie.Triplot")],-1)),e[469]||(e[469]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[471]||(e[471]=s("p",null,[s("code",null,"Triplot"),o(" is the plot type associated with plotting function "),s("code",null,"triplot"),o(". Check the docstring for "),s("code",null,"triplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[470]||(e[470]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[470]})]),s("details",_s,[s("summary",null,[e[472]||(e[472]=s("a",{id:"Makie.VLines",href:"#Makie.VLines"},[s("span",{class:"jlbinding"},"Makie.VLines")],-1)),e[473]||(e[473]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[475]||(e[475]=s("p",null,[s("code",null,"VLines"),o(" is the plot type associated with plotting function "),s("code",null,"vlines"),o(". Check the docstring for "),s("code",null,"vlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[474]||(e[474]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[474]})]),s("details",Ts,[s("summary",null,[e[476]||(e[476]=s("a",{id:"Makie.VSpan",href:"#Makie.VSpan"},[s("span",{class:"jlbinding"},"Makie.VSpan")],-1)),e[477]||(e[477]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[479]||(e[479]=s("p",null,[s("code",null,"VSpan"),o(" is the plot type associated with plotting function "),s("code",null,"vspan"),o(". Check the docstring for "),s("code",null,"vspan"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[478]||(e[478]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[478]})]),s("details",js,[s("summary",null,[e[480]||(e[480]=s("a",{id:"Makie.VertexGrid",href:"#Makie.VertexGrid"},[s("span",{class:"jlbinding"},"Makie.VertexGrid")],-1)),e[481]||(e[481]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[483]||(e[483]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VertexGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GridBased</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConversionTrait</span></span></code></pre></div><p>Plots with the <code>VertexGrid</code> trait convert their input data to <code>(xs::Vector{Float32}, ys::Vector{Float32}, zs::Matrix{Float32})</code> such that <code>(length(xs), length(ys)) == size(zs)</code>, or <code>(xs::Matrix{Float32}, ys::Matrix{Float32}, zs::Matrix{Float32})</code> such that <code>size(xs) == size(ys) == size(zs)</code>.</p><p>See also: <a href="/stable/api#Makie.CellGrid"><code>CellGrid</code></a>, <a href="/stable/api#Makie.ImageLike"><code>ImageLike</code></a> Used for: Surface</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[482]||(e[482]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L51-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[482]})]),s("details",Ms,[s("summary",null,[e[484]||(e[484]=s("a",{id:"Makie.VideoStream-Tuple{Union{Figure, Makie.FigureAxisPlot, Scene}}",href:"#Makie.VideoStream-Tuple{Union{Figure, Makie.FigureAxisPlot, Scene}}"},[s("span",{class:"jlbinding"},"Makie.VideoStream")],-1)),e[485]||(e[485]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[487]||(e[487]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VideoStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FigureLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, framerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, compression</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, profile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pixel_format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, loop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        loglevel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;quiet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, visible</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, connect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, filter_ticks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        screen_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a <code>VideoStream</code> which can pipe new frames into the ffmpeg process with few allocations via <a href="/stable/api#Makie.recordframe!-Tuple{VideoStream}"><code>recordframe!(stream)</code></a>. When done, use <a href="/stable/api#FileIO.save-Tuple{String, Union{Figure, Makie.FigureAxisPlot, Scene}}"><code>save(path, stream)</code></a> to write the video out to a file.</p><p><strong>Arguments</strong></p><p><strong>Video options</strong></p><ul><li><p><code>format = &quot;mkv&quot;</code>: The format of the video. If a path is present, will be inferred from the file extension. Can be one of the following:</p><ul><li><p><code>&quot;mkv&quot;</code> (open standard, the default)</p></li><li><p><code>&quot;mp4&quot;</code> (good for Web, most supported format)</p></li><li><p><code>&quot;webm&quot;</code> (smallest file size)</p></li><li><p><code>&quot;gif&quot;</code> (largest file size for the same quality)</p></li></ul><p><code>mp4</code> and <code>mk4</code> are marginally bigger than <code>webm</code>. <code>gif</code>s can be significantly (as much as 6x) larger with worse quality (due to the limited color palette) and only should be used as a last resort, for playing in a context where videos aren&#39;t supported.</p></li><li><p><code>framerate = 24</code>: The target framerate.</p></li><li><p><code>compression = 20</code>: Controls the video compression via <code>ffmpeg</code>&#39;s <code>-crf</code> option, with smaller numbers giving higher quality and larger file sizes (lower compression), and higher numbers giving lower quality and smaller file sizes (higher compression). The minimum value is <code>0</code> (lossless encoding).</p><ul><li><p>For <code>mp4</code>, <code>51</code> is the maximum. Note that <code>compression = 0</code> only works with <code>mp4</code> if <code>profile = &quot;high444&quot;</code>.</p></li><li><p>For <code>webm</code>, <code>63</code> is the maximum.</p></li><li><p><code>compression</code> has no effect on <code>mkv</code> and <code>gif</code> outputs.</p></li></ul></li><li><p><code>profile = &quot;high422&quot;</code>: A ffmpeg compatible profile. Currently only applies to <code>mp4</code>. If you have issues playing a video, try <code>profile = &quot;high&quot;</code> or <code>profile = &quot;main&quot;</code>.</p></li><li><p><code>pixel_format = &quot;yuv420p&quot;</code>: A ffmpeg compatible pixel format (<code>-pix_fmt</code>). Currently only applies to <code>mp4</code>. Defaults to <code>yuv444p</code> for <code>profile = &quot;high444&quot;</code>.</p></li><li><p><code>loop = 0</code>: Number of times the video is repeated, for a <code>gif</code> or <code>html</code> output. Defaults to <code>0</code>, which means infinite looping. A value of <code>-1</code> turns off looping, and a value of <code>n &gt; 0</code> means <code>n</code> repetitions (i.e. the video is played <code>n+1</code> times) when supported by backend.</p></li></ul><div class="warning custom-block"><p class="custom-block-title">Warning</p><p><code>profile</code> and <code>pixel_format</code> are only used when <code>format</code> is <code>&quot;mp4&quot;</code>; a warning will be issued if <code>format</code> is not <code>&quot;mp4&quot;</code> and those two arguments are not <code>nothing</code>. Similarly, <code>compression</code> is only valid when <code>format</code> is <code>&quot;mp4&quot;</code> or <code>&quot;webm&quot;</code>.</p></div><p><strong>Backend options</strong></p><ul><li><p><code>backend=current_backend()</code>: backend used to record frames</p></li><li><p><code>visible=false</code>: make window visible or not</p></li><li><p><code>connect=false</code>: connect window events or not</p></li><li><p><code>screen_config...</code>: See <code>?Backend.Screen</code> or <code>Base.doc(Backend.Screen)</code> for applicable options that can be passed and forwarded to the backend.</p></li></ul><p><strong>Other</strong></p><ul><li><code>filter_ticks</code>: When true, tick events other than <code>tick.state = Makie.OneTimeRenderTick</code> are removed until <code>save()</code> is called or the VideoStream object gets deleted.</li></ul>`,10)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[486]||(e[486]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/ffmpeg-util.jl#L232-L257",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[486]})]),s("details",Cs,[s("summary",null,[e[488]||(e[488]=s("a",{id:"Makie.Violin",href:"#Makie.Violin"},[s("span",{class:"jlbinding"},"Makie.Violin")],-1)),e[489]||(e[489]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[491]||(e[491]=s("p",null,[s("code",null,"Violin"),o(" is the plot type associated with plotting function "),s("code",null,"violin"),o(". Check the docstring for "),s("code",null,"violin"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[490]||(e[490]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[490]})]),s("details",Fs,[s("summary",null,[e[492]||(e[492]=s("a",{id:"Makie.Volume",href:"#Makie.Volume"},[s("span",{class:"jlbinding"},"Makie.Volume")],-1)),e[493]||(e[493]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[495]||(e[495]=s("p",null,[s("code",null,"Volume"),o(" is the plot type associated with plotting function "),s("code",null,"volume"),o(". Check the docstring for "),s("code",null,"volume"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[494]||(e[494]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[494]})]),s("details",ws,[s("summary",null,[e[496]||(e[496]=s("a",{id:"Makie.VolumeSlices",href:"#Makie.VolumeSlices"},[s("span",{class:"jlbinding"},"Makie.VolumeSlices")],-1)),e[497]||(e[497]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[499]||(e[499]=s("p",null,[s("code",null,"VolumeSlices"),o(" is the plot type associated with plotting function "),s("code",null,"volumeslices"),o(". Check the docstring for "),s("code",null,"volumeslices"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[498]||(e[498]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[498]})]),s("details",xs,[s("summary",null,[e[500]||(e[500]=s("a",{id:"Makie.Voronoiplot",href:"#Makie.Voronoiplot"},[s("span",{class:"jlbinding"},"Makie.Voronoiplot")],-1)),e[501]||(e[501]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[503]||(e[503]=s("p",null,[s("code",null,"Voronoiplot"),o(" is the plot type associated with plotting function "),s("code",null,"voronoiplot"),o(". Check the docstring for "),s("code",null,"voronoiplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[502]||(e[502]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[502]})]),s("details",As,[s("summary",null,[e[504]||(e[504]=s("a",{id:"Makie.Voxels",href:"#Makie.Voxels"},[s("span",{class:"jlbinding"},"Makie.Voxels")],-1)),e[505]||(e[505]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[507]||(e[507]=s("p",null,[s("code",null,"Voxels"),o(" is the plot type associated with plotting function "),s("code",null,"voxels"),o(". Check the docstring for "),s("code",null,"voxels"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[506]||(e[506]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[506]})]),s("details",Ss,[s("summary",null,[e[508]||(e[508]=s("a",{id:"Makie.Waterfall",href:"#Makie.Waterfall"},[s("span",{class:"jlbinding"},"Makie.Waterfall")],-1)),e[509]||(e[509]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[511]||(e[511]=s("p",null,[s("code",null,"Waterfall"),o(" is the plot type associated with plotting function "),s("code",null,"waterfall"),o(". Check the docstring for "),s("code",null,"waterfall"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[510]||(e[510]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[510]})]),s("details",Ds,[s("summary",null,[e[512]||(e[512]=s("a",{id:"Makie.WilkinsonTicks-Tuple{Int64}",href:"#Makie.WilkinsonTicks-Tuple{Int64}"},[s("span",{class:"jlbinding"},"Makie.WilkinsonTicks")],-1)),e[513]||(e[513]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[515]||(e[515]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WilkinsonTicks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    k_ideal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    k_min </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, k_max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    granularity_weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    simplicity_weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    coverage_weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    niceness_weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>WilkinsonTicks</code> is a thin wrapper over <code>PlotUtils.optimize_ticks</code>, the docstring of which is reproduced below:</p><p>optimize_ticks(xmin, xmax; extend_ticks::Bool = false, Q = [(1.0,1.0), (5.0, 0.9), (2.0, 0.7), (2.5, 0.5), (3.0, 0.2)], k_min = 2, k_max = 10, k_ideal = 5, granularity_weight = 1/4, simplicity_weight = 1/6, coverage_weight = 1/3, niceness_weight = 1/4, strict_span = true, span_buffer = nothing)</p><p>Find some reasonable values for tick marks.</p><p>This is basically Wilkinson&#39;s ad-hoc scoring method that tries to balance tight fit around the data, optimal number of ticks, and simple numbers.</p><p><strong>Arguments:</strong></p><ul><li><p><code>xmax</code>: The maximum value occurring in the data.</p></li><li><p><code>xmin</code>: The minimum value occurring in the data.</p></li><li><p><code>extend_ticks</code>: Determines whether to extend tick computation. Defaults to false.</p></li><li><p><code>strict_span</code>: True if no ticks should be outside [x_min, x_max]. Defaults to true.</p></li><li><p><code>Q</code>: A distribution of nice numbers from which labellings are sampled. Stored in the form (number, score).</p></li><li><p><code>k_min</code>: The minimum number of ticks.</p></li><li><p><code>k_max</code>: The maximum number of ticks.</p></li><li><p><code>k_ideal</code>: The ideal number of ticks.</p></li><li><p><code>granularity_weight</code>: Encourages returning roughly the number of labels requested.</p></li><li><p><code>simplicity_weight</code>: Encourages nicer labeling sequences by preferring step sizes that appear earlier in Q. Also rewards labelings that include 0 as a way to ground the sequence.</p></li><li><p><code>coverage_weight</code>: Encourages labelings that do not extend far beyond the range of the data, penalizing unnecessary whitespace.</p></li><li><p><code>niceness_weight</code>: Encourages labellings to produce nice ranges.</p></li></ul><p><strong>Returns:</strong></p><p><code>(ticklocations::Vector{Float64}, x_min, x_max)</code></p><p><strong>Mathematical details</strong></p><p>Wilkinson’s optimization function is defined as the sum of three components. If the user requests m labels and a possible labeling has k labels, then the components are <code>simplicity</code>, <code>coverage</code> and <code>granularity</code>.</p><p>These components are defined as follows:</p><p>$</p><p>\\begin{aligned} &amp;\\text{simplicity} = 1 - \\frac{i}{|Q|} + \\frac{v}{|Q|}<br> &amp;\\text{coverage} = \\frac{x_{max} - x_{min}}{\\mathrm{label}<em>{max} - \\mathrm{label}</em>{min}}<br> &amp;\\text{granularity}= 1 - \\frac{\\left|k - m\\right|}{m} \\end{aligned} $</p><p>and the variables here are:</p><ul><li><p><code>q</code>: element of <code>Q</code>.</p></li><li><p><code>i</code>: index of <code>q</code> ∈ <code>Q</code>.</p></li><li><p><code>v</code>: 1 if label range includes 0, 0 otherwise.</p></li></ul>`,16)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[514]||(e[514]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/ticklocators/wilkinson.jl#L1-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[514]})]),s("details",Bs,[s("summary",null,[e[516]||(e[516]=s("a",{id:"Makie.Wireframe",href:"#Makie.Wireframe"},[s("span",{class:"jlbinding"},"Makie.Wireframe")],-1)),e[517]||(e[517]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[519]||(e[519]=s("p",null,[s("code",null,"Wireframe"),o(" is the plot type associated with plotting function "),s("code",null,"wireframe"),o(". Check the docstring for "),s("code",null,"wireframe"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[518]||(e[518]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[518]})]),s("details",Ls,[s("summary",null,[e[520]||(e[520]=s("a",{id:"FileIO.save-Tuple{String, Union{Figure, Makie.FigureAxisPlot, Scene}}",href:"#FileIO.save-Tuple{String, Union{Figure, Makie.FigureAxisPlot, Scene}}"},[s("span",{class:"jlbinding"},"FileIO.save")],-1)),e[521]||(e[521]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[523]||(e[523]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileIO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename, scene; size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene), pt_per_unit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, px_per_unit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Save a <code>Scene</code> with the specified filename and format.</p><p><strong>Supported Formats</strong></p><ul><li><p><code>GLMakie</code>: <code>.png</code></p></li><li><p><code>CairoMakie</code>: <code>.svg</code>, <code>.pdf</code> and <code>.png</code></p></li><li><p><code>WGLMakie</code>: <code>.png</code></p></li></ul><p><strong>Supported Keyword Arguments</strong></p><p><strong>All Backends</strong></p><ul><li><p><code>size</code>: <code>(width::Int, height::Int)</code> of the scene in dimensionless units.</p></li><li><p><code>update</code>: Whether the figure should be updated before saving. This resets the limits of all Axes in the figure. Defaults to <code>true</code>.</p></li><li><p><code>backend</code>: Specify the <code>Makie</code> backend that should be used for saving. Defaults to the current backend.</p></li><li><p><code>px_per_unit</code>: The size of one scene unit in <code>px</code> when exporting to a bitmap format. This provides a mechanism to export the same scene with higher or lower resolution.</p></li><li><p>Further keywords will be forwarded to the screen.</p></li></ul><p><strong>CairoMakie</strong></p><ul><li><code>pt_per_unit</code>: The size of one scene unit in <code>pt</code> when exporting to a vector format.</li></ul>',9)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[522]||(e[522]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/display.jl#L277-L302",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[522]})]),s("details",Ps,[s("summary",null,[e[524]||(e[524]=s("a",{id:"FileIO.save-Tuple{String, VideoStream}",href:"#FileIO.save-Tuple{String, VideoStream}"},[s("span",{class:"jlbinding"},"FileIO.save")],-1)),e[525]||(e[525]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[527]||(e[527]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VideoStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Flushes the video stream and saves it to <code>path</code>. Ideally, <code>path</code>&#39;s file extension is the same as the format that the <code>VideoStream</code> was created with (e.g., if created with format &quot;mp4&quot; then <code>path</code>&#39;s file extension must be &quot;.mp4&quot;). Otherwise, the video will get converted to the target format. If using <a href="/stable/api#Makie.record-Tuple{Any, Union{Figure, Makie.FigureAxisPlot, Scene}, AbstractString}"><code>record</code></a> then this is handled for you, as the <code>VideoStream</code>&#39;s format is deduced from the file extension of the path passed to <code>record</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[526]||(e[526]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/ffmpeg-util.jl#L316-L324",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[526]})]),s("details",Is,[s("summary",null,[e[528]||(e[528]=s("a",{id:"Makie.Pattern-Tuple{Matrix{<:ColorTypes.Colorant}}",href:"#Makie.Pattern-Tuple{Matrix{<:ColorTypes.Colorant}}"},[s("span",{class:"jlbinding"},"Makie.Pattern")],-1)),e[529]||(e[529]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[531]||(e[531]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mask[; color1, color2])</span></span></code></pre></div><p>Creates an <code>ImagePattern</code> from an <code>image</code> (a matrix of colors) or a <code>mask</code> (a matrix of real numbers). The pattern can be passed as a <code>color</code> to a plot to texture it. If a <code>mask</code> is passed, one can specify to colors between which colors are interpolated.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[530]||(e[530]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/patterns.jl#L26-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[530]})]),s("details",Os,[s("summary",null,[e[532]||(e[532]=s("a",{id:"Makie.Pattern-Tuple{String}",href:"#Makie.Pattern-Tuple{String}"},[s("span",{class:"jlbinding"},"Makie.Pattern")],-1)),e[533]||(e[533]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[535]||(e[535]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a line pattern based on the given argument. Available patterns are <code>&#39;/&#39;</code>, <code>&#39;\\&#39;</code>, <code>&#39;-&#39;</code>, <code>&#39;|&#39;</code>, <code>&#39;x&#39;</code>, and <code>&#39;+&#39;</code>. All keyword arguments correspond to the keyword arguments for <code>LinePattern</code>.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[534]||(e[534]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/patterns.jl#L99-L106",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[534]})]),s("details",Vs,[s("summary",null,[e[536]||(e[536]=s("a",{id:"Makie.Record-Tuple{Any, Any}",href:"#Makie.Record-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.Record")],-1)),e[537]||(e[537]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[539]||(e[539]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func, figlike, [iter]; kw_args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check <a href="/stable/api#Makie.record-Tuple{Any, Union{Figure, Makie.FigureAxisPlot, Scene}, AbstractString}"><code>Makie.record</code></a> for documentation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[538]||(e[538]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recording.jl#L159-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[538]})]),s("details",Ns,[s("summary",null,[e[540]||(e[540]=s("a",{id:"Makie.ablines",href:"#Makie.ablines"},[s("span",{class:"jlbinding"},"Makie.ablines")],-1)),e[541]||(e[541]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[543]||(e[543]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ablines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(intercepts, slopes; attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a line defined by <code>f(x) = slope * x + intercept</code> crossing a whole <code>Scene</code> with 2D projection at its current limits. You can pass one or multiple intercepts or slopes.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>ablines</code> function is <code>ABLines</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of linecap used, i.e. :butt (flat with no extrusion), :square (flat with 1 linewidth extrusion) or :round.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in pixel units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',32)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[542]||(e[542]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L601",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[542]})]),s("details",Rs,[s("summary",null,[e[544]||(e[544]=s("a",{id:"Makie.ablines!",href:"#Makie.ablines!"},[s("span",{class:"jlbinding"},"Makie.ablines!")],-1)),e[545]||(e[545]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[547]||(e[547]=s("p",null,[s("code",null,"ablines!"),o(" is the mutating variant of plotting function "),s("code",null,"ablines"),o(". Check the docstring for "),s("code",null,"ablines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[546]||(e[546]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[546]})]),s("details",zs,[s("summary",null,[e[548]||(e[548]=s("a",{id:"Makie.activate_interaction!-Tuple{Any, Symbol}",href:"#Makie.activate_interaction!-Tuple{Any, Symbol}"},[s("span",{class:"jlbinding"},"Makie.activate_interaction!")],-1)),e[549]||(e[549]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[551]||(e[551]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate_interaction!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Activate the interaction named <code>name</code> registered in <code>parent</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[550]||(e[550]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/interactions.jl#L64-L68",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[550]})]),s("details",qs,[s("summary",null,[e[552]||(e[552]=s("a",{id:"Makie.addmouseevents!-Tuple{Any, Vararg{Any}}",href:"#Makie.addmouseevents!-Tuple{Any, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.addmouseevents!")],-1)),e[553]||(e[553]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[555]||(e[555]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addmouseevents!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, elements</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a <code>MouseEventHandle</code> with an observable inside which is triggered by all mouse interactions with the <code>scene</code> and optionally restricted to all given plot objects in <code>elements</code>.</p><p>To react to mouse events, use the onmouse... handlers.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mouseevents </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addmouseevents!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, scatterplot)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onmouseleftclick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mouseevents) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # do something with the mouseevent</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[554]||(e[554]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L104-L122",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[554]})]),s("details",Gs,[s("summary",null,[e[556]||(e[556]=s("a",{id:"Makie.annotation",href:"#Makie.annotation"},[s("span",{class:"jlbinding"},"Makie.annotation")],-1)),e[557]||(e[557]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[559]||(e[559]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_target, y_target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_label, y_label, x_target, y_target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points_target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points_label, points_target)</span></span></code></pre></div><p>Annotate one or more target points with a combination of optional text labels and connections between labels and targets, typically in the form of an arrow.</p><p>If no label positions are given, they will be determined automatically such that overlaps between labels and data points are reduced. In this mode, the labels should be very close to their associated data points so connection plots are typically not visible.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>annotation</code> function is <code>Annotation</code>.</p><p><strong>Attributes</strong></p><p><strong><code>algorithm</code></strong> = <code>automatic</code> — The algorithm used to automatically place labels with reduced overlaps. The positioning of the labels with a given input may change between non-breaking versions.</p><p><strong><code>align</code></strong> = <code>(:center, :center)</code> — The alignment of text relative to the label anchor position.</p><p><strong><code>clipstart</code></strong> = <code>automatic</code> — Determines which object is used to clip the path at the start. If set to <code>automatic</code>, the boundingbox of the text label is used.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The basic color of the connection object. For more fine-grained adjustments, modify the <code>style</code> object directly.</p><p><strong><code>font</code></strong> = <code>@inherit font</code> — Sets the font. Can be a <code>Symbol</code> which will be looked up in the <code>fonts</code> dictionary or a <code>String</code> specifying the (partial) name of a font or the file path of a font file.</p><p><strong><code>fonts</code></strong> = <code>@inherit fonts</code> — Used as a dictionary to look up fonts specified by <code>Symbol</code>, for example <code>:regular</code>, <code>:bold</code> or <code>:italic</code>.</p><p><strong><code>fontsize</code></strong> = <code>@inherit fontsize</code> — The size of the label font.</p><p><strong><code>justification</code></strong> = <code>automatic</code> — Sets the alignment of text w.r.t its bounding box. Can be <code>:left, :center, :right</code> or a fraction. Will default to the horizontal alignment in <code>align</code>.</p><p><strong><code>labelspace</code></strong> = <code>:relative_pixel</code> — The space in which the label positions are given. Can be <code>:relative_pixel</code> (the positions are given in screen space relative to the target data positions) or <code>:data</code>. If a text label should be positioned somewhere close to the labeled point, <code>:relative_pixel</code> is usually easier to get a consistent visual result. If an arrow is supposed to point from one data point to another, <code>:data</code> is the appropriate choice.</p><p><strong><code>lineheight</code></strong> = <code>1.0</code> — The lineheight multiplier.</p><p><strong><code>linewidth</code></strong> = <code>1.0</code> — The default line width for connection styles that have lines</p><p><strong><code>maxiter</code></strong> = <code>automatic</code> — The maximum number of iterations that the label placement algorithm is allowed to run.</p><p><strong><code>path</code></strong> = <code>Ann.Paths.Line()</code> — One path type or an array of path types that determine how to connect each label to its point. Suitable objects can be found in the module <code>Makie.Ann.Paths</code>.</p><p><strong><code>shrink</code></strong> = <code>(5.0, 7.0)</code> — One tuple or an array of tuples with two numbers, where each number specifies the radius of a circle in screen space which clips the connection path at the start or end, respectively, to add a little bit of visual space between arrow and label or target.</p><p><strong><code>style</code></strong> = <code>automatic</code> — One style object or an array of style objects that determine how the path from a label to its point is visualized. Suitable objects can be found in the module <code>Makie.Ann.Styles</code>.</p><p><strong><code>text</code></strong> = <code>&quot;&quot;</code> — One object or an array of objects that determine the textual content of the labels.</p><p><strong><code>textcolor</code></strong> = <code>automatic</code> — The color of the text labels. If <code>automatic</code>, <code>textcolor</code> matches <code>color</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p>`,24)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[558]||(e[558]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L603",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[558]})]),s("details",Us,[s("summary",null,[e[560]||(e[560]=s("a",{id:"Makie.annotation!",href:"#Makie.annotation!"},[s("span",{class:"jlbinding"},"Makie.annotation!")],-1)),e[561]||(e[561]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[563]||(e[563]=s("p",null,[s("code",null,"annotation!"),o(" is the mutating variant of plotting function "),s("code",null,"annotation"),o(". Check the docstring for "),s("code",null,"annotation"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[562]||(e[562]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[562]})]),s("details",Hs,[s("summary",null,[e[564]||(e[564]=s("a",{id:"Makie.arc",href:"#Makie.arc"},[s("span",{class:"jlbinding"},"Makie.arc")],-1)),e[565]||(e[565]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[567]||(e[567]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(origin, radius, start_angle, stop_angle; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This function plots a circular arc, centered at <code>origin</code> with radius <code>radius</code>, from <code>start_angle</code> to <code>stop_angle</code>. <code>origin</code> must be a coordinate in 2 dimensions (i.e., a <code>Point2</code>); the rest of the arguments must be <code>&lt;: Number</code>.</p><p>Examples:</p><p><code>arc(Point2f(0), 1, 0.0, π)</code> <code>arc(Point2f(1, 2), 0.3, π, -π)</code></p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>arc</code> function is <code>Arc</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>resolution</code></strong> = <code>361</code> — The number of line points approximating the arc.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[566]||(e[566]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L616",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[566]})]),s("details",Ws,[s("summary",null,[e[568]||(e[568]=s("a",{id:"Makie.arc!",href:"#Makie.arc!"},[s("span",{class:"jlbinding"},"Makie.arc!")],-1)),e[569]||(e[569]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[571]||(e[571]=s("p",null,[s("code",null,"arc!"),o(" is the mutating variant of plotting function "),s("code",null,"arc"),o(". Check the docstring for "),s("code",null,"arc"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[570]||(e[570]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[570]})]),s("details",Ys,[s("summary",null,[e[572]||(e[572]=s("a",{id:"Makie.arrows2d",href:"#Makie.arrows2d"},[s("span",{class:"jlbinding"},"Makie.arrows2d")],-1)),e[573]||(e[573]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[575]||(e[575]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points, directions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], u, v, [w])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows2d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots arrows as 2D shapes.</p><p>Their positions are given by a vector of <code>points</code> or component vectors <code>x</code>, <code>y</code> and optionally <code>z</code>. A single point or value of <code>x</code>, <code>y</code> and <code>z</code> is also allowed. Which part of the arrow is aligned with the position depends on the <code>align</code> attribute.</p><p>Their directions are given by a vector of <code>directions</code> or component vectors <code>u</code>, <code>v</code> and optionally <code>w</code> just like positions. Additionally they can also be calculated by a function <code>f</code> which should return a <code>Point</code> or <code>Vec</code> for each arrow <code>position::Point</code>. Note that direction can also be interpreted as end points with <code>argmode = :endpoint</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>arrows2d</code> function is <code>Arrows2D</code>.</p><p><strong>Attributes</strong></p><p><strong><code>align</code></strong> = <code>:tail</code> — Sets the alignment of the arrow, i.e. which part of the arrow is placed at the given positions.</p><ul><li><p><code>align = :tail</code> or <code>align = 0</code> places the arrow tail at the given position. This makes the arrow point away from that position.</p></li><li><p><code>align = :center</code> or <code>align = 0.5</code> places the arrow center (based on its total length) at the given position</p></li><li><p><code>align = :tip</code> or <code>align = 1.0</code> places the tip of the arrow at the given position. This makes the arrow point to that position.</p></li></ul><p>Values outside of (0, 1) can also be used to create gaps between the arrow and its anchor position.</p><p>With <code>argmode = :endpoint</code> alignment is not relative to the first argument passed to arrows. Instead the given fraction of the arrow marker is aligned to the fraction between the start and end point of the arrow. So <code>align = :center</code> will align the center of the arrow marker with the center between the passed positions. Because of this <code>align</code> only has an effect here if <code>normalize = true</code> or if <code>lengthscale != 1</code>.</p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>argmode</code></strong> = <code>:direction</code> — Controls whether the second argument is interpreted as a :direction or as an :endpoint.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>:black</code> — Sets the color of the arrow. Can be overridden separately using <code>tailcolor</code>, <code>shaftcolor</code> and <code>tipcolor</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>lengthscale</code></strong> = <code>1.0</code> — Scales the length of the arrow (as calculated from directions) by some factor.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>markerspace</code></strong> = <code>:pixel</code> — Sets the space of arrow metrics like tipwidth, tiplength, etc.</p><p><strong><code>maxshaftlength</code></strong> = <code>Inf</code> — Sets the maximum shaft length, see <code>shaftlength</code>.</p><p><strong><code>minshaftlength</code></strong> = <code>10</code> — Sets the minimum shaft length, see <code>shaftlength</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>normalize</code></strong> = <code>false</code> — If set to true, normalizes <code>directions</code>.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shaft</code></strong> = <code>Rect2f(0, -0.5, 1, 1)</code> — Sets the shape of the arrow shaft in units relative to the shaftwidth and shaftlength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><p><strong><code>shaftcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow shaft. Defaults to <code>color</code></p><p><strong><code>shaftlength</code></strong> = <code>automatic</code> — Sets the length of the arrow shaft. When set to <code>automatic</code> the length of the shaft will be derived from the length of the arrow, the <code>taillength</code> and the <code>tiplength</code>. If the results falls outside <code>minshaftlength</code> to <code>maxshaftlength</code> it is clamped and all lengths and widths are scaled to fit. If the <code>shaftlength</code> is set to a value, the lengths and widths of the arrow are always scaled.</p><p><strong><code>shaftwidth</code></strong> = <code>3</code> — Sets the width of the arrow shaft. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokemask</code></strong> = <code>0.75</code> — Arrows2D relies on mesh rendering to draw arrows, which doesn&#39;t anti-alias well when the mesh gets thin. To mask this issue an outline is drawn over the mesh with lines. The width of that outline is given by <code>strokemask</code>. Setting this to <code>0</code> may improve transparent arrows.</p><p><strong><code>tail</code></strong> = <code>arrowtail2d</code> — Sets the shape of the arrow tail in units relative to the tailwidth and taillength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><p><strong><code>tailcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow tail. Defaults to <code>color</code></p><p><strong><code>taillength</code></strong> = <code>0</code> — Sets the length of the arrow tail. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tail being drawn.</p><p><strong><code>tailwidth</code></strong> = <code>14</code> — Sets the width of the arrow tail. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>tip</code></strong> = <code>Point2f[(0, -0.5), (1, 0), (0, 0.5)]</code> — Sets the shape of the arrow tip in units relative to the tipwidth and tiplength. The arrow shape extends left to right (towards increasing x) and should be defined in a 0..1 by -0.5..0.5 range.</p><p><strong><code>tipcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow tip. Defaults to <code>color</code></p><p><strong><code>tiplength</code></strong> = <code>8</code> — Sets the length of the arrow tip. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tip being drawn.</p><p><strong><code>tipwidth</code></strong> = <code>14</code> — Sets the width of the arrow tip. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,52)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[574]||(e[574]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L673",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[574]})]),s("details",Ks,[s("summary",null,[e[576]||(e[576]=s("a",{id:"Makie.arrows2d!",href:"#Makie.arrows2d!"},[s("span",{class:"jlbinding"},"Makie.arrows2d!")],-1)),e[577]||(e[577]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[579]||(e[579]=s("p",null,[s("code",null,"arrows2d!"),o(" is the mutating variant of plotting function "),s("code",null,"arrows2d"),o(". Check the docstring for "),s("code",null,"arrows2d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[578]||(e[578]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[578]})]),s("details",Qs,[s("summary",null,[e[580]||(e[580]=s("a",{id:"Makie.arrows3d",href:"#Makie.arrows3d"},[s("span",{class:"jlbinding"},"Makie.arrows3d")],-1)),e[581]||(e[581]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[583]||(e[583]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points, directions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], u, v, [w])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrows3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, [z], f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots arrows as 3D shapes.</p><p>Their positions are given by a vector of <code>points</code> or component vectors <code>x</code>, <code>y</code> and optionally <code>z</code>. A single point or value of <code>x</code>, <code>y</code> and <code>z</code> is also allowed. Which part of the arrow is aligned with the position depends on the <code>align</code> attribute.</p><p>Their directions are given by a vector of <code>directions</code> or component vectors <code>u</code>, <code>v</code> and optionally <code>w</code> just like positions. Additionally they can also be calculated by a function <code>f</code> which should return a <code>Point</code> or <code>Vec</code> for each arrow <code>position::Point</code>. Note that direction can also be interpreted as end points with <code>argmode = :endpoint</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>arrows3d</code> function is <code>Arrows3D</code>.</p><p><strong>Attributes</strong></p><p><strong><code>align</code></strong> = <code>:tail</code> — Sets the alignment of the arrow, i.e. which part of the arrow is placed at the given positions.</p><ul><li><p><code>align = :tail</code> or <code>align = 0</code> places the arrow tail at the given position. This makes the arrow point away from that position.</p></li><li><p><code>align = :center</code> or <code>align = 0.5</code> places the arrow center (based on its total length) at the given position</p></li><li><p><code>align = :tip</code> or <code>align = 1.0</code> places the tip of the arrow at the given position. This makes the arrow point to that position.</p></li></ul><p>Values outside of (0, 1) can also be used to create gaps between the arrow and its anchor position.</p><p>With <code>argmode = :endpoint</code> alignment is not relative to the first argument passed to arrows. Instead the given fraction of the arrow marker is aligned to the fraction between the start and end point of the arrow. So <code>align = :center</code> will align the center of the arrow marker with the center between the passed positions. Because of this <code>align</code> only has an effect here if <code>normalize = true</code> or if <code>lengthscale != 1</code>.</p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>argmode</code></strong> = <code>:direction</code> — Controls whether the second argument is interpreted as a :direction or as an :endpoint.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>:black</code> — Sets the color of the arrow. Can be overridden separately using <code>tailcolor</code>, <code>shaftcolor</code> and <code>tipcolor</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>lengthscale</code></strong> = <code>1.0</code> — Scales the length of the arrow (as calculated from directions) by some factor.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>markerscale</code></strong> = <code>automatic</code> — Scales all arrow components, i.e. all radii and lengths (including min/maxshaftlength). When set to <code>automatic</code> the scaling factor is based on the boundingbox of the given data. This does not affect the mapping between arrows and directions.</p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>maxshaftlength</code></strong> = <code>Inf</code> — Sets the maximum shaft length, see <code>shaftlength</code></p><p><strong><code>minshaftlength</code></strong> = <code>0.6</code> — Sets the minimum shaft length, see <code>shaftlength</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>normalize</code></strong> = <code>false</code> — If set to true, normalizes <code>directions</code>.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>quality</code></strong> = <code>32</code> — Sets the number of vertices used when generating meshes for the arrow tail, shaft and cone. More vertices will improve the roundness of the mesh but be more costly.</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shaft</code></strong> = <code>Cylinder(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code> — Sets the mesh of the arrow shaft. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow shaft.</p><p><strong><code>shaftcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow shaft. Defaults to <code>color</code></p><p><strong><code>shaftlength</code></strong> = <code>automatic</code> — Sets the length of the arrow shaft. When set to <code>automatic</code> the length of the shaft will be derived from the length of the arrow, the <code>taillength</code> and the <code>tiplength</code>. If the results falls outside <code>minshaftlength</code> to <code>maxshaftlength</code> it is clamped and all lengths and widths are scaled to fit. If the <code>shaftlength</code> is set to a value, the lengths and widths of the arrow are always scaled.</p><p><strong><code>shaftradius</code></strong> = <code>0.05</code> — Sets the width of the arrow shaft. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>tail</code></strong> = <code>Cylinder(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code> — Sets the mesh of the arrow tail. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow tail.</p><p><strong><code>tailcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow tail. Defaults to <code>color</code></p><p><strong><code>taillength</code></strong> = <code>0</code> — Sets the length of the arrow tail. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tail being drawn.</p><p><strong><code>tailradius</code></strong> = <code>0.15</code> — Sets the width of the arrow tail. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>tip</code></strong> = <code>Cone(Point3f(0, 0, 0), Point3f(0, 0, 1), 0.5)</code> — Sets the mesh of the arrow tip. The mesh should be defined in a Rect3(-0.5, -0.5, 0.0, 1, 1, 1) where +z is direction of the arrow. Anything outside this box will extend outside the area designated to the arrow tip.</p><p><strong><code>tipcolor</code></strong> = <code>automatic</code> — Sets the color of the arrow tip. Defaults to <code>color</code></p><p><strong><code>tiplength</code></strong> = <code>0.4</code> — Sets the length of the arrow tip. This length may get scaled down if the total arrow length exceeds the available space for the arrow. Setting this to 0 will result in no tip being drawn.</p><p><strong><code>tipradius</code></strong> = <code>0.15</code> — Sets the width of the arrow tip. This width may get scaled down if the total arrow length exceeds the available space for the arrow.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,58)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[582]||(e[582]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L688",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[582]})]),s("details",$s,[s("summary",null,[e[584]||(e[584]=s("a",{id:"Makie.arrows3d!",href:"#Makie.arrows3d!"},[s("span",{class:"jlbinding"},"Makie.arrows3d!")],-1)),e[585]||(e[585]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[587]||(e[587]=s("p",null,[s("code",null,"arrows3d!"),o(" is the mutating variant of plotting function "),s("code",null,"arrows3d"),o(". Check the docstring for "),s("code",null,"arrows3d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[586]||(e[586]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[586]})]),s("details",Xs,[s("summary",null,[e[588]||(e[588]=s("a",{id:"Makie.autolimits!",href:"#Makie.autolimits!"},[s("span",{class:"jlbinding"},"Makie.autolimits!")],-1)),e[589]||(e[589]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[591]||(e[591]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autolimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, unlock_zoom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Calling this tells the PolarAxis to derive limits freely from the plotted data, which allows rmin &gt; 0 and thetalimits spanning less than a full circle. If <code>unlock_zoom = true</code> this also unlocks zooming in r and theta direction and allows for translations in r direction.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[590]||(e[590]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L979-L986",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[590]})]),s("details",Js,[s("summary",null,[e[592]||(e[592]=s("a",{id:"Makie.autolimits!-Tuple{Axis}",href:"#Makie.autolimits!-Tuple{Axis}"},[s("span",{class:"jlbinding"},"Makie.autolimits!")],-1)),e[593]||(e[593]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[595]||(e[595]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autolimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autolimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reset manually specified limits of <code>la</code> to an automatically determined rectangle, that depends on the data limits of all plot objects in the axis, as well as the autolimit margins for x and y axis. The argument <code>la</code> defaults to <code>current_axis()</code>.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[594]||(e[594]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L898-L904",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[594]})]),s("details",Zs,[s("summary",null,[e[596]||(e[596]=s("a",{id:"Makie.available_gradients-Tuple{}",href:"#Makie.available_gradients-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.available_gradients")],-1)),e[597]||(e[597]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[599]||(e[599]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">available_gradients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Prints all available gradient names.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[598]||(e[598]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1539-L1543",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[598]})]),s("details",et,[s("summary",null,[e[600]||(e[600]=s("a",{id:"Makie.available_marker_symbols-Tuple{}",href:"#Makie.available_marker_symbols-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.available_marker_symbols")],-1)),e[601]||(e[601]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[603]||(e[603]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">available_marker_symbols</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Displays all available marker symbols.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[602]||(e[602]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L2246-L2250",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[602]})]),s("details",st,[s("summary",null,[e[604]||(e[604]=s("a",{id:"Makie.available_plotting_methods-Tuple{}",href:"#Makie.available_plotting_methods-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.available_plotting_methods")],-1)),e[605]||(e[605]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[607]||(e[607]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">available_plotting_methods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns an array of all available plotting functions.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[606]||(e[606]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L539-L543",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[606]})]),s("details",tt,[s("summary",null,[e[608]||(e[608]=s("a",{id:"Makie.axis3d-Tuple",href:"#Makie.axis3d-Tuple"},[s("span",{class:"jlbinding"},"Makie.axis3d")],-1)),e[609]||(e[609]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[611]||(e[611]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axis3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a 3-dimensional OldAxis.</p><p><strong>Attributes</strong></p><p>OldAxis attributes and their defaults for <code>Axis3D</code> are:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    showaxis: (true, true, true)</span></span>
<span class="line"><span>    visible: true</span></span>
<span class="line"><span>    ticks: </span></span>
<span class="line"><span>        rotation: (-0.7071067811865475 + -0.0im + -0.0jm - 0.7071067811865476km, -4.371139e-8 + 0.0im + 0.0jm + 1.0km, -3.090861907263062e-8 + 3.090861907263061e-8im + 0.7071067811865475jm + 0.7071067811865476km)</span></span>
<span class="line"><span>        font: (:regular, :regular, :regular)</span></span>
<span class="line"><span>        ranges_labels: (Makie.Automatic(), Makie.Automatic())</span></span>
<span class="line"><span>        formatter: plain</span></span>
<span class="line"><span>        textcolor: (RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.6f0), RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.6f0), RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.6f0))</span></span>
<span class="line"><span>        fontsize: (5, 5, 5)</span></span>
<span class="line"><span>        align: ((:left, :center), (:right, :center), (:right, :center))</span></span>
<span class="line"><span>        gap: 3</span></span>
<span class="line"><span>    fonts: </span></span>
<span class="line"><span>        bold: TeX Gyre Heros Makie Bold</span></span>
<span class="line"><span>        italic: TeX Gyre Heros Makie Italic</span></span>
<span class="line"><span>        bold_italic: TeX Gyre Heros Makie Bold Italic</span></span>
<span class="line"><span>        regular: TeX Gyre Heros Makie</span></span>
<span class="line"><span>    names: </span></span>
<span class="line"><span>        axisnames: (&quot;x&quot;, &quot;y&quot;, &quot;z&quot;)</span></span>
<span class="line"><span>        rotation: (-0.7071067811865475 + -0.0im + -0.0jm - 0.7071067811865476km, -4.371139e-8 + 0.0im + 0.0jm + 1.0km, -3.090861907263062e-8 + 3.090861907263061e-8im + 0.7071067811865475jm + 0.7071067811865476km)</span></span>
<span class="line"><span>        font: (:regular, :regular, :regular)</span></span>
<span class="line"><span>        textcolor: (:black, :black, :black)</span></span>
<span class="line"><span>        fontsize: (6.0, 6.0, 6.0)</span></span>
<span class="line"><span>        align: ((:left, :center), (:right, :center), (:right, :center))</span></span>
<span class="line"><span>        gap: 3</span></span>
<span class="line"><span>    scale: Float32[1.0, 1.0, 1.0]</span></span>
<span class="line"><span>    clip_planes: Plane3f[]</span></span>
<span class="line"><span>    showgrid: (true, true, true)</span></span>
<span class="line"><span>    padding: 0.1</span></span>
<span class="line"><span>    frame: </span></span>
<span class="line"><span>        axiscolor: (:black, :black, :black)</span></span>
<span class="line"><span>        axislinewidth: (1.5, 1.5, 1.5)</span></span>
<span class="line"><span>        linewidth: (1, 1, 1)</span></span>
<span class="line"><span>        linecolor: (RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.4f0), RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.4f0), RGBA{Float32}(0.5f0,0.5f0,0.5f0,0.4f0))</span></span>
<span class="line"><span>    inspectable: false</span></span>
<span class="line"><span>    showticks: (true, true, true)</span></span></code></pre></div>`,5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[610]||(e[610]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/axis.jl#L30-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[610]})]),s("details",it,[s("summary",null,[e[612]||(e[612]=s("a",{id:"Makie.axislegend-Tuple{Any, Vararg{Any}}",href:"#Makie.axislegend-Tuple{Any, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.axislegend")],-1)),e[613]||(e[613]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[615]||(e[615]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :rt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current_axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axislegend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a legend that sits inside an Axis&#39;s plot area.</p><p>The position can be a Symbol where the first letter controls the horizontal alignment and can be l, r or c, and the second letter controls the vertical alignment and can be t, b or c. Or it can be a tuple where the first element is set as the Legend&#39;s halign and the second element as its valign.</p><p>With the keywords merge and unique you can control how plot objects with the same labels are treated. If merge is true, all plot objects with the same label will be layered on top of each other into one legend entry. If unique is true, all plot objects with the same plot type and label will be reduced to one occurrence.</p>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[614]||(e[614]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/legend.jl#L1092-L1111",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[614]})]),s("details",ot,[s("summary",null,[e[616]||(e[616]=s("a",{id:"Makie.band",href:"#Makie.band"},[s("span",{class:"jlbinding"},"Makie.band")],-1)),e[617]||(e[617]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[619]||(e[619]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, ylower, yupper; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lower, upper; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, lowerupper; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a band from <code>ylower</code> to <code>yupper</code> along <code>x</code>. The form <code>band(lower, upper)</code> plots a <a href="https://en.wikipedia.org/wiki/Ruled_surface" target="_blank" rel="noreferrer">ruled surface</a> between the points in <code>lower</code> and <code>upper</code>. Both bounds can be passed together as <code>lowerupper</code>, a vector of intervals.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>band</code> function is <code>Band</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Sets the color of the mesh. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors or a single <code>Colorant</code>. A <code>Matrix{&lt;:Colorant}</code> can be used to color the mesh with a texture, which requires the mesh to contain texture coordinates. A <code>&lt;: AbstractPattern</code> can be used to apply a repeated, pixel sampled pattern to the mesh, e.g. for hatching.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>direction</code></strong> = <code>:x</code> — The direction of the band. If set to <code>:y</code>, x and y coordinates will be flipped, resulting in a vertical band. This setting applies only to 2D bands.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — sets whether colors should be interpolated</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>matcap</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>NoShading</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>automatic</code> — Sets a transform for uv coordinates, which controls how a texture is mapped to a mesh. The attribute can be <code>I</code>, <code>scale::VecTypes{2}</code>, <code>(translation::VecTypes{2}, scale::VecTypes{2})</code>, any of <code>:rotr90</code>, <code>:rotl90</code>, <code>:rot180</code>, <code>:swap_xy</code>/<code>:transpose</code>, <code>:flip_x</code>, <code>:flip_y</code>, <code>:flip_xy</code>, or most generally a <code>Makie.Mat{2, 3, Float32}</code> or <code>Makie.Mat3f</code> as returned by <code>Makie.uv_transform()</code>. They can also be changed by passing a tuple <code>(op3, op2, op1)</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,38)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[618]||(e[618]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L622",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[618]})]),s("details",at,[s("summary",null,[e[620]||(e[620]=s("a",{id:"Makie.band!",href:"#Makie.band!"},[s("span",{class:"jlbinding"},"Makie.band!")],-1)),e[621]||(e[621]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[623]||(e[623]=s("p",null,[s("code",null,"band!"),o(" is the mutating variant of plotting function "),s("code",null,"band"),o(". Check the docstring for "),s("code",null,"band"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[622]||(e[622]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[622]})]),s("details",nt,[s("summary",null,[e[624]||(e[624]=s("a",{id:"Makie.barplot",href:"#Makie.barplot"},[s("span",{class:"jlbinding"},"Makie.barplot")],-1)),e[625]||(e[625]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[627]||(e[627]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">barplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions, heights; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a barplot.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>barplot</code> function is <code>BarPlot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>bar_labels</code></strong> = <code>nothing</code> — Labels added at the end of each bar.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>color_over_background</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>color_over_bar</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>direction</code></strong> = <code>:y</code> — Controls the direction of the bars, can be <code>:y</code> (vertical) or <code>:x</code> (horizontal).</p><p><strong><code>dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>dodge_gap</code></strong> = <code>0.03</code> — <em>No docs available.</em></p><p><strong><code>fillto</code></strong> = <code>automatic</code> — Controls the baseline of the bars. This is zero in the default <code>automatic</code> case unless the barplot is in a log-scaled <code>Axis</code>. With a log scale, the automatic default is half the minimum value because zero is an invalid value for a log scale.</p><p><strong><code>flip_labels_at</code></strong> = <code>Inf</code> — <em>No docs available.</em></p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>gap</code></strong> = <code>0.2</code> — The final width of the bars is calculated as <code>w * (1 - gap)</code> where <code>w</code> is the width of each bar as determined with the <code>width</code> attribute.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>label_align</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>label_color</code></strong> = <code>@inherit textcolor</code> — <em>No docs available.</em></p><p><strong><code>label_font</code></strong> = <code>@inherit font</code> — The font of the bar labels.</p><p><strong><code>label_formatter</code></strong> = <code>bar_label_formatter</code> — <em>No docs available.</em></p><p><strong><code>label_offset</code></strong> = <code>5</code> — The distance of the labels from the bar ends in screen units. Does not apply when <code>label_position = :center</code>.</p><p><strong><code>label_position</code></strong> = <code>:end</code> — The position of each bar&#39;s label relative to the bar. Possible values are <code>:end</code> or <code>:center</code>.</p><p><strong><code>label_rotation</code></strong> = <code>0π</code> — <em>No docs available.</em></p><p><strong><code>label_size</code></strong> = <code>@inherit fontsize</code> — The font size of the bar labels.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>offset</code></strong> = <code>0.0</code> — <em>No docs available.</em></p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stack</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>width</code></strong> = <code>automatic</code> — The gapless width of the bars. If <code>automatic</code>, the width <code>w</code> is calculated as <code>minimum(diff(sort(unique(positions)))</code>. The actual width of the bars is calculated as <code>w * (1 - gap)</code>.</p>',51)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[626]||(e[626]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L642",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[626]})]),s("details",lt,[s("summary",null,[e[628]||(e[628]=s("a",{id:"Makie.barplot!",href:"#Makie.barplot!"},[s("span",{class:"jlbinding"},"Makie.barplot!")],-1)),e[629]||(e[629]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[631]||(e[631]=s("p",null,[s("code",null,"barplot!"),o(" is the mutating variant of plotting function "),s("code",null,"barplot"),o(". Check the docstring for "),s("code",null,"barplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[630]||(e[630]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[630]})]),s("details",dt,[s("summary",null,[e[632]||(e[632]=s("a",{id:"Makie.boundingbox",href:"#Makie.boundingbox"},[s("span",{class:"jlbinding"},"Makie.boundingbox")],-1)),e[633]||(e[633]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[635]||(e[635]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boundingbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPlot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the data space bounding box of a plot. This include <code>plot.transformation</code>, i.e. the <code>transform_func</code> and the <code>model</code> matrix.</p><p>See also: <a href="/stable/api#Makie.data_limits"><code>data_limits</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[634]||(e[634]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/boundingbox.jl#L26-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[634]})]),s("details",rt,[s("summary",null,[e[636]||(e[636]=s("a",{id:"Makie.boundingbox-2",href:"#Makie.boundingbox-2"},[s("span",{class:"jlbinding"},"Makie.boundingbox")],-1)),e[637]||(e[637]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[639]||(e[639]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boundingbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike[, exclude </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Returns the combined data space bounding box of all plots collected under <code>scenelike</code>. This include <code>plot.transformation</code>, i.e. the <code>transform_func</code> and the <code>model</code> matrix. Plots with <code>exclude(plot) == true</code> are excluded.</p><p>See also: <a href="/stable/api#Makie.data_limits"><code>data_limits</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[638]||(e[638]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/boundingbox.jl#L7-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[638]})]),s("details",ct,[s("summary",null,[e[640]||(e[640]=s("a",{id:"Makie.boxplot",href:"#Makie.boxplot"},[s("span",{class:"jlbinding"},"Makie.boxplot")],-1)),e[641]||(e[641]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[643]||(e[643]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boxplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draw a Tukey style boxplot. The boxplot has 3 components:</p><ul><li><p>a <code>crossbar</code> spanning the interquartile (IQR) range with a midline marking the median</p></li><li><p>an <code>errorbar</code> whose whiskers span <code>range * iqr</code></p></li><li><p>points marking outliers, that is, data outside the whiskers</p></li></ul><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: positions of the categories</p></li><li><p><code>y</code>: variables within the boxes</p></li></ul><p><strong>Plot type</strong></p><p>The plot type alias for the <code>boxplot</code> function is <code>BoxPlot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>dodge</code></strong> = <code>automatic</code> — Vector of <code>Integer</code> (length of data) of grouping variable to create multiple side-by-side boxes at the same <code>x</code> position.</p><p><strong><code>dodge_gap</code></strong> = <code>0.03</code> — Spacing between dodged boxes.</p><p><strong><code>gap</code></strong> = <code>0.2</code> — Shrinking factor, <code>width -&gt; width * (1 - gap)</code>.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — <em>No docs available.</em></p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — <em>No docs available.</em></p><p><strong><code>mediancolor</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>medianlinewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>notchwidth</code></strong> = <code>0.5</code> — Multiplier of <code>width</code> for narrowest width of notch.</p><p><strong><code>orientation</code></strong> = <code>:vertical</code> — Orientation of box (<code>:vertical</code> or <code>:horizontal</code>).</p><p><strong><code>outliercolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>outlierstrokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>outlierstrokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>range</code></strong> = <code>1.5</code> — Multiple of IQR controlling whisker length.</p><p><strong><code>show_median</code></strong> = <code>true</code> — Show median as midline.</p><p><strong><code>show_notch</code></strong> = <code>false</code> — Draw the notch.</p><p><strong><code>show_outliers</code></strong> = <code>true</code> — Show outliers as points.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>weights</code></strong> = <code>automatic</code> — Vector of statistical weights (length of data). By default, each observation has weight <code>1</code>.</p><p><strong><code>whiskercolor</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>whiskerlinewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>whiskerwidth</code></strong> = <code>0.0</code> — Multiplier of <code>width</code> for width of T&#39;s on whiskers, or <code>:match</code> to match <code>width</code>.</p><p><strong><code>width</code></strong> = <code>automatic</code> — Width of the box before shrinking.</p>',39)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[642]||(e[642]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L608",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[642]})]),s("details",pt,[s("summary",null,[e[644]||(e[644]=s("a",{id:"Makie.boxplot!",href:"#Makie.boxplot!"},[s("span",{class:"jlbinding"},"Makie.boxplot!")],-1)),e[645]||(e[645]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[647]||(e[647]=s("p",null,[s("code",null,"boxplot!"),o(" is the mutating variant of plotting function "),s("code",null,"boxplot"),o(". Check the docstring for "),s("code",null,"boxplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[646]||(e[646]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[646]})]),s("details",ht,[s("summary",null,[e[648]||(e[648]=s("a",{id:"Makie.bracket",href:"#Makie.bracket"},[s("span",{class:"jlbinding"},"Makie.bracket")],-1)),e[649]||(e[649]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[651]||(e[651]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bracket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x1, y1, x2, y2; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bracket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x1s, y1s, x2s, y2s; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bracket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(point1, point2; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bracket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec_of_point_tuples; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draws a bracket between each pair of points (x1, y1) and (x2, y2) with a text label at the midpoint.</p><p>By default each label is rotated parallel to the line between the bracket points.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>bracket</code> function is <code>Bracket</code>.</p><p><strong>Attributes</strong></p><p><strong><code>align</code></strong> = <code>(:center, :center)</code> — <em>No docs available.</em></p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>font</code></strong> = <code>@inherit font</code> — <em>No docs available.</em></p><p><strong><code>fontsize</code></strong> = <code>@inherit fontsize</code> — <em>No docs available.</em></p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>justification</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>:solid</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>offset</code></strong> = <code>0</code> — The offset of the bracket perpendicular to the line from start to end point in screen units. The direction depends on the <code>orientation</code> attribute.</p><p><strong><code>orientation</code></strong> = <code>:up</code> — Which way the bracket extends relative to the line from start to end point. Can be <code>:up</code> or <code>:down</code>.</p><p><strong><code>rotation</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — <em>No docs available.</em></p><p><strong><code>style</code></strong> = <code>:curly</code> — <em>No docs available.</em></p><p><strong><code>text</code></strong> = <code>&quot;&quot;</code> — <em>No docs available.</em></p><p><strong><code>textcolor</code></strong> = <code>@inherit textcolor</code> — <em>No docs available.</em></p><p><strong><code>textoffset</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>width</code></strong> = <code>15</code> — The width of the bracket (perpendicularly away from the line from start to end point) in screen units.</p>`,25)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[650]||(e[650]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L582",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[650]})]),s("details",kt,[s("summary",null,[e[652]||(e[652]=s("a",{id:"Makie.bracket!",href:"#Makie.bracket!"},[s("span",{class:"jlbinding"},"Makie.bracket!")],-1)),e[653]||(e[653]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[655]||(e[655]=s("p",null,[s("code",null,"bracket!"),o(" is the mutating variant of plotting function "),s("code",null,"bracket"),o(". Check the docstring for "),s("code",null,"bracket"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[654]||(e[654]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[654]})]),s("details",gt,[s("summary",null,[e[656]||(e[656]=s("a",{id:"Makie.broadcast_foreach-Tuple{Any, Vararg{Any}}",href:"#Makie.broadcast_foreach-Tuple{Any, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.broadcast_foreach")],-1)),e[657]||(e[657]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[659]||(e[659]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">broadcast_foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like broadcast but for foreach. Doesn&#39;t care about shape and treats Tuples &amp;&amp; StaticVectors as scalars. This method is meant for broadcasting across attributes that can either have scalar or vector / array form. An example would be a collection of scatter markers that have different sizes but a single color. The length of an attribute is determined with <code>attr_broadcast_length</code> and elements are accessed with <code>attr_broadcast_getindex</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[658]||(e[658]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L205-L213",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[658]})]),s("details",ut,[s("summary",null,[e[660]||(e[660]=s("a",{id:"Makie.cam2d!-Tuple{SceneLike}",href:"#Makie.cam2d!-Tuple{SceneLike}"},[s("span",{class:"jlbinding"},"Makie.cam2d!")],-1)),e[661]||(e[661]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[663]||(e[663]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cam2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SceneLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a 2D camera for the given <code>scene</code>. The camera implements zooming by scrolling and translation using mouse drag. It also implements rectangle selections.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>zoomspeed = 0.1</code> sets the zoom speed.</p></li><li><p><code>zoombutton = true</code> sets a button (combination) which needs to be pressed to enable zooming. By default no button needs to be pressed.</p></li><li><p><code>panbutton = Mouse.right</code> sets the button used to translate the camera. This must include a mouse button.</p></li><li><p><code>selectionbutton = (Keyboard.space, Mouse.left)</code> sets the button used for rectangle selection. This must include a mouse button.</p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[662]||(e[662]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera2d.jl#L11-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[662]})]),s("details",bt,[s("summary",null,[e[664]||(e[664]=s("a",{id:"Makie.cam2d-Tuple{Scene}",href:"#Makie.cam2d-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.cam2d")],-1)),e[665]||(e[665]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[667]||(e[667]=s("p",null,"Creates a subscene with a pixel camera",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[666]||(e[666]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/scenes.jl#L434-L436",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[666]})]),s("details",yt,[s("summary",null,[e[668]||(e[668]=s("a",{id:"Makie.cam3d!-Tuple{Any}",href:"#Makie.cam3d!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.cam3d!")],-1)),e[669]||(e[669]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[671]||(e[671]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cam3d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Creates a <code>Camera3D</code> with <code>zoom_shift_lookat = true</code> and <code>fixed_axis = true</code>. For more information, see <a href="/stable/explanations/cameras#Makie.Camera3D"><code>Camera3D</code></a></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[670]||(e[670]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L257-L262",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[670]})]),s("details",ft,[s("summary",null,[e[672]||(e[672]=s("a",{id:"Makie.cam3d_cad!-Tuple{Any}",href:"#Makie.cam3d_cad!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.cam3d_cad!")],-1)),e[673]||(e[673]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[675]||(e[675]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cam3d_cad!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Creates a <code>Camera3D</code> with <code>cad = true</code>, <code>zoom_shift_lookat = false</code> and <code>fixed_axis = false</code>. For more information, see <a href="/stable/explanations/cameras#Makie.Camera3D"><code>Camera3D</code></a></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[674]||(e[674]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L266-L271",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[674]})]),s("details",mt,[s("summary",null,[e[676]||(e[676]=s("a",{id:"Makie.cam_relative!-Tuple{Scene}",href:"#Makie.cam_relative!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.cam_relative!")],-1)),e[677]||(e[677]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[679]||(e[679]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cam_relative!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Creates a camera for the given <code>scene</code> which maps the scene area to a 0..1 by 0..1 range. This camera does not feature controls.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[678]||(e[678]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera2d.jl#L361-L366",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[678]})]),s("details",Et,[s("summary",null,[e[680]||(e[680]=s("a",{id:"Makie.campixel!-Tuple{Scene}",href:"#Makie.campixel!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.campixel!")],-1)),e[681]||(e[681]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[683]||(e[683]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">campixel!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; nearclip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, farclip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a pixel camera for the given <code>scene</code>. This means that the positional data of a plot will be interpreted in pixel units. This camera does not feature controls.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[682]||(e[682]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera2d.jl#L337-L343",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[682]})]),s("details",vt,[s("summary",null,[e[684]||(e[684]=s("a",{id:"Makie.categorical_colors-Tuple{AbstractVector{<:ColorTypes.Colorant}, Integer}",href:"#Makie.categorical_colors-Tuple{AbstractVector{<:ColorTypes.Colorant}, Integer}"},[s("span",{class:"jlbinding"},"Makie.categorical_colors")],-1)),e[685]||(e[685]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[687]||(e[687]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">categorical_colors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colormaplike, categories</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates categorical colors and tries to match <code>categories</code>. Will error if color scheme doesn&#39;t contain enough categories. Will drop the n last colors, if request less colors than contained in scheme.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[686]||(e[686]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1555-L1560",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[686]})]),s("details",_t,[s("summary",null,[e[688]||(e[688]=s("a",{id:"Makie.colorbuffer",href:"#Makie.colorbuffer"},[s("span",{class:"jlbinding"},"Makie.colorbuffer")],-1)),e[689]||(e[689]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[691]||(e[691]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">colorbuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ImageStorageFormat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JuliaNative; update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), screen_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the content of the given scene or screen rasterised to a Matrix of Colors. The return type is backend-dependent, but will be some form of RGB or RGBA.</p><ul><li><p><code>backend::Module</code>: A module which is a Makie backend. For example, <code>backend = GLMakie</code>, <code>backend = CairoMakie</code>, etc.</p></li><li><p><code>format = JuliaNative</code> : Returns a buffer in the format of standard julia images (dims permuted and one reversed)</p></li><li><p><code>format = GLNative</code> : Returns a more efficient format buffer for GLMakie which can be directly used in FFMPEG without conversion</p></li><li><p><code>screen_config</code>: Backend dependent, look up via <code>?Backend.Screen</code>/<code>Base.doc(Backend.Screen)</code></p></li><li><p><code>update=true</code>: resets/updates limits. Set to false, if you want to preserver camera movements.</p></li></ul>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[690]||(e[690]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/display.jl#L463-L476",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[690]})]),s("details",Tt,[s("summary",null,[e[692]||(e[692]=s("a",{id:"Makie.colorbuffer-Tuple{Axis}",href:"#Makie.colorbuffer-Tuple{Axis}"},[s("span",{class:"jlbinding"},"Makie.colorbuffer")],-1)),e[693]||(e[693]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[695]||(e[695]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">colorbuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; include_decorations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, colorbuffer_kws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Gets the colorbuffer of the <code>Axis</code> in <code>JuliaNative</code> image format. If <code>include_decorations=false</code>, only the inside of the axis is fetched.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[694]||(e[694]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1972-L1977",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[694]})]),s("details",jt,[s("summary",null,[e[696]||(e[696]=s("a",{id:"Makie.contour",href:"#Makie.contour"},[s("span",{class:"jlbinding"},"Makie.contour")],-1)),e[697]||(e[697]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[699]||(e[699]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a contour plot of the plane spanning <code>x::Vector</code>, <code>y::Vector</code>, <code>z::Matrix</code>. If only <code>z::Matrix</code> is supplied, the indices of the elements in <code>z</code> will be used as the <code>x</code> and <code>y</code> locations when plotting the contour.</p><p><code>x</code> and <code>y</code> can also be Matrices that define a curvilinear grid, similar to how <a href="/stable/reference/plots/surface#surface"><code>surface</code></a> works.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>contour</code> function is <code>Contour</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>nothing</code> — The color of the contour lines. If <code>nothing</code>, the color is determined by the numerical values of the contour levels in combination with <code>colormap</code> and <code>colorrange</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>enable_depth</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>isorange</code></strong> = <code>automatic</code> — Sets the tolerance for sampling of a <code>level</code> in 3D contour plots.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>labelcolor</code></strong> = <code>nothing</code> — Color of the contour labels, if <code>nothing</code> it matches <code>color</code> by default.</p><p><strong><code>labelfont</code></strong> = <code>@inherit font</code> — The font of the contour labels.</p><p><strong><code>labelformatter</code></strong> = <code>contour_label_formatter</code> — Formats the numeric values of the contour levels to strings.</p><p><strong><code>labels</code></strong> = <code>false</code> — If <code>true</code>, adds text labels to the contour lines.</p><p><strong><code>labelsize</code></strong> = <code>10</code> — Font size of the contour labels</p><p><strong><code>levels</code></strong> = <code>5</code> — Controls the number and location of the contour lines. Can be either</p><ul><li><p>an <code>Int</code> that produces n equally wide levels or bands</p></li><li><p>an <code>AbstractVector{&lt;:Real}</code> that lists n consecutive edges from low to high, which result in n-1 levels or bands</p></li></ul><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>1.0</code> — <em>No docs available.</em></p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,42)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[698]||(e[698]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L626",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[698]})]),s("details",Mt,[s("summary",null,[e[700]||(e[700]=s("a",{id:"Makie.contour!",href:"#Makie.contour!"},[s("span",{class:"jlbinding"},"Makie.contour!")],-1)),e[701]||(e[701]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[703]||(e[703]=s("p",null,[s("code",null,"contour!"),o(" is the mutating variant of plotting function "),s("code",null,"contour"),o(". Check the docstring for "),s("code",null,"contour"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[702]||(e[702]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[702]})]),s("details",Ct,[s("summary",null,[e[704]||(e[704]=s("a",{id:"Makie.contour3d",href:"#Makie.contour3d"},[s("span",{class:"jlbinding"},"Makie.contour3d")],-1)),e[705]||(e[705]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[707]||(e[707]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contour3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span></code></pre></div><p>Creates a 3D contour plot of the plane spanning x::Vector, y::Vector, z::Matrix, with z-elevation for each level.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>contour3d</code> function is <code>Contour3d</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>nothing</code> — The color of the contour lines. If <code>nothing</code>, the color is determined by the numerical values of the contour levels in combination with <code>colormap</code> and <code>colorrange</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>enable_depth</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>isorange</code></strong> = <code>automatic</code> — Sets the tolerance for sampling of a <code>level</code> in 3D contour plots.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>labelcolor</code></strong> = <code>nothing</code> — Color of the contour labels, if <code>nothing</code> it matches <code>color</code> by default.</p><p><strong><code>labelfont</code></strong> = <code>@inherit font</code> — The font of the contour labels.</p><p><strong><code>labelformatter</code></strong> = <code>contour_label_formatter</code> — Formats the numeric values of the contour levels to strings.</p><p><strong><code>labels</code></strong> = <code>false</code> — If <code>true</code>, adds text labels to the contour lines.</p><p><strong><code>labelsize</code></strong> = <code>10</code> — Font size of the contour labels</p><p><strong><code>levels</code></strong> = <code>5</code> — Controls the number and location of the contour lines. Can be either</p><ul><li><p>an <code>Int</code> that produces n equally wide levels or bands</p></li><li><p>an <code>AbstractVector{&lt;:Real}</code> that lists n consecutive edges from low to high, which result in n-1 levels or bands</p></li></ul><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>1.0</code> — <em>No docs available.</em></p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',41)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[706]||(e[706]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L623",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[706]})]),s("details",Ft,[s("summary",null,[e[708]||(e[708]=s("a",{id:"Makie.contour3d!",href:"#Makie.contour3d!"},[s("span",{class:"jlbinding"},"Makie.contour3d!")],-1)),e[709]||(e[709]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[711]||(e[711]=s("p",null,[s("code",null,"contour3d!"),o(" is the mutating variant of plotting function "),s("code",null,"contour3d"),o(". Check the docstring for "),s("code",null,"contour3d"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[710]||(e[710]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[710]})]),s("details",wt,[s("summary",null,[e[712]||(e[712]=s("a",{id:"Makie.contourf",href:"#Makie.contourf"},[s("span",{class:"jlbinding"},"Makie.contourf")],-1)),e[713]||(e[713]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[715]||(e[715]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contourf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys, zs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a filled contour of the height information in <code>zs</code> at horizontal grid positions <code>xs</code> and vertical grid positions <code>ys</code>.</p><p><code>xs</code> and <code>ys</code> can be vectors for rectilinear grids or matrices for curvilinear grids, similar to how <a href="/stable/reference/plots/surface#surface"><code>surface</code></a> works.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>contourf</code> function is <code>Contourf</code>.</p><p><strong>Attributes</strong></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>extendhigh</code></strong> = <code>nothing</code> — In <code>:normal</code> mode, if you want to show a band from the high edge to <code>Inf</code>, set <code>extendhigh</code> to <code>:auto</code> to give the extension the same color as the last level, or specify a color directly (default <code>nothing</code> means no extended band).</p><p><strong><code>extendlow</code></strong> = <code>nothing</code> — In <code>:normal</code> mode, if you want to show a band from <code>-Inf</code> to the low edge, set <code>extendlow</code> to <code>:auto</code> to give the extension the same color as the first level, or specify a color directly (default <code>nothing</code> means no extended band).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>levels</code></strong> = <code>10</code> — Can be either</p><ul><li><p>an <code>Int</code> that produces n equally wide levels or bands</p></li><li><p>an <code>AbstractVector{&lt;:Real}</code> that lists n consecutive edges from low to high, which result in n-1 levels or bands</p></li></ul><p>If <code>levels</code> is an <code>Int</code>, the contourf plot will be rectangular as all <code>zs</code> values will be covered edge to edge. This is why <code>Axis</code> defaults to tight limits for such contourf plots. If you specify <code>levels</code> as an <code>AbstractVector{&lt;:Real}</code>, however, note that the axis limits include the default margins because the contourf plot can have an irregular shape. You can use <code>tightlimits!(ax)</code> to tighten the limits similar to the <code>Int</code> behavior.</p><p><strong><code>mode</code></strong> = <code>:normal</code> — Determines how the <code>levels</code> attribute is interpreted, either <code>:normal</code> or <code>:relative</code>. In <code>:normal</code> mode, the levels correspond directly to the z values. In <code>:relative</code> mode, you specify edges by the fraction between minimum and maximum value of <code>zs</code>. This can be used for example to draw bands for the upper 90% while excluding the lower 10% with <code>levels = 0.1:0.1:1.0, mode = :relative</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — <em>No docs available.</em></p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',29)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[714]||(e[714]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L602",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[714]})]),s("details",xt,[s("summary",null,[e[716]||(e[716]=s("a",{id:"Makie.contourf!",href:"#Makie.contourf!"},[s("span",{class:"jlbinding"},"Makie.contourf!")],-1)),e[717]||(e[717]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[719]||(e[719]=s("p",null,[s("code",null,"contourf!"),o(" is the mutating variant of plotting function "),s("code",null,"contourf"),o(". Check the docstring for "),s("code",null,"contourf"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[718]||(e[718]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[718]})]),s("details",At,[s("summary",null,[e[720]||(e[720]=s("a",{id:"Makie.convert_arguments-Tuple{GridBased, AbstractVecOrMat{<:Real}, AbstractVecOrMat{<:Real}, AbstractMatrix{<:Union{Real, ColorTypes.Colorant}}}",href:"#Makie.convert_arguments-Tuple{GridBased, AbstractVecOrMat{<:Real}, AbstractVecOrMat{<:Real}, AbstractMatrix{<:Union{Real, ColorTypes.Colorant}}}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[721]||(e[721]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[723]||(e[723]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ct</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GridBased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecOrMat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecOrMat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If <code>ct</code> is <code>Heatmap</code> and <code>x</code> and <code>y</code> are vectors, infer from length of <code>x</code> and <code>y</code> whether they represent edges or centers of the heatmap bins. If they are centers, convert to edges. Convert eltypes to <code>Float32</code> and return outputs as a <code>Tuple</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[722]||(e[722]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L347-L354",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[722]})]),s("details",St,[s("summary",null,[e[724]||(e[724]=s("a",{id:"Makie.convert_arguments-Tuple{GridBased, Union{Tuple{Real, Real}, IntervalSets.ClosedInterval, AbstractVector}, Union{Tuple{Real, Real}, IntervalSets.ClosedInterval, AbstractVector}, AbstractMatrix{<:Union{Real, ColorTypes.Colorant}}}",href:"#Makie.convert_arguments-Tuple{GridBased, Union{Tuple{Real, Real}, IntervalSets.ClosedInterval, AbstractVector}, Union{Tuple{Real, Real}, IntervalSets.ClosedInterval, AbstractVector}, AbstractMatrix{<:Union{Real, ColorTypes.Colorant}}}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[725]||(e[725]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[727]||(e[727]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RangeLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RangeLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Takes one or two ClosedIntervals <code>x</code> and <code>y</code> and converts them to closed ranges with size(z, 1/2).</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[726]||(e[726]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L365-L370",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[726]})]),s("details",Dt,[s("summary",null,[e[728]||(e[728]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, AbstractArray{T, N} where {N, T<:Real}, AbstractMatrix{T} where T<:Real, AbstractMatrix{T} where T<:Real}",href:"#Makie.convert_arguments-Tuple{PointBased, AbstractArray{T, N} where {N, T<:Real}, AbstractMatrix{T} where T<:Real, AbstractMatrix{T} where T<:Real}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[729]||(e[729]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[731]||(e[731]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x, y, z)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector)</span></span></code></pre></div><p>Takes vectors <code>x</code>, <code>y</code>, and <code>z</code> and turns it into a vector of 3D points of the values from <code>x</code>, <code>y</code>, and <code>z</code>. <code>P</code> is the plot Type (it is optional).</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[730]||(e[730]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L120-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[730]})]),s("details",Bt,[s("summary",null,[e[732]||(e[732]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, AbstractArray{T, N} where {N, T<:Real}, AbstractVector{T} where T<:Real, AbstractMatrix{T} where T<:Real}",href:"#Makie.convert_arguments-Tuple{PointBased, AbstractArray{T, N} where {N, T<:Real}, AbstractVector{T} where T<:Real, AbstractMatrix{T} where T<:Real}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[733]||(e[733]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[735]||(e[735]=s("p",null,"Enables to use scatter like a surface plot with x::Vector, y::Vector, z::Matrix spanning z over the grid spanned by x y",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[734]||(e[734]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L101-L104",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[734]})]),s("details",Lt,[s("summary",null,[e[736]||(e[736]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, GeometryBasics.LineString}",href:"#Makie.convert_arguments-Tuple{PointBased, GeometryBasics.LineString}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[737]||(e[737]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[739]||(e[739]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PB, LineString)</span></span></code></pre></div><p>Takes an input <code>LineString</code> and decomposes it to points.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[738]||(e[738]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L210-L215",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[738]})]),s("details",Pt,[s("summary",null,[e[740]||(e[740]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, GeometryBasics.Polygon}",href:"#Makie.convert_arguments-Tuple{PointBased, GeometryBasics.Polygon}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[741]||(e[741]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[743]||(e[743]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PB, Polygon)</span></span></code></pre></div><p>Takes an input <code>Polygon</code> and decomposes it to points.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[742]||(e[742]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L237-L242",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[742]})]),s("details",It,[s("summary",null,[e[744]||(e[744]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, IntervalSets.ClosedInterval, AbstractVector{T} where T<:Real}",href:"#Makie.convert_arguments-Tuple{PointBased, IntervalSets.ClosedInterval, AbstractVector{T} where T<:Real}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[745]||(e[745]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[747]||(e[747]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x, y)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector)</span></span></code></pre></div><p>Takes vectors <code>x</code> and <code>y</code> and turns it into a vector of 2D points of the values from <code>x</code> and <code>y</code>.</p><p><code>P</code> is the plot Type (it is optional).</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[746]||(e[746]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L162-L169",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[746]})]),s("details",Ot,[s("summary",null,[e[748]||(e[748]=s("a",{id:"Makie.convert_arguments-Tuple{PointBased, Real, Real}",href:"#Makie.convert_arguments-Tuple{PointBased, Real, Real}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[749]||(e[749]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[751]||(e[751]=s("p",null,"Wrap a single point or equivalent object in a single-element array.",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[750]||(e[750]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L65-L67",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[750]})]),s("details",Vt,[s("summary",null,[e[752]||(e[752]=s("a",{id:"Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractArray, AbstractArray}",href:"#Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractArray, AbstractArray}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[753]||(e[753]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[755]||(e[755]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mesh, vertices, indices)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GLNormalMesh</span></span></code></pre></div><p>Takes <code>vertices</code> and <code>indices</code>, and creates a triangle mesh out of those. See <code>to_vertices</code> and <code>to_triangles</code> for more information about accepted types.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[754]||(e[754]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L646-L652",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[754]})]),s("details",Nt,[s("summary",null,[e[756]||(e[756]=s("a",{id:"Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{<:Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}}",href:"#Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{<:Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[757]||(e[757]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[759]||(e[759]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mesh, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GLNormalMesh</span></span></code></pre></div><p>Takes an input mesh and a vector <code>xyz</code> representing the vertices of the mesh, and creates indices under the assumption, that each triplet in <code>xyz</code> forms a triangle.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[758]||(e[758]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L566-L571",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[758]})]),s("details",Rt,[s("summary",null,[e[760]||(e[760]=s("a",{id:"Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector}",href:"#Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[761]||(e[761]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[763]||(e[763]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mesh, x, y, z, indices)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GLNormalMesh</span></span></code></pre></div><p>Takes real vectors x, y, z and constructs a triangle mesh out of those, using the faces in <code>indices</code>, which can be integers (every 3 -&gt; one triangle), or GeometryBasics.NgonFace{N, &lt;: Integer}.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[762]||(e[762]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L632-L637",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[762]})]),s("details",zt,[s("summary",null,[e[764]||(e[764]=s("a",{id:"Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real}",href:"#Makie.convert_arguments-Tuple{Type{<:Mesh}, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[765]||(e[765]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[767]||(e[767]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mesh, x, y, z)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GLNormalMesh</span></span></code></pre></div><p>Takes real vectors x, y, z and constructs a mesh out of those, under the assumption that every 3 points form a triangle.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[766]||(e[766]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L554-L559",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[766]})]),s("details",qt,[s("summary",null,[e[768]||(e[768]=s("a",{id:"Makie.convert_arguments-Tuple{Union{ImageLike, GridBased}, AbstractVector, AbstractVector, Function}",href:"#Makie.convert_arguments-Tuple{Union{ImageLike, GridBased}, AbstractVector, AbstractVector, Function}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[769]||(e[769]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[771]||(e[771]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x, y, f)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector, Vector, Matrix)</span></span></code></pre></div><p>Takes vectors <code>x</code> and <code>y</code> and the function <code>f</code>, and applies <code>f</code> on the grid that <code>x</code> and <code>y</code> span. This is equivalent to <code>f.(x, y&#39;)</code>. <code>P</code> is the plot Type (it is optional).</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[770]||(e[770]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L475-L481",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[770]})]),s("details",Gt,[s("summary",null,[e[772]||(e[772]=s("a",{id:"Makie.convert_arguments-Tuple{VolumeLike, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, Function}",href:"#Makie.convert_arguments-Tuple{VolumeLike, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, AbstractVector{T} where T<:Real, Function}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[773]||(e[773]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[775]||(e[775]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x, y, z, f)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector, Vector, Vector, Matrix)</span></span></code></pre></div><p>Takes <code>AbstractVector</code> <code>x</code>, <code>y</code>, and <code>z</code> and the function <code>f</code>, evaluates <code>f</code> on the volume spanned by <code>x</code>, <code>y</code> and <code>z</code>, and puts <code>x</code>, <code>y</code>, <code>z</code> and <code>f(x,y,z)</code> in a Tuple.</p><p><code>P</code> is the plot Type (it is optional).</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[774]||(e[774]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L682-L689",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[774]})]),s("details",Ut,[s("summary",null,[e[776]||(e[776]=s("a",{id:"Makie.convert_arguments-Union{Tuple{E}, Tuple{A}, Tuple{T}, Tuple{N}, Tuple{Type{<:LineSegments}, AbstractVector{E}}} where {N, T, A<:Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}}, E<:Union{Pair{A, A}, Tuple{A, A}}}",href:"#Makie.convert_arguments-Union{Tuple{E}, Tuple{A}, Tuple{T}, Tuple{N}, Tuple{Type{<:LineSegments}, AbstractVector{E}}} where {N, T, A<:Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}}, E<:Union{Pair{A, A}, Tuple{A, A}}}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[777]||(e[777]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[779]||(e[779]=s("p",null,[o("Accepts a Vector of Pair of Points (e.g. "),s("code",null,"[Point(0, 0) => Point(1, 1), ...]"),o(") to encode e.g. linesegments or directions.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[778]||(e[778]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L537-L540",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[778]})]),s("details",Ht,[s("summary",null,[e[780]||(e[780]=s("a",{id:"Makie.convert_arguments-Union{Tuple{T}, Tuple{Dim}, Tuple{PointBased, GeometryBasics.GeometryPrimitive{Dim, T}}} where {Dim, T}",href:"#Makie.convert_arguments-Union{Tuple{T}, Tuple{Dim}, Tuple{PointBased, GeometryBasics.GeometryPrimitive{Dim, T}}} where {Dim, T}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[781]||(e[781]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[783]||(e[783]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector)</span></span></code></pre></div><p>Takes an input GeometryPrimitive <code>x</code> and decomposes it to points. <code>P</code> is the plot Type (it is optional).</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[782]||(e[782]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L137-L142",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[782]})]),s("details",Wt,[s("summary",null,[e[784]||(e[784]=s("a",{id:"Makie.convert_arguments-Union{Tuple{T}, Tuple{N}, Tuple{PointBased, Union{GeometryBasics.MultiLineString{N, T}, AbstractVector{<:GeometryBasics.LineString{N, T}}, AbstractVector{<:GeometryBasics.MultiLineString{N, T}}}}} where {N, T}",href:"#Makie.convert_arguments-Union{Tuple{T}, Tuple{N}, Tuple{PointBased, Union{GeometryBasics.MultiLineString{N, T}, AbstractVector{<:GeometryBasics.LineString{N, T}}, AbstractVector{<:GeometryBasics.MultiLineString{N, T}}}}} where {N, T}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[785]||(e[785]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[787]||(e[787]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PB, Union{Array{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LineString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, MultiLineString})</span></span></code></pre></div><p>Takes an input <code>Array{LineString}</code> or a <code>MultiLineString</code> and decomposes it to points.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[786]||(e[786]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L220-L224",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[786]})]),s("details",Yt,[s("summary",null,[e[788]||(e[788]=s("a",{id:"Makie.convert_arguments-Union{Tuple{T}, Tuple{N}, Tuple{PointBased, Union{GeometryBasics.MultiPolygon{N, T}, Array{<:GeometryBasics.Polygon{N, T}}}}} where {N, T}",href:"#Makie.convert_arguments-Union{Tuple{T}, Tuple{N}, Tuple{PointBased, Union{GeometryBasics.MultiPolygon{N, T}, Array{<:GeometryBasics.Polygon{N, T}}}}} where {N, T}"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[789]||(e[789]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[791]||(e[791]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PB, Union{Array{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, MultiPolygon})</span></span></code></pre></div><p>Takes an input <code>Array{Polygon}</code> or a <code>MultiPolygon</code> and decomposes it to points.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[790]||(e[790]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L260-L265",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[790]})]),s("details",Kt,[s("summary",null,[e[792]||(e[792]=s("a",{id:"Makie.convert_arguments-Union{Tuple{T}, Tuple{PointBased, GeometryBasics.HyperRectangle{2, T}}} where T",href:"#Makie.convert_arguments-Union{Tuple{T}, Tuple{PointBased, GeometryBasics.HyperRectangle{2, T}}} where T"},[s("span",{class:"jlbinding"},"Makie.convert_arguments")],-1)),e[793]||(e[793]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[795]||(e[795]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P, x)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Vector)</span></span></code></pre></div><p>Takes an input <code>Rect</code> <code>x</code> and decomposes it to points.</p><p><code>P</code> is the plot Type (it is optional).</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[794]||(e[794]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L174-L180",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[794]})]),s("details",Qt,[s("summary",null,[e[796]||(e[796]=s("a",{id:"Makie.convert_attribute",href:"#Makie.convert_attribute"},[s("span",{class:"jlbinding"},"Makie.convert_attribute")],-1)),e[797]||(e[797]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[799]||(e[799]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value, attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, plottype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Convert <code>value</code> into a suitable domain for use as <code>attribute</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convert_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RGBA{Float32}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[798]||(e[798]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversion.jl#L1-L13",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[798]})]),s("details",$t,[s("summary",null,[e[800]||(e[800]=s("a",{id:"Makie.crossbar",href:"#Makie.crossbar"},[s("span",{class:"jlbinding"},"Makie.crossbar")],-1)),e[801]||(e[801]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[803]||(e[803]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">crossbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, ymin, ymax; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draw a crossbar. A crossbar represents a range with a (potentially notched) box. It is most commonly used as part of the <code>boxplot</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: position of the box</p></li><li><p><code>y</code>: position of the midline within the box</p></li><li><p><code>ymin</code>: lower limit of the box</p></li><li><p><code>ymax</code>: upper limit of the box</p></li></ul><p><strong>Plot type</strong></p><p>The plot type alias for the <code>crossbar</code> function is <code>CrossBar</code>.</p><p><strong>Attributes</strong></p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>dodge_gap</code></strong> = <code>0.03</code> — <em>No docs available.</em></p><p><strong><code>gap</code></strong> = <code>0.2</code> — Shrinking factor, <code>width -&gt; width * (1 - gap)</code>.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — <em>No docs available.</em></p><p><strong><code>midlinecolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>midlinewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>notchmax</code></strong> = <code>automatic</code> — Upper limit of the notch.</p><p><strong><code>notchmin</code></strong> = <code>automatic</code> — Lower limit of the notch.</p><p><strong><code>notchwidth</code></strong> = <code>0.5</code> — Multiplier of <code>width</code> for narrowest width of notch.</p><p><strong><code>orientation</code></strong> = <code>:vertical</code> — Orientation of box (<code>:vertical</code> or <code>:horizontal</code>).</p><p><strong><code>show_midline</code></strong> = <code>true</code> — Show midline.</p><p><strong><code>show_notch</code></strong> = <code>false</code> — Whether to draw the notch.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>width</code></strong> = <code>automatic</code> — Width of the box before shrinking.</p>',29)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[802]||(e[802]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L588",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[802]})]),s("details",Xt,[s("summary",null,[e[804]||(e[804]=s("a",{id:"Makie.crossbar!",href:"#Makie.crossbar!"},[s("span",{class:"jlbinding"},"Makie.crossbar!")],-1)),e[805]||(e[805]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[807]||(e[807]=s("p",null,[s("code",null,"crossbar!"),o(" is the mutating variant of plotting function "),s("code",null,"crossbar"),o(". Check the docstring for "),s("code",null,"crossbar"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[806]||(e[806]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[806]})]),s("details",Jt,[s("summary",null,[e[808]||(e[808]=s("a",{id:"Makie.current_axis!-Tuple{Any}",href:"#Makie.current_axis!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.current_axis!")],-1)),e[809]||(e[809]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[811]||(e[811]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_axis!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax)</span></span></code></pre></div><p>Set an axis <code>ax</code>, which must be part of a figure, as the figure&#39;s current active axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[810]||(e[810]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L76-L80",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[810]})]),s("details",Zt,[s("summary",null,[e[812]||(e[812]=s("a",{id:"Makie.current_axis!-Tuple{Figure, Any}",href:"#Makie.current_axis!-Tuple{Figure, Any}"},[s("span",{class:"jlbinding"},"Makie.current_axis!")],-1)),e[813]||(e[813]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[815]||(e[815]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_axis!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ax)</span></span></code></pre></div><p>Set <code>ax</code> as the current active axis in <code>fig</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[814]||(e[814]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L59-L63",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[814]})]),s("details",ei,[s("summary",null,[e[816]||(e[816]=s("a",{id:"Makie.current_axis-Tuple{}",href:"#Makie.current_axis-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.current_axis")],-1)),e[817]||(e[817]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[819]||(e[819]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the current active axis (or the last axis created). Returns <code>nothing</code> if there is no current active axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[818]||(e[818]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L51-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[818]})]),s("details",si,[s("summary",null,[e[820]||(e[820]=s("a",{id:"Makie.current_figure!-Tuple{Any}",href:"#Makie.current_figure!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.current_figure!")],-1)),e[821]||(e[821]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[823]||(e[823]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_figure!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig)</span></span></code></pre></div><p>Set <code>fig</code> as the current active figure.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[822]||(e[822]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L44-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[822]})]),s("details",ti,[s("summary",null,[e[824]||(e[824]=s("a",{id:"Makie.current_figure-Tuple{}",href:"#Makie.current_figure-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.current_figure")],-1)),e[825]||(e[825]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[827]||(e[827]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the current active figure (or the last figure created). Returns <code>nothing</code> if there is no current active figure.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[826]||(e[826]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L36-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[826]})]),s("details",ii,[s("summary",null,[e[828]||(e[828]=s("a",{id:"Makie.data_limits",href:"#Makie.data_limits"},[s("span",{class:"jlbinding"},"Makie.data_limits")],-1)),e[829]||(e[829]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[831]||(e[831]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data_limits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike[, exclude </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Returns the combined data limits of all plots collected under <code>scenelike</code> for which <code>exclude(plot) == false</code>. This is solely based on the positional data of a plot and thus does not include any transformations.</p><p>See also: <a href="/stable/api#Makie.boundingbox"><code>boundingbox</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[830]||(e[830]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/data_limits.jl#L16-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[830]})]),s("details",oi,[s("summary",null,[e[832]||(e[832]=s("a",{id:"Makie.datashader",href:"#Makie.datashader"},[s("span",{class:"jlbinding"},"Makie.datashader")],-1)),e[833]||(e[833]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[835]||(e[835]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datashader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;: Point}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This feature might change outside breaking releases, since the API is not yet finalized. Please be wary of bugs in the implementation and open issues if you encounter odd behaviour.</p></div><p>Points can be any array type supporting iteration &amp; getindex, including memory mapped arrays. If you have separate arrays for x and y coordinates and want to avoid conversion and copy, consider using:</p><div class="language-Julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StructArrays</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">points </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StructArray{Point2f}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((x, y))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datashader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points)</span></span></code></pre></div><p>Do pay attention though, that if x and y don&#39;t have a fast iteration/getindex implemented, this might be slower than just copying the data into a new array.</p><p>For best performance, use <code>method=Makie.AggThreads()</code> and make sure to start julia with <code>julia -tauto</code> or have the environment variable <code>JULIA_NUM_THREADS</code> set to the number of cores you have.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>datashader</code> function is <code>DataShader</code>.</p><p><strong>Attributes</strong></p><p><strong><code>agg</code></strong> = <code>AggCount{Float32}()</code> — Can be <code>AggCount()</code>, <code>AggAny()</code> or <code>AggMean()</code>. Be sure, to use the correct element type e.g. <code>AggCount{Float32}()</code>, which needs to accommodate the output of <code>local_operation</code>. User-extensible by overloading:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyAgg{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Makie.AggOp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MyAgg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MyAgg{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Aggregation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyAgg{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zero</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Aggregation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyAgg{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T, x)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Aggregation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyAgg{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Aggregation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyAgg{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span></code></pre></div><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>async</code></strong> = <code>true</code> — Will calculate <code>get_aggregation</code> in a task, and skip any zoom/pan updates while busy. Great for interaction, but must be disabled for saving to e.g. png or when inlining in Documenter.</p><p><strong><code>binsize</code></strong> = <code>1</code> — Factor defining how many bins one wants per screen pixel. Set to n &gt; 1 if you want a coarser image.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>false</code> — If the resulting image should be displayed interpolated. Note that interpolation can make NaN-adjacent bins also NaN in some backends, for example due to interpolation schemes used in GPU hardware. This can make it look like there are more NaN bins than there actually are.</p><p><strong><code>local_operation</code></strong> = <code>identity</code> — Function which gets called on each element after the aggregation (<code>map!(x-&gt; local_operation(x), final_aggregation_result)</code>).</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>method</code></strong> = <code>AggThreads()</code> — Can be <code>AggThreads()</code> or <code>AggSerial()</code> for threaded vs. serial aggregation.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>operation</code></strong> = <code>automatic</code> — Defaults to <code>Makie.equalize_histogram</code> function which gets called on the whole get_aggregation array before display (<code>operation(final_aggregation_result)</code>).</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>point_transform</code></strong> = <code>identity</code> — Function which gets applied to every point before aggregating it.</p><p><strong><code>show_timings</code></strong> = <code>false</code> — Set to <code>true</code> to show how long it takes to aggregate each frame.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[834]||(e[834]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L640",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[834]})]),s("details",ai,[s("summary",null,[e[836]||(e[836]=s("a",{id:"Makie.datashader!",href:"#Makie.datashader!"},[s("span",{class:"jlbinding"},"Makie.datashader!")],-1)),e[837]||(e[837]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[839]||(e[839]=s("p",null,[s("code",null,"datashader!"),o(" is the mutating variant of plotting function "),s("code",null,"datashader"),o(". Check the docstring for "),s("code",null,"datashader"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[838]||(e[838]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[838]})]),s("details",ni,[s("summary",null,[e[840]||(e[840]=s("a",{id:"Makie.deactivate_interaction!-Tuple{Any, Symbol}",href:"#Makie.deactivate_interaction!-Tuple{Any, Symbol}"},[s("span",{class:"jlbinding"},"Makie.deactivate_interaction!")],-1)),e[841]||(e[841]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[843]||(e[843]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">deactivate_interaction!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Deactivate the interaction named <code>name</code> registered in <code>parent</code>. It can be reactivated with <code>activate_interaction!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[842]||(e[842]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/interactions.jl#L75-L80",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[842]})]),s("details",li,[s("summary",null,[e[844]||(e[844]=s("a",{id:"Makie.dendrogram",href:"#Makie.dendrogram"},[s("span",{class:"jlbinding"},"Makie.dendrogram")],-1)),e[845]||(e[845]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[847]||(e[847]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dendrogram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions, merges)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dendrogram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, merges)</span></span></code></pre></div><p>Draw a <a href="https://en.wikipedia.org/wiki/Dendrogram" target="_blank" rel="noreferrer">dendrogram</a> with leaf nodes specified by <code>positions</code> and parent nodes identified by <code>merges</code>.</p><p><code>merges</code> contain pairs of indices <code>(i, j)</code> which connect to a new parent node. That node is then added to the list and can be merged with another.</p><p>Note that this recipe is still experimental and subject to change in the future.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>dendrogram</code> function is <code>Dendrogram</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>branch_shape</code></strong> = <code>:box</code> — Specifies how node connections are drawn. Can be <code>:tree</code> for direct lines or <code>:box</code> for rectangular lines. Other styles can be defined by overloading <code>dendrogram_connectors!(::Val{:mystyle}, points, parent, child1, child2)</code> which should add the points connecting the parent node to its children to <code>points</code>.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth</code></strong> = <code>automatic</code> — Scales the dendrogram so that the maximum distance between the root node and leaf nodes is <code>depth</code>. By default no scaling is applied, i.e. the depth or height of the dendrogram is derived from the given nodes and connections. (For this each parent node is at least 1 unit above its children.)</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>groups</code></strong> = <code>nothing</code> — Sets a group id for each leaf node. Branches that merge nodes of the same group will use their group to look up a color in the given colormap. Branches that merge different groups will use <code>ungrouped_color</code>.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>origin</code></strong> = <code>Point2d(0)</code> — Sets the position of the tree root.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>rotation</code></strong> = <code>:down</code> — Sets the rotation of the dendrogram, i.e. where the leaves are relative to the root. Can be <code>:down</code>, <code>:right</code>, <code>:up</code>, <code>:left</code> or a float.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>ungrouped_color</code></strong> = <code>:gray</code> — Sets the color of branches with mixed groups if groups are defined.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>width</code></strong> = <code>automatic</code> — Scales the dendrogram so that the maximum distance between leaf nodes is <code>width</code>. By default no scaling is applied, i.e. the width of the dendrogram is defined by its arguments.</p>`,43)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[846]||(e[846]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L645",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[846]})]),s("details",di,[s("summary",null,[e[848]||(e[848]=s("a",{id:"Makie.dendrogram!",href:"#Makie.dendrogram!"},[s("span",{class:"jlbinding"},"Makie.dendrogram!")],-1)),e[849]||(e[849]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[851]||(e[851]=s("p",null,[s("code",null,"dendrogram!"),o(" is the mutating variant of plotting function "),s("code",null,"dendrogram"),o(". Check the docstring for "),s("code",null,"dendrogram"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[850]||(e[850]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[850]})]),s("details",ri,[s("summary",null,[e[852]||(e[852]=s("a",{id:"Makie.density",href:"#Makie.density"},[s("span",{class:"jlbinding"},"Makie.density")],-1)),e[853]||(e[853]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[855]||(e[855]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">density</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span></code></pre></div><p>Plot a kernel density estimate of <code>values</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>density</code> function is <code>Density</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in plot(alpha=0.2, color=(:red, 0.5), will get multiplied.</p><p><strong><code>bandwidth</code></strong> = <code>automatic</code> — Kernel density bandwidth, determined automatically if <code>automatic</code>.</p><p><strong><code>boundary</code></strong> = <code>automatic</code> — Boundary of the density estimation, determined automatically if <code>automatic</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Usually set to a single color, but can also be set to <code>:x</code> or <code>:y</code> to color with a gradient. If you use <code>:y</code> when <code>direction = :x</code> (or vice versa), note that only 2-element colormaps can work correctly.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>Makie.automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>direction</code></strong> = <code>:x</code> — The dimension along which the <code>values</code> are distributed. Can be <code>:x</code> or <code>:y</code>.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>npoints</code></strong> = <code>200</code> — The resolution of the estimated curve along the dimension set in <code>direction</code>.</p><p><strong><code>offset</code></strong> = <code>0.0</code> — Shift the density baseline, for layering multiple densities on top of each other.</p><p><strong><code>strokearound</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>weights</code></strong> = <code>automatic</code> — Assign a vector of statistical weights to <code>values</code>.</p>',23)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[854]||(e[854]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L578",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[854]})]),s("details",ci,[s("summary",null,[e[856]||(e[856]=s("a",{id:"Makie.density!",href:"#Makie.density!"},[s("span",{class:"jlbinding"},"Makie.density!")],-1)),e[857]||(e[857]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[859]||(e[859]=s("p",null,[s("code",null,"density!"),o(" is the mutating variant of plotting function "),s("code",null,"density"),o(". Check the docstring for "),s("code",null,"density"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[858]||(e[858]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[858]})]),s("details",pi,[s("summary",null,[e[860]||(e[860]=s("a",{id:"Makie.deregister_interaction!-Tuple{Any, Symbol}",href:"#Makie.deregister_interaction!-Tuple{Any, Symbol}"},[s("span",{class:"jlbinding"},"Makie.deregister_interaction!")],-1)),e[861]||(e[861]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[863]||(e[863]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">deregister_interaction!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Deregister the interaction named <code>name</code> registered in <code>parent</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[862]||(e[862]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/interactions.jl#L42-L46",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[862]})]),s("details",hi,[s("summary",null,[e[864]||(e[864]=s("a",{id:"Makie.ecdfplot",href:"#Makie.ecdfplot"},[s("span",{class:"jlbinding"},"Makie.ecdfplot")],-1)),e[865]||(e[865]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[867]||(e[867]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ecdfplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values; npoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, weights])</span></span></code></pre></div><p>Plot the empirical cumulative distribution function (ECDF) of <code>values</code>.</p><p><code>npoints</code> controls the resolution of the plot. If <code>weights</code> for the values are provided, a weighted ECDF is plotted.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>ecdfplot</code> function is <code>ECDFPlot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>step</code></strong> = <code>:pre</code> — The <code>step</code> parameter can take the following values:</p><ul><li><p><code>:pre</code>: horizontal part of step extends to the left of each value in <code>xs</code>.</p></li><li><p><code>:post</code>: horizontal part of step extends to the right of each value in <code>xs</code>.</p></li><li><p><code>:center</code>: horizontal part of step extends halfway between the two adjacent values of <code>xs</code>.</p></li></ul><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[866]||(e[866]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L618",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[866]})]),s("details",ki,[s("summary",null,[e[868]||(e[868]=s("a",{id:"Makie.ecdfplot!",href:"#Makie.ecdfplot!"},[s("span",{class:"jlbinding"},"Makie.ecdfplot!")],-1)),e[869]||(e[869]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[871]||(e[871]=s("p",null,[s("code",null,"ecdfplot!"),o(" is the mutating variant of plotting function "),s("code",null,"ecdfplot"),o(". Check the docstring for "),s("code",null,"ecdfplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[870]||(e[870]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[870]})]),s("details",gi,[s("summary",null,[e[872]||(e[872]=s("a",{id:"Makie.errorbars",href:"#Makie.errorbars"},[s("span",{class:"jlbinding"},"Makie.errorbars")],-1)),e[873]||(e[873]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[875]||(e[875]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, error_both; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, error_low, error_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, error_low_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy, error_both; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy, error_low, error_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy, error_low_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy_error_both; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errorbars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xy_error_low_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots errorbars at xy positions, extending by errors in the given <code>direction</code>.</p><p>If you want to plot intervals from low to high values instead of relative errors, use <code>rangebars</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>errorbars</code> function is <code>Errorbars</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the lines. Can be an array to color each bar separately.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>direction</code></strong> = <code>:y</code> — The direction in which the bars are drawn. Can be <code>:x</code> or <code>:y</code>.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — The thickness of the lines in screen units.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>whiskerwidth</code></strong> = <code>0</code> — The width of the whiskers or line caps in screen units.</p>`,33)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[874]||(e[874]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L609",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[874]})]),s("details",ui,[s("summary",null,[e[876]||(e[876]=s("a",{id:"Makie.errorbars!",href:"#Makie.errorbars!"},[s("span",{class:"jlbinding"},"Makie.errorbars!")],-1)),e[877]||(e[877]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[879]||(e[879]=s("p",null,[s("code",null,"errorbars!"),o(" is the mutating variant of plotting function "),s("code",null,"errorbars"),o(". Check the docstring for "),s("code",null,"errorbars"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[878]||(e[878]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[878]})]),s("details",bi,[s("summary",null,[e[880]||(e[880]=s("a",{id:"Makie.fill_between!-NTuple{4, Any}",href:"#Makie.fill_between!-NTuple{4, Any}"},[s("span",{class:"jlbinding"},"Makie.fill_between!")],-1)),e[881]||(e[881]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[883]||(e[883]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fill_between!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike, x, y1, y2; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kw_args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>fill the section between 2 lines with the condition <code>where</code></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[882]||(e[882]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/band.jl#L85-L89",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[882]})]),s("details",yi,[s("summary",null,[e[884]||(e[884]=s("a",{id:"Makie.get_lights-Tuple{Any}",href:"#Makie.get_lights-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.get_lights")],-1)),e[885]||(e[885]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[887]||(e[887]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_lights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike)</span></span></code></pre></div><p>Returns the current lights vector of the scene. The ambient light is not included in here.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[886]||(e[886]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L419-L424",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[886]})]),s("details",fi,[s("summary",null,[e[888]||(e[888]=s("a",{id:"Makie.heatmap",href:"#Makie.heatmap"},[s("span",{class:"jlbinding"},"Makie.heatmap")],-1)),e[889]||(e[889]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[891]||(e[891]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, matrix)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, func)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(matrix)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xvector, yvector, zvector)</span></span></code></pre></div><p>Plots a heatmap as a collection of rectangles. <code>x</code> and <code>y</code> can either be of length <code>i</code> and <code>j</code> where <code>(i, j)</code> is <code>size(matrix)</code>, in this case the rectangles will be placed around these grid points like voronoi cells. Note that for irregularly spaced <code>x</code> and <code>y</code>, the points specified by them are not centered within the resulting rectangles.</p><p><code>x</code> and <code>y</code> can also be of length <code>i+1</code> and <code>j+1</code>, in this case they are interpreted as the edges of the rectangles.</p><p>Colors of the rectangles are derived from <code>matrix[i, j]</code>. The third argument may also be a <code>Function</code> (i, j) -&gt; v which is then evaluated over the grid spanned by <code>x</code> and <code>y</code>.</p><p>Another allowed form is using three vectors <code>xvector</code>, <code>yvector</code> and <code>zvector</code>. In this case it is assumed that no pair of elements <code>x</code> and <code>y</code> exists twice. Pairs that are missing from the resulting grid will be treated as if <code>zvector</code> had a <code>NaN</code> element at that position.</p><p>If <code>x</code> and <code>y</code> are omitted with a matrix argument, they default to <code>x, y = axes(matrix)</code>.</p><p>Note that <code>heatmap</code> is slower to render than <code>image</code> so <code>image</code> should be preferred for large, regularly spaced grids.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>heatmap</code> function is <code>Heatmap</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>false</code> — Sets whether colors should be interpolated</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,32)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[890]||(e[890]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L601",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[890]})]),s("details",mi,[s("summary",null,[e[892]||(e[892]=s("a",{id:"Makie.heatmap!",href:"#Makie.heatmap!"},[s("span",{class:"jlbinding"},"Makie.heatmap!")],-1)),e[893]||(e[893]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[895]||(e[895]=s("p",null,[s("code",null,"heatmap!"),o(" is the mutating variant of plotting function "),s("code",null,"heatmap"),o(". Check the docstring for "),s("code",null,"heatmap"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[894]||(e[894]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[894]})]),s("details",Ei,[s("summary",null,[e[896]||(e[896]=s("a",{id:"Makie.help-Tuple{Any}",href:"#Makie.help-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.help")],-1)),e[897]||(e[897]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[899]||(e[899]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func[; extended </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Welcome to the main help function of <code>Makie.jl</code> / <code>Makie.jl</code>.</p><p>For help on a specific function&#39;s arguments, type <code>help_arguments(function_name)</code>.</p><p>For help on a specific function&#39;s attributes, type <code>help_attributes(plot_Type)</code>.</p><p>Use the optional <code>extended = true</code> keyword argument to see more details.</p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[898]||(e[898]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/documentation/documentation.jl#L4-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[898]})]),s("details",vi,[s("summary",null,[e[900]||(e[900]=s("a",{id:"Makie.help_arguments-Tuple{Any}",href:"#Makie.help_arguments-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.help_arguments")],-1)),e[901]||(e[901]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[903]||(e[903]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">help_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([io], func)</span></span></code></pre></div><p>Returns a list of signatures for function <code>func</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[902]||(e[902]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/documentation/documentation.jl#L54-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[902]})]),s("details",_i,[s("summary",null,[e[904]||(e[904]=s("a",{id:"Makie.help_attributes-Tuple{Any}",href:"#Makie.help_attributes-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.help_attributes")],-1)),e[905]||(e[905]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[907]||(e[907]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">help_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([io], Union{PlotType, PlotFunction}; extended </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a list of attributes for the plot type <code>Typ</code>. The attributes returned extend those attributes found in the <code>default_theme</code>.</p><p>Use the optional keyword argument <code>extended</code> (default = <code>false</code>) to show in addition the default values of each attribute. usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">help_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scatter)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alpha</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colormap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colorrange</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    distancefield</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    glowcolor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    glowwidth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    linewidth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    marker</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    marker_offset</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    markersize</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    overdraw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rotations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strokecolor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strokewidth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    transform_marker</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    transparency</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    uv_offset_width</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible</span></span></code></pre></div>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[906]||(e[906]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/documentation/documentation.jl#L73-L104",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[906]})]),s("details",Ti,[s("summary",null,[e[908]||(e[908]=s("a",{id:"Makie.hexbin",href:"#Makie.hexbin"},[s("span",{class:"jlbinding"},"Makie.hexbin")],-1)),e[909]||(e[909]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[911]||(e[911]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hexbin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a heatmap with hexagonal bins for the observations <code>xs</code> and <code>ys</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hexbin</code> function is <code>Hexbin</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>bins</code></strong> = <code>20</code> — If an <code>Int</code>, sets the number of bins in x and y direction. If a <code>NTuple{2, Int}</code>, sets the number of bins for x and y separately.</p><p><strong><code>cellsize</code></strong> = <code>nothing</code> — If a <code>Real</code>, makes equally-sided hexagons with width <code>cellsize</code>. If a <code>Tuple{Real, Real}</code> specifies hexagon width and height separately.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>strokecolor</code></strong> = <code>:black</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>0</code> — <em>No docs available.</em></p><p><strong><code>threshold</code></strong> = <code>1</code> — The minimal number of observations in the bin to be shown. If 0, all zero-count hexagons fitting into the data limits will be shown.</p><p><strong><code>weights</code></strong> = <code>nothing</code> — Weights for each observation. Can be <code>nothing</code> (each observation carries weight 1) or any <code>AbstractVector{&lt;: Real}</code> or <code>StatsBase.AbstractWeights</code>.</p>',18)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[910]||(e[910]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L567",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[910]})]),s("details",ji,[s("summary",null,[e[912]||(e[912]=s("a",{id:"Makie.hexbin!",href:"#Makie.hexbin!"},[s("span",{class:"jlbinding"},"Makie.hexbin!")],-1)),e[913]||(e[913]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[915]||(e[915]=s("p",null,[s("code",null,"hexbin!"),o(" is the mutating variant of plotting function "),s("code",null,"hexbin"),o(". Check the docstring for "),s("code",null,"hexbin"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[914]||(e[914]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[914]})]),s("details",Mi,[s("summary",null,[e[916]||(e[916]=s("a",{id:"Makie.hidedecorations!",href:"#Makie.hidedecorations!"},[s("span",{class:"jlbinding"},"Makie.hidedecorations!")],-1)),e[917]||(e[917]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[919]||(e[919]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidedecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of both x and y-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p><p>See also [<code>hidexdecorations!</code>], [<code>hideydecorations!</code>], [<code>hidezdecorations!</code>]</p>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[918]||(e[918]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1147-L1155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[918]})]),s("details",Ci,[s("summary",null,[e[920]||(e[920]=s("a",{id:"Makie.hidedecorations!-Tuple{PolarAxis}",href:"#Makie.hidedecorations!-Tuple{PolarAxis}"},[s("span",{class:"jlbinding"},"Makie.hidedecorations!")],-1)),e[921]||(e[921]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[923]||(e[923]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidedecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of both r and theta-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p><p>See also [<code>hiderdecorations!</code>], [<code>hidethetadecorations!</code>], [<code>hidezdecorations!</code>]</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[922]||(e[922]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L1063-L1070",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[922]})]),s("details",Fi,[s("summary",null,[e[924]||(e[924]=s("a",{id:"Makie.hiderdecorations!-Tuple{PolarAxis}",href:"#Makie.hiderdecorations!-Tuple{PolarAxis}"},[s("span",{class:"jlbinding"},"Makie.hiderdecorations!")],-1)),e[925]||(e[925]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[927]||(e[927]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hiderdecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of the r-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[926]||(e[926]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L1027-L1032",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[926]})]),s("details",wi,[s("summary",null,[e[928]||(e[928]=s("a",{id:"Makie.hidespines!-Tuple{Axis, Vararg{Symbol}}",href:"#Makie.hidespines!-Tuple{Axis, Vararg{Symbol}}"},[s("span",{class:"jlbinding"},"Makie.hidespines!")],-1)),e[929]||(e[929]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[931]||(e[931]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidespines!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, spines</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide all specified axis spines. Hides all spines by default, otherwise choose which sides to hide with the symbols :l (left), :r (right), :b (bottom) and :t (top).</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[930]||(e[930]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1170-L1176",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[930]})]),s("details",xi,[s("summary",null,[e[932]||(e[932]=s("a",{id:"Makie.hidethetadecorations!-Tuple{PolarAxis}",href:"#Makie.hidethetadecorations!-Tuple{PolarAxis}"},[s("span",{class:"jlbinding"},"Makie.hidethetadecorations!")],-1)),e[933]||(e[933]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[935]||(e[935]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidethetadecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of the theta-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[934]||(e[934]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L1045-L1050",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[934]})]),s("details",Ai,[s("summary",null,[e[936]||(e[936]=s("a",{id:"Makie.hidexdecorations!",href:"#Makie.hidexdecorations!"},[s("span",{class:"jlbinding"},"Makie.hidexdecorations!")],-1)),e[937]||(e[937]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[939]||(e[939]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidexdecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of the x-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[938]||(e[938]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1085-L1091",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[938]})]),s("details",Si,[s("summary",null,[e[940]||(e[940]=s("a",{id:"Makie.hideydecorations!",href:"#Makie.hideydecorations!"},[s("span",{class:"jlbinding"},"Makie.hideydecorations!")],-1)),e[941]||(e[941]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[943]||(e[943]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hideydecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minorgrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, minorticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of the y-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[942]||(e[942]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1116-L1122",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[942]})]),s("details",Di,[s("summary",null,[e[944]||(e[944]=s("a",{id:"Makie.hidezdecorations!-Tuple{Axis3}",href:"#Makie.hidezdecorations!-Tuple{Axis3}"},[s("span",{class:"jlbinding"},"Makie.hidezdecorations!")],-1)),e[945]||(e[945]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[947]||(e[947]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidezdecorations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticklabels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ticks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Hide decorations of the z-axis: label, ticklabels, ticks and grid. Keyword arguments can be used to disable hiding of certain types of decorations.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[946]||(e[946]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis3d.jl#L872-L877",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[946]})]),s("details",Bi,[s("summary",null,[e[948]||(e[948]=s("a",{id:"Makie.hist",href:"#Makie.hist"},[s("span",{class:"jlbinding"},"Makie.hist")],-1)),e[949]||(e[949]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[951]||(e[951]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span></code></pre></div><p>Plot a histogram of <code>values</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hist</code> function is <code>Hist</code>.</p><p><strong>Attributes</strong></p><p><strong><code>bar_labels</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>bins</code></strong> = <code>15</code> — Can be an <code>Int</code> to create that number of equal-width bins over the range of <code>values</code>. Alternatively, it can be a sorted iterable of bin edges.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Color can either be:</p><ul><li><p>a vector of <code>bins</code> colors</p></li><li><p>a single color</p></li><li><p><code>:values</code>, to color the bars with the values from the histogram</p></li></ul><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>direction</code></strong> = <code>:y</code> — Set the direction of the bars.</p><p><strong><code>fillto</code></strong> = <code>automatic</code> — Defines where the bars start.</p><p><strong><code>flip_labels_at</code></strong> = <code>Inf</code> — <em>No docs available.</em></p><p><strong><code>gap</code></strong> = <code>0</code> — Gap between the bars (see barplot).</p><p><strong><code>label_color</code></strong> = <code>@inherit textcolor</code> — <em>No docs available.</em></p><p><strong><code>label_font</code></strong> = <code>@inherit font</code> — <em>No docs available.</em></p><p><strong><code>label_formatter</code></strong> = <code>bar_label_formatter</code> — <em>No docs available.</em></p><p><strong><code>label_offset</code></strong> = <code>5</code> — <em>No docs available.</em></p><p><strong><code>label_size</code></strong> = <code>20</code> — <em>No docs available.</em></p><p><strong><code>normalization</code></strong> = <code>:none</code> — Allows to normalize the histogram. Possible values are:</p><ul><li><p><code>:pdf</code>: Normalize by sum of weights and bin sizes. Resulting histogram has norm 1 and represents a PDF.</p></li><li><p><code>:density</code>: Normalize by bin sizes only. Resulting histogram represents count density of input and does not have norm 1. Will not modify the histogram if it already represents a density (<code>h.isdensity == 1</code>).</p></li><li><p><code>:probability</code>: Normalize by sum of weights only. Resulting histogram represents the fraction of probability mass for each bin and does not have norm 1.</p></li><li><p><code>:none</code>: Do not normalize.</p></li></ul><p><strong><code>offset</code></strong> = <code>0.0</code> — Adds an offset to every value.</p><p><strong><code>over_background_color</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>over_bar_color</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>scale_to</code></strong> = <code>nothing</code> — Allows to scale all values to a certain height. This can also be set to <code>:flip</code> to flip the direction of histogram bars without scaling them to a common height.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>weights</code></strong> = <code>automatic</code> — Allows to statistically weight the observations.</p>',28)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[950]||(e[950]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L598",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[950]})]),s("details",Li,[s("summary",null,[e[952]||(e[952]=s("a",{id:"Makie.hist!",href:"#Makie.hist!"},[s("span",{class:"jlbinding"},"Makie.hist!")],-1)),e[953]||(e[953]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[955]||(e[955]=s("p",null,[s("code",null,"hist!"),o(" is the mutating variant of plotting function "),s("code",null,"hist"),o(". Check the docstring for "),s("code",null,"hist"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[954]||(e[954]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[954]})]),s("details",Pi,[s("summary",null,[e[956]||(e[956]=s("a",{id:"Makie.hlines",href:"#Makie.hlines"},[s("span",{class:"jlbinding"},"Makie.hlines")],-1)),e[957]||(e[957]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[959]||(e[959]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hlines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ys; xmin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xmax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create horizontal lines across a <code>Scene</code> with 2D projection. The lines will be placed at <code>ys</code> in data coordinates and <code>xmin</code> to <code>xmax</code> in scene coordinates (0 to 1). All three of these can have single or multiple values because they are broadcast to calculate the final line segments.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hlines</code> function is <code>HLines</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of linecap used, i.e. :butt (flat with no extrusion), :square (flat with 1 linewidth extrusion) or :round.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in pixel units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>xmax</code></strong> = <code>1</code> — The end of the lines in relative axis units (0 to 1) along the x dimension.</p><p><strong><code>xmin</code></strong> = <code>0</code> — The start of the lines in relative axis units (0 to 1) along the x dimension.</p>',34)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[958]||(e[958]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L605",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[958]})]),s("details",Ii,[s("summary",null,[e[960]||(e[960]=s("a",{id:"Makie.hlines!",href:"#Makie.hlines!"},[s("span",{class:"jlbinding"},"Makie.hlines!")],-1)),e[961]||(e[961]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[963]||(e[963]=s("p",null,[s("code",null,"hlines!"),o(" is the mutating variant of plotting function "),s("code",null,"hlines"),o(". Check the docstring for "),s("code",null,"hlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[962]||(e[962]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[962]})]),s("details",Oi,[s("summary",null,[e[964]||(e[964]=s("a",{id:"Makie.hovered_scene-Tuple{}",href:"#Makie.hovered_scene-Tuple{}"},[s("span",{class:"jlbinding"},"Makie.hovered_scene")],-1)),e[965]||(e[965]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[967]||(e[967]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hovered_scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the <code>scene</code> that the mouse is currently hovering over.</p><p>Properly identifies the scene for a plot with multiple sub-plots.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[966]||(e[966]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L231-L237",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[966]})]),s("details",Vi,[s("summary",null,[e[968]||(e[968]=s("a",{id:"Makie.hspan",href:"#Makie.hspan"},[s("span",{class:"jlbinding"},"Makie.hspan")],-1)),e[969]||(e[969]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[971]||(e[971]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ys_low, ys_high; xmin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xmax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ys_lowhigh; xmin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xmax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create horizontal bands spanning across a <code>Scene</code> with 2D projection. The bands will be placed from <code>ys_low</code> to <code>ys_high</code> in data coordinates and <code>xmin</code> to <code>xmax</code> in scene coordinates (0 to 1). All four of these can have single or multiple values because they are broadcast to calculate the final spans. Both bounds can be passed together as an interval <code>ys_lowhigh</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>hspan</code> function is <code>HSpan</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Sets the color of the poly. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors or a single <code>Colorant</code>. A <code>Matrix{&lt;:Colorant}</code> can be used to color the mesh with a texture, which requires the mesh to contain texture coordinates. Vector or Matrices of numbers can be used as well, which will use the colormap arguments to map the numbers to colors. One can also use a <code>&lt;: AbstractPattern</code>, to cover the poly with a regular pattern, e.g. for hatching.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stroke_depth_shift</code></strong> = <code>-1.0e-5</code> — Depth shift of stroke plot. This is useful to avoid z-fighting between the stroke and the fill.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokecolormap</code></strong> = <code>@inherit colormap</code> — Sets the colormap that is sampled for numeric <code>color</code>s.</p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — Sets the width of the outline.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>xmax</code></strong> = <code>1</code> — The end of the bands in relative axis units (0 to 1) along the x dimension.</p><p><strong><code>xmin</code></strong> = <code>0</code> — The start of the bands in relative axis units (0 to 1) along the x dimension.</p>`,40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[970]||(e[970]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L623",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[970]})]),s("details",Ni,[s("summary",null,[e[972]||(e[972]=s("a",{id:"Makie.hspan!",href:"#Makie.hspan!"},[s("span",{class:"jlbinding"},"Makie.hspan!")],-1)),e[973]||(e[973]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[975]||(e[975]=s("p",null,[s("code",null,"hspan!"),o(" is the mutating variant of plotting function "),s("code",null,"hspan"),o(". Check the docstring for "),s("code",null,"hspan"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[974]||(e[974]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[974]})]),s("details",Ri,[s("summary",null,[e[976]||(e[976]=s("a",{id:"Makie.image",href:"#Makie.image"},[s("span",{class:"jlbinding"},"Makie.image")],-1)),e[977]||(e[977]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[979]||(e[979]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, image)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image)</span></span></code></pre></div><p>Plots an image on a rectangle bounded by <code>x</code> and <code>y</code> (defaults to size of image).</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>image</code> function is <code>Image</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>[:black, :white]</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — Sets whether colors should be interpolated between pixels.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>automatic</code> — Sets a transform for uv coordinates, which controls how the image is mapped to its rectangular area. The attribute can be <code>I</code>, <code>scale::VecTypes{2}</code>, <code>(translation::VecTypes{2}, scale::VecTypes{2})</code>, any of <code>:rotr90</code>, <code>:rotl90</code>, <code>:rot180</code>, <code>:swap_xy</code>/<code>:transpose</code>, <code>:flip_x</code>, <code>:flip_y</code>, <code>:flip_xy</code>, or most generally a <code>Makie.Mat{2, 3, Float32}</code> or <code>Makie.Mat3f</code> as returned by <code>Makie.uv_transform()</code>. They can also be changed by passing a tuple <code>(op3, op2, op1)</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,28)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[978]||(e[978]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L596",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[978]})]),s("details",zi,[s("summary",null,[e[980]||(e[980]=s("a",{id:"Makie.image!",href:"#Makie.image!"},[s("span",{class:"jlbinding"},"Makie.image!")],-1)),e[981]||(e[981]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[983]||(e[983]=s("p",null,[s("code",null,"image!"),o(" is the mutating variant of plotting function "),s("code",null,"image"),o(". Check the docstring for "),s("code",null,"image"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[982]||(e[982]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[982]})]),s("details",qi,[s("summary",null,[e[984]||(e[984]=s("a",{id:"Makie.is_mouseinside-Tuple{Any}",href:"#Makie.is_mouseinside-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.is_mouseinside")],-1)),e[985]||(e[985]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[987]||(e[987]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_mouseinside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns true if the current mouseposition is inside the given scene.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[986]||(e[986]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera.jl#L115-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[986]})]),s("details",Gi,[s("summary",null,[e[988]||(e[988]=s("a",{id:"Makie.ispressed",href:"#Makie.ispressed"},[s("span",{class:"jlbinding"},"Makie.ispressed")],-1)),e[989]||(e[989]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[991]||(e[991]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispressed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, waspressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispressed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Mouse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Button, Keyboard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Button[, waspressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispressed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, collection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Set, Vector, Tuple}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, waspressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispressed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, op</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BooleanOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, waspressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>This function checks if a button or combination of buttons is pressed.</p><p>If given a true or false, <code>ispressed</code> will return true or false respectively. This provides a way to turn an interaction &quot;always on&quot; or &quot;always off&quot; from the outside.</p><p>Passing a button or collection of buttons such as <code>Keyboard.enter</code> or <code>Mouse.left</code> will return true if all of the given buttons are pressed.</p><p>Parent can be any object that has <code>get_scene</code> method implemented, which includes e.g. Figure, Axis, Axis3, Lscene, FigureAxisPlot, and AxisPlot.</p><p>For more complicated combinations of buttons they can be combined into boolean expression with <code>&amp;</code>, <code>|</code> and <code>!</code>. For example, you can have <code>ispressed(parent, !Keyboard.left_control &amp; Keyboard.c))</code> and <code>ispressed(parent, Keyboard.left_control &amp; Keyboard.c)</code> to avoid triggering both cases at the same time.</p><p>Furthermore you can also make any button, button collection or boolean expression exclusive by wrapping it in <code>Exclusively(...)</code>. With that <code>ispressed</code> will only return true if the currently pressed buttons match the request exactly.</p><p>For cases where you want to react to a release event you can optionally add a key or mousebutton <code>waspressed</code> which is then assumed to be pressed regardless of it&#39;s current state. For example, when reacting to a mousebutton event, you can pass <code>event.button</code> so that a key combination including that button still evaluates as true.</p><p>See also: <a href="/stable/api#Makie.And"><code>And</code></a>, <a href="/stable/api#Makie.Or"><code>Or</code></a>, <a href="/stable/api#Makie.Not"><code>Not</code></a>, <a href="/stable/api#Makie.Exclusively"><code>Exclusively</code></a>, <code>&amp;</code>, <code>|</code>, <code>!</code></p>`,9)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[990]||(e[990]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L251-L287",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[990]})]),s("details",Ui,[s("summary",null,[e[992]||(e[992]=s("a",{id:"Makie.labelslider!-Tuple{Any, Any, Any}",href:"#Makie.labelslider!-Tuple{Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.labelslider!")],-1)),e[993]||(e[993]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[995]||(e[995]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">labelslider!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, label, range; format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string, sliderkw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">labelkw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), valuekw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), value_column_width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> automatic, layoutkw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong><code>labelslider!</code> is deprecated, use <code>SliderGrid</code> instead</strong></p><p>Construct a horizontal GridLayout with a label, a slider and a value label in <code>scene</code>.</p><p>Returns a <code>NamedTuple</code>:</p><p><code>(slider = slider, label = label, valuelabel = valuelabel, layout = layout)</code></p><p>Specify a format function for the value label with the <code>format</code> keyword or pass a format string used by <code>Format.format</code>. The slider is forwarded the keywords from <code>sliderkw</code>. The label is forwarded the keywords from <code>labelkw</code>. The value label is forwarded the keywords from <code>valuekw</code>. You can set the column width for the value label column with the keyword <code>value_column_width</code>. By default, the width is determined heuristically by sampling a few values from the slider range. All other keywords are forwarded to the <code>GridLayout</code>.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> labelslider!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Voltage:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(x)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layout[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layout</span></span></code></pre></div>`,8)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[994]||(e[994]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/helpers.jl#L321-L347",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[994]})]),s("details",Hi,[s("summary",null,[e[996]||(e[996]=s("a",{id:"Makie.labelslidergrid!-Tuple{Any, Any, Any}",href:"#Makie.labelslidergrid!-Tuple{Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.labelslidergrid!")],-1)),e[997]||(e[997]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[999]||(e[999]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">labelslidergrid!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, labels, ranges; formats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [string],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sliderkw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), labelkw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), valuekw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value_column_width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> automatic, layoutkw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong><code>labelslidergrid!</code> is deprecated, use <code>SliderGrid</code> instead</strong></p><p>Construct a GridLayout with a column of label, a column of sliders and a column of value labels in <code>scene</code>. The argument values are broadcast, so you can use scalars if you want to keep labels, ranges or formats constant across rows.</p><p>Returns a <code>NamedTuple</code>:</p><p><code>(sliders = sliders, labels = labels, valuelabels = valuelabels, layout = layout)</code></p><p>Specify format functions for the value labels with the <code>formats</code> keyword or pass format strings used by <code>Format.format</code>. The sliders are forwarded the keywords from <code>sliderkw</code>. The labels are forwarded the keywords from <code>labelkw</code>. The value labels are forwarded the keywords from <code>valuekw</code>. You can set the column width for the value label column with the keyword <code>value_column_width</code>. By default, the width is determined heuristically by sampling a few values from the slider ranges. All other keywords are forwarded to the <code>GridLayout</code>.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> labelslidergrid!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Voltage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ampere&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(x)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">V&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layout[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">layout</span></span></code></pre></div>`,8)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[998]||(e[998]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/helpers.jl#L380-L408",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[998]})]),s("details",Wi,[s("summary",null,[e[1e3]||(e[1e3]=s("a",{id:"Makie.left_subsup-Tuple",href:"#Makie.left_subsup-Tuple"},[s("span",{class:"jlbinding"},"Makie.left_subsup")],-1)),e[1001]||(e[1001]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1003]||(e[1003]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left_subsup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(subscript, superscript; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>RichText</code> object representing a left subscript/superscript combination, where both scripts are right-aligned against the following text.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1002]||(e[1002]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/text.jl#L834-L839",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1002]})]),s("details",Yi,[s("summary",null,[e[1004]||(e[1004]=s("a",{id:"Makie.limits!-Tuple{Axis, Any, Any}",href:"#Makie.limits!-Tuple{Axis, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1005]||(e[1005]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1007]||(e[1007]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xlims, ylims)</span></span></code></pre></div><p>Set the axis limits to <code>xlims</code> and <code>ylims</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1006]||(e[1006]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1368-L1373",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1006]})]),s("details",Ki,[s("summary",null,[e[1008]||(e[1008]=s("a",{id:"Makie.limits!-Tuple{Axis, GeometryBasics.HyperRectangle{2}}",href:"#Makie.limits!-Tuple{Axis, GeometryBasics.HyperRectangle{2}}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1009]||(e[1009]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1011]||(e[1011]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rect2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the axis limits to <code>rect</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1010]||(e[1010]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1390-L1395",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1010]})]),s("details",Qi,[s("summary",null,[e[1012]||(e[1012]=s("a",{id:"Makie.limits!-Tuple{Axis, Vararg{Any, 4}}",href:"#Makie.limits!-Tuple{Axis, Vararg{Any, 4}}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1013]||(e[1013]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1015]||(e[1015]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x1, x2, y1, y2)</span></span></code></pre></div><p>Set the axis x-limits to <code>x1</code> and <code>x2</code> and the y-limits to <code>y1</code> and <code>y2</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1014]||(e[1014]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1379-L1384",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1014]})]),s("details",$i,[s("summary",null,[e[1016]||(e[1016]=s("a",{id:"Makie.limits!-Tuple{Axis3, Any, Any, Any}",href:"#Makie.limits!-Tuple{Axis3, Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1017]||(e[1017]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1019]||(e[1019]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xlims, ylims, zlims)</span></span></code></pre></div><p>Set the axis limits to <code>xlims</code>, <code>ylims</code>, and <code>zlims</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1018]||(e[1018]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis3d.jl#L1053-L1058",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1018]})]),s("details",Xi,[s("summary",null,[e[1020]||(e[1020]=s("a",{id:"Makie.limits!-Tuple{Axis3, GeometryBasics.HyperRectangle{3}}",href:"#Makie.limits!-Tuple{Axis3, GeometryBasics.HyperRectangle{3}}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1021]||(e[1021]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1023]||(e[1023]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rect3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the axis limits to <code>rect</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1022]||(e[1022]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis3d.jl#L1078-L1083",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1022]})]),s("details",Ji,[s("summary",null,[e[1024]||(e[1024]=s("a",{id:"Makie.limits!-Tuple{Axis3, Vararg{Any, 6}}",href:"#Makie.limits!-Tuple{Axis3, Vararg{Any, 6}}"},[s("span",{class:"jlbinding"},"Makie.limits!")],-1)),e[1025]||(e[1025]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1027]||(e[1027]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x1, x2, y1, y2, z1, z2)</span></span></code></pre></div><p>Set the axis x-limits to <code>x1</code> and <code>x2</code>, the y-limits to <code>y1</code> and <code>y2</code>, and the z-limits to <code>z1</code> and <code>z2</code>. If limits are ordered high-low, this reverses the axis orientation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1026]||(e[1026]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis3d.jl#L1065-L1071",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1026]})]),s("details",Zi,[s("summary",null,[e[1028]||(e[1028]=s("a",{id:"Makie.lines",href:"#Makie.lines"},[s("span",{class:"jlbinding"},"Makie.lines")],-1)),e[1029]||(e[1029]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1031]||(e[1031]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span></code></pre></div><p>Creates a connected line plot for each element in <code>(x, y, z)</code>, <code>(x, y)</code> or <code>positions</code>.</p><p><code>NaN</code> values are displayed as gaps in the line.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>lines</code> function is <code>Lines</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,35)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1030]||(e[1030]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L614",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1030]})]),s("details",eo,[s("summary",null,[e[1032]||(e[1032]=s("a",{id:"Makie.lines!",href:"#Makie.lines!"},[s("span",{class:"jlbinding"},"Makie.lines!")],-1)),e[1033]||(e[1033]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1035]||(e[1035]=s("p",null,[s("code",null,"lines!"),o(" is the mutating variant of plotting function "),s("code",null,"lines"),o(". Check the docstring for "),s("code",null,"lines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1034]||(e[1034]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1034]})]),s("details",so,[s("summary",null,[e[1036]||(e[1036]=s("a",{id:"Makie.linesegments",href:"#Makie.linesegments"},[s("span",{class:"jlbinding"},"Makie.linesegments")],-1)),e[1037]||(e[1037]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1039]||(e[1039]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linesegments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linesegments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vector_of_2tuples_of_points)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linesegments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linesegments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span></code></pre></div><p>Plots a line for each pair of points in <code>(x, y, z)</code>, <code>(x, y)</code>, or <code>positions</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>linesegments</code> function is <code>LineSegments</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of linecap used, i.e. :butt (flat with no extrusion), :square (flat with 1 linewidth extrusion) or :round.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in pixel units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,32)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1038]||(e[1038]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L604",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1038]})]),s("details",to,[s("summary",null,[e[1040]||(e[1040]=s("a",{id:"Makie.linesegments!",href:"#Makie.linesegments!"},[s("span",{class:"jlbinding"},"Makie.linesegments!")],-1)),e[1041]||(e[1041]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1043]||(e[1043]=s("p",null,[s("code",null,"linesegments!"),o(" is the mutating variant of plotting function "),s("code",null,"linesegments"),o(". Check the docstring for "),s("code",null,"linesegments"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1042]||(e[1042]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1042]})]),s("details",io,[s("summary",null,[e[1044]||(e[1044]=s("a",{id:"Makie.linkaxes!-Tuple{Vector{<:Axis}}",href:"#Makie.linkaxes!-Tuple{Vector{<:Axis}}"},[s("span",{class:"jlbinding"},"Makie.linkaxes!")],-1)),e[1045]||(e[1045]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1047]||(e[1047]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linkaxes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Link both x and y axes of all given <code>Axis</code> so that they stay synchronized.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1046]||(e[1046]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L951-L955",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1046]})]),s("details",oo,[s("summary",null,[e[1048]||(e[1048]=s("a",{id:"Makie.linkxaxes!-Tuple{Vector{Axis}}",href:"#Makie.linkxaxes!-Tuple{Vector{Axis}}"},[s("span",{class:"jlbinding"},"Makie.linkxaxes!")],-1)),e[1049]||(e[1049]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1051]||(e[1051]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linkxaxes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Link the x axes of all given <code>Axis</code> so that they stay synchronized.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1050]||(e[1050]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1038-L1042",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1050]})]),s("details",ao,[s("summary",null,[e[1052]||(e[1052]=s("a",{id:"Makie.linkyaxes!-Tuple{Vector{Axis}}",href:"#Makie.linkyaxes!-Tuple{Vector{Axis}}"},[s("span",{class:"jlbinding"},"Makie.linkyaxes!")],-1)),e[1053]||(e[1053]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1055]||(e[1055]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linkyaxes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Link the y axes of all given <code>Axis</code> so that they stay synchronized.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1054]||(e[1054]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1046-L1050",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1054]})]),s("details",no,[s("summary",null,[e[1056]||(e[1056]=s("a",{id:"Makie.mesh",href:"#Makie.mesh"},[s("span",{class:"jlbinding"},"Makie.mesh")],-1)),e[1057]||(e[1057]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1059]||(e[1059]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mesh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mesh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh_object)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mesh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z, faces)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mesh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xyz, faces)</span></span></code></pre></div><p>Plots a 3D or 2D mesh. Supported <code>mesh_object</code>s include <code>Mesh</code> types from <a href="https://github.com/JuliaGeometry/GeometryBasics.jl" target="_blank" rel="noreferrer">GeometryBasics.jl</a>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>mesh</code> function is <code>Mesh</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Sets the color of the mesh. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors or a single <code>Colorant</code>. A <code>Matrix{&lt;:Colorant}</code> can be used to color the mesh with a texture, which requires the mesh to contain texture coordinates. A <code>&lt;: AbstractPattern</code> can be used to apply a repeated, pixel sampled pattern to the mesh, e.g. for hatching.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — sets whether colors should be interpolated</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>matcap</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>automatic</code> — Sets a transform for uv coordinates, which controls how a texture is mapped to a mesh. The attribute can be <code>I</code>, <code>scale::VecTypes{2}</code>, <code>(translation::VecTypes{2}, scale::VecTypes{2})</code>, any of <code>:rotr90</code>, <code>:rotl90</code>, <code>:rot180</code>, <code>:swap_xy</code>/<code>:transpose</code>, <code>:flip_x</code>, <code>:flip_y</code>, <code>:flip_xy</code>, or most generally a <code>Makie.Mat{2, 3, Float32}</code> or <code>Makie.Mat3f</code> as returned by <code>Makie.uv_transform()</code>. They can also be changed by passing a tuple <code>(op3, op2, op1)</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1058]||(e[1058]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L621",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1058]})]),s("details",lo,[s("summary",null,[e[1060]||(e[1060]=s("a",{id:"Makie.mesh!",href:"#Makie.mesh!"},[s("span",{class:"jlbinding"},"Makie.mesh!")],-1)),e[1061]||(e[1061]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1063]||(e[1063]=s("p",null,[s("code",null,"mesh!"),o(" is the mutating variant of plotting function "),s("code",null,"mesh"),o(". Check the docstring for "),s("code",null,"mesh"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1062]||(e[1062]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1062]})]),s("details",ro,[s("summary",null,[e[1064]||(e[1064]=s("a",{id:"Makie.meshscatter",href:"#Makie.meshscatter"},[s("span",{class:"jlbinding"},"Makie.meshscatter")],-1)),e[1065]||(e[1065]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1067]||(e[1067]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meshscatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meshscatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meshscatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span></code></pre></div><p>Plots a mesh for each element in <code>(x, y, z)</code>, <code>(x, y)</code>, or <code>positions</code> (similar to <code>scatter</code>). <code>markersize</code> is a scaling applied to the primitive passed as <code>marker</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>meshscatter</code> function is <code>MeshScatter</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit markercolor</code> — Sets the color of the marker.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — When using textures as colors, controls whether the texture is sampled with linear interpolation (true) or nearest interpolation (false). (This requires the scattered mesh to include uv coordinates.)</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>marker</code></strong> = <code>:Sphere</code> — Sets the scattered mesh.</p><p><strong><code>markersize</code></strong> = <code>0.1</code> — Sets the scale of the mesh. This can be given as a <code>Vector</code> to apply to each scattered mesh individually.</p><p><strong><code>matcap</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>rotation</code></strong> = <code>0.0</code> — Sets the rotation of the mesh. A numeric rotation is around the z-axis, a <code>Vec3f</code> causes the mesh to rotate such that the the z-axis is now that vector, and a quaternion describes a general rotation. This can be given as a Vector to apply to each scattered mesh individually.</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transform_marker</code></strong> = <code>true</code> — Controls whether the (complete) model matrix applies to the scattered mesh, rather than just the positions. (If this is false, <code>scale!</code>, <code>rotate!</code> and <code>translate!()</code> will not affect the scattered mesh.)</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>automatic</code> — Sets a transform for uv coordinates, which controls how a texture is mapped to the scattered mesh. Note that the mesh needs to include uv coordinates for this, which is not the case by default for geometry primitives. You can use <code>GeometryBasics.uv_normal_mesh(prim)</code> with, for example <code>prim = Rect2f(0, 0, 1, 1)</code>. The attribute can be <code>I</code>, <code>scale::VecTypes{2}</code>, <code>(translation::VecTypes{2}, scale::VecTypes{2})</code>, any of <code>:rotr90</code>, <code>:rotl90</code>, <code>:rot180</code>, <code>:swap_xy</code>/<code>:transpose</code>, <code>:flip_x</code>, <code>:flip_y</code>, <code>:flip_xy</code>, or most generally a <code>Makie.Mat{2, 3, Float32}</code> or <code>Makie.Mat3f</code> as returned by <code>Makie.uv_transform()</code>. It can also be set per scattered mesh by passing a <code>Vector</code> of any of the above and operations can be changed by passing a tuple <code>(op3, op2, op1)</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,41)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1066]||(e[1066]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L627",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1066]})]),s("details",co,[s("summary",null,[e[1068]||(e[1068]=s("a",{id:"Makie.meshscatter!",href:"#Makie.meshscatter!"},[s("span",{class:"jlbinding"},"Makie.meshscatter!")],-1)),e[1069]||(e[1069]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1071]||(e[1071]=s("p",null,[s("code",null,"meshscatter!"),o(" is the mutating variant of plotting function "),s("code",null,"meshscatter"),o(". Check the docstring for "),s("code",null,"meshscatter"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1070]||(e[1070]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1070]})]),s("details",po,[s("summary",null,[e[1072]||(e[1072]=s("a",{id:"Makie.mouseover-Tuple{Any, Vararg{AbstractPlot}}",href:"#Makie.mouseover-Tuple{Any, Vararg{AbstractPlot}}"},[s("span",{class:"jlbinding"},"Makie.mouseover")],-1)),e[1073]||(e[1073]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1075]||(e[1075]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mouseover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene, plots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPlot...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns true if the mouse currently hovers any of <code>plots</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1074]||(e[1074]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L8-L12",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1074]})]),s("details",ho,[s("summary",null,[e[1076]||(e[1076]=s("a",{id:"Makie.mouseposition-Tuple{Any}",href:"#Makie.mouseposition-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.mouseposition")],-1)),e[1077]||(e[1077]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1079]||(e[1079]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mouseposition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hovered_scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Return the current position of the mouse in <em>data coordinates</em> of the given <code>scene</code>.</p><p>By default uses the <code>scene</code> that the mouse is currently hovering over.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1078]||(e[1078]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L212-L219",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1078]})]),s("details",ko,[s("summary",null,[e[1080]||(e[1080]=s("a",{id:"Makie.old_cam3d!-Tuple{Scene}",href:"#Makie.old_cam3d!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.old_cam3d!")],-1)),e[1081]||(e[1081]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1083]||(e[1083]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">old_cam3d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An alias to <a href="/stable/api#Makie.old_cam3d_turntable!-Tuple{Scene}"><code>old_cam3d_turntable!</code></a>. Creates a 3D camera for <code>scene</code>, which rotates around the plot&#39;s axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1082]||(e[1082]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L93-L99",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1082]})]),s("details",go,[s("summary",null,[e[1084]||(e[1084]=s("a",{id:"Makie.old_cam3d_cad!-Tuple{Scene}",href:"#Makie.old_cam3d_cad!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.old_cam3d_cad!")],-1)),e[1085]||(e[1085]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1087]||(e[1087]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">old_cam3d_cad!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kw_args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a 3D camera for <code>scene</code> which rotates around the <em>viewer</em>&#39;s &quot;up&quot; axis - similarly to how it&#39;s done in CAD software cameras.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1086]||(e[1086]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L18-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1086]})]),s("details",uo,[s("summary",null,[e[1088]||(e[1088]=s("a",{id:"Makie.old_cam3d_turntable!-Tuple{Scene}",href:"#Makie.old_cam3d_turntable!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.old_cam3d_turntable!")],-1)),e[1089]||(e[1089]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1091]||(e[1091]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">old_cam3d_turntable!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kw_args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a 3D camera for <code>scene</code>, which rotates around the plot&#39;s axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1090]||(e[1090]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L57-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1090]})]),s("details",bo,[s("summary",null,[e[1092]||(e[1092]=s("a",{id:"Makie.onmousedownoutside-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousedownoutside-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousedownoutside")],-1)),e[1093]||(e[1093]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1095]||(e[1095]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === downoutside"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1094]||(e[1094]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1094]})]),s("details",yo,[s("summary",null,[e[1096]||(e[1096]=s("a",{id:"Makie.onmouseenter-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseenter-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseenter")],-1)),e[1097]||(e[1097]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1099]||(e[1099]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === enter"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1098]||(e[1098]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1098]})]),s("details",fo,[s("summary",null,[e[1100]||(e[1100]=s("a",{id:"Makie.onmouseleftclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftclick")],-1)),e[1101]||(e[1101]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1103]||(e[1103]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1102]||(e[1102]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1102]})]),s("details",mo,[s("summary",null,[e[1104]||(e[1104]=s("a",{id:"Makie.onmouseleftdoubleclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftdoubleclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftdoubleclick")],-1)),e[1105]||(e[1105]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1107]||(e[1107]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftdoubleclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1106]||(e[1106]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1106]})]),s("details",Eo,[s("summary",null,[e[1108]||(e[1108]=s("a",{id:"Makie.onmouseleftdown-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftdown-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftdown")],-1)),e[1109]||(e[1109]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1111]||(e[1111]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftdown"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1110]||(e[1110]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1110]})]),s("details",vo,[s("summary",null,[e[1112]||(e[1112]=s("a",{id:"Makie.onmouseleftdrag-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftdrag-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftdrag")],-1)),e[1113]||(e[1113]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1115]||(e[1115]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftdrag"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1114]||(e[1114]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1114]})]),s("details",_o,[s("summary",null,[e[1116]||(e[1116]=s("a",{id:"Makie.onmouseleftdragstart-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftdragstart-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftdragstart")],-1)),e[1117]||(e[1117]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1119]||(e[1119]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftdragstart"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1118]||(e[1118]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1118]})]),s("details",To,[s("summary",null,[e[1120]||(e[1120]=s("a",{id:"Makie.onmouseleftdragstop-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftdragstop-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftdragstop")],-1)),e[1121]||(e[1121]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1123]||(e[1123]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftdragstop"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1122]||(e[1122]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1122]})]),s("details",jo,[s("summary",null,[e[1124]||(e[1124]=s("a",{id:"Makie.onmouseleftup-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseleftup-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseleftup")],-1)),e[1125]||(e[1125]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1127]||(e[1127]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === leftup"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1126]||(e[1126]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1126]})]),s("details",Mo,[s("summary",null,[e[1128]||(e[1128]=s("a",{id:"Makie.onmousemiddleclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddleclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddleclick")],-1)),e[1129]||(e[1129]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1131]||(e[1131]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middleclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1130]||(e[1130]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1130]})]),s("details",Co,[s("summary",null,[e[1132]||(e[1132]=s("a",{id:"Makie.onmousemiddledoubleclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddledoubleclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddledoubleclick")],-1)),e[1133]||(e[1133]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1135]||(e[1135]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middledoubleclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1134]||(e[1134]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1134]})]),s("details",Fo,[s("summary",null,[e[1136]||(e[1136]=s("a",{id:"Makie.onmousemiddledown-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddledown-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddledown")],-1)),e[1137]||(e[1137]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1139]||(e[1139]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middledown"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1138]||(e[1138]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1138]})]),s("details",wo,[s("summary",null,[e[1140]||(e[1140]=s("a",{id:"Makie.onmousemiddledrag-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddledrag-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddledrag")],-1)),e[1141]||(e[1141]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1143]||(e[1143]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middledrag"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1142]||(e[1142]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1142]})]),s("details",xo,[s("summary",null,[e[1144]||(e[1144]=s("a",{id:"Makie.onmousemiddledragstart-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddledragstart-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddledragstart")],-1)),e[1145]||(e[1145]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1147]||(e[1147]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middledragstart"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1146]||(e[1146]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1146]})]),s("details",Ao,[s("summary",null,[e[1148]||(e[1148]=s("a",{id:"Makie.onmousemiddledragstop-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddledragstop-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddledragstop")],-1)),e[1149]||(e[1149]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1151]||(e[1151]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middledragstop"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1150]||(e[1150]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1150]})]),s("details",So,[s("summary",null,[e[1152]||(e[1152]=s("a",{id:"Makie.onmousemiddleup-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmousemiddleup-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmousemiddleup")],-1)),e[1153]||(e[1153]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1155]||(e[1155]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === middleup"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1154]||(e[1154]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1154]})]),s("details",Do,[s("summary",null,[e[1156]||(e[1156]=s("a",{id:"Makie.onmouseout-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseout-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseout")],-1)),e[1157]||(e[1157]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1159]||(e[1159]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === out"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1158]||(e[1158]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1158]})]),s("details",Bo,[s("summary",null,[e[1160]||(e[1160]=s("a",{id:"Makie.onmouseover-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouseover-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouseover")],-1)),e[1161]||(e[1161]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1163]||(e[1163]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === over"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1162]||(e[1162]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1162]})]),s("details",Lo,[s("summary",null,[e[1164]||(e[1164]=s("a",{id:"Makie.onmouserightclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightclick")],-1)),e[1165]||(e[1165]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1167]||(e[1167]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1166]||(e[1166]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1166]})]),s("details",Po,[s("summary",null,[e[1168]||(e[1168]=s("a",{id:"Makie.onmouserightdoubleclick-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightdoubleclick-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightdoubleclick")],-1)),e[1169]||(e[1169]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1171]||(e[1171]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightdoubleclick"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1170]||(e[1170]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1170]})]),s("details",Io,[s("summary",null,[e[1172]||(e[1172]=s("a",{id:"Makie.onmouserightdown-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightdown-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightdown")],-1)),e[1173]||(e[1173]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1175]||(e[1175]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightdown"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1174]||(e[1174]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1174]})]),s("details",Oo,[s("summary",null,[e[1176]||(e[1176]=s("a",{id:"Makie.onmouserightdrag-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightdrag-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightdrag")],-1)),e[1177]||(e[1177]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1179]||(e[1179]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightdrag"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1178]||(e[1178]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1178]})]),s("details",Vo,[s("summary",null,[e[1180]||(e[1180]=s("a",{id:"Makie.onmouserightdragstart-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightdragstart-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightdragstart")],-1)),e[1181]||(e[1181]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1183]||(e[1183]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightdragstart"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1182]||(e[1182]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1182]})]),s("details",No,[s("summary",null,[e[1184]||(e[1184]=s("a",{id:"Makie.onmouserightdragstop-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightdragstop-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightdragstop")],-1)),e[1185]||(e[1185]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1187]||(e[1187]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightdragstop"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1186]||(e[1186]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1186]})]),s("details",Ro,[s("summary",null,[e[1188]||(e[1188]=s("a",{id:"Makie.onmouserightup-Tuple{Any, Makie.MouseEventHandle}",href:"#Makie.onmouserightup-Tuple{Any, Makie.MouseEventHandle}"},[s("span",{class:"jlbinding"},"Makie.onmouserightup")],-1)),e[1189]||(e[1189]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1191]||(e[1191]=s("p",null,[o("Executes the function f whenever the "),s("code",null,"MouseEventHandle"),o("'s observable is set to a MouseEvent with "),s("code",null,"event.type === rightup"),o(".")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1190]||(e[1190]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/mousestatemachine.jl#L87-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1190]})]),s("details",zo,[s("summary",null,[e[1192]||(e[1192]=s("a",{id:"Makie.onpick",href:"#Makie.onpick"},[s("span",{class:"jlbinding"},"Makie.onpick")],-1)),e[1193]||(e[1193]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1195]||(e[1195]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onpick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func, plot)</span></span></code></pre></div><p>Calls <code>func</code> if one clicks on <code>plot</code>. Implemented by the backend.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1194]||(e[1194]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L67-L70",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1194]})]),s("details",qo,[s("summary",null,[e[1196]||(e[1196]=s("a",{id:"Makie.onpick-Tuple{Any, Any, Vararg{AbstractPlot}}",href:"#Makie.onpick-Tuple{Any, Any, Vararg{AbstractPlot}}"},[s("span",{class:"jlbinding"},"Makie.onpick")],-1)),e[1197]||(e[1197]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1199]||(e[1199]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onpick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene, plots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPlot...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calls <code>f(plot, idx)</code> whenever the mouse is over any of <code>plots</code>. <code>idx</code> is an index, e.g. when over a scatter plot, it will be the index of the hovered element</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1198]||(e[1198]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L19-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1198]})]),s("details",Go,[s("summary",null,[e[1200]||(e[1200]=s("a",{id:"Makie.origin!-Tuple{Makie.Transformable, Vararg{Any}}",href:"#Makie.origin!-Tuple{Makie.Transformable, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.origin!")],-1)),e[1201]||(e[1201]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1203]||(e[1203]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">origin!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Absolute], t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">origin!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Absolute], t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the origin of the transformable <code>t</code> to the given <code>xyz</code> value. This affects the origin of <code>rotate!(t, ...)</code> and <code>scale!(t, ...)</code>. If <code>mode</code> is given as <code>Accum</code> the origin is translated by the given <code>xyz</code> instead.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1202]||(e[1202]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L195-L202",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1202]})]),s("details",Uo,[s("summary",null,[e[1204]||(e[1204]=s("a",{id:"Makie.pick",href:"#Makie.pick"},[s("span",{class:"jlbinding"},"Makie.pick")],-1)),e[1205]||(e[1205]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1207]||(e[1207]=s("p",null,"Picks a mouse position. Implemented by the backend.",-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1206]||(e[1206]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L57-L59",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1206]})]),s("details",Ho,[s("summary",null,[e[1208]||(e[1208]=s("a",{id:"Makie.pick-Tuple{Any, GeometryBasics.HyperRectangle{2, Int64}}",href:"#Makie.pick-Tuple{Any, GeometryBasics.HyperRectangle{2, Int64}}"},[s("span",{class:"jlbinding"},"Makie.pick")],-1)),e[1209]||(e[1209]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1211]||(e[1211]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rect2i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return all <code>(plot, index)</code> pairs within the given rect. The rect must be within screen boundaries.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1210]||(e[1210]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L188-L193",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1210]})]),s("details",Wo,[s("summary",null,[e[1212]||(e[1212]=s("a",{id:"Makie.pick-Tuple{Any, Number, Number}",href:"#Makie.pick-Tuple{Any, Number, Number}"},[s("span",{class:"jlbinding"},"Makie.pick")],-1)),e[1213]||(e[1213]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1215]||(e[1215]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene, x, y[, range])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene, xy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, range])</span></span></code></pre></div><p>Returns the plot and element index under the given pixel position <code>xy = Vec(x, y)</code>. If <code>range</code> is given, the nearest plot up to a distance of <code>range</code> is returned instead.</p><p>The <code>plot</code> returned by this function is always a primitive plot, i.e. one that is not composed of other plot types.</p><p>The index returned relates to the main input of the respective primitive plot.</p><ul><li><p>For <code>scatter</code> and <code>meshscatter</code> it is an index into the positions given to the plot.</p></li><li><p>For <code>text</code> it is an index into the merged character array.</p></li><li><p>For <code>lines</code> and <code>linesegments</code> it is the end position of the selected line segment.</p></li><li><p>For <code>image</code>, <code>heatmap</code> and <code>surface</code> it is the linear index into the matrix argument of the plot (i.e. the given image, value or z-value matrix) that is closest to the selected position.</p></li><li><p>For <code>voxels</code> it is the linear index into the given 3D Array.</p></li><li><p>For <code>mesh</code> it is the largest vertex index of the picked triangle face.</p></li><li><p>For <code>volume</code> it is always 0.</p></li></ul><p>See also: <code>pick_sorted</code></p>`,6)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1214]||(e[1214]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L55-L75",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1214]})]),s("details",Yo,[s("summary",null,[e[1216]||(e[1216]=s("a",{id:"Makie.pie",href:"#Makie.pie"},[s("span",{class:"jlbinding"},"Makie.pie")],-1)),e[1217]||(e[1217]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1219]||(e[1219]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(point, values; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, values; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a pie chart from the given <code>values</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>pie</code> function is <code>Pie</code>.</p><p><strong>Attributes</strong></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>:gray</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inner_radius</code></strong> = <code>0</code> — The inner radius of the pie segments. If this is larger than zero, the pie pieces become ring sections.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>normalize</code></strong> = <code>true</code> — If <code>true</code>, the sum of all values is normalized to 2π (a full circle).</p><p><strong><code>offset</code></strong> = <code>0</code> — The angular offset of the first pie segment from the (1, 0) vector in radians.</p><p><strong><code>offset_radius</code></strong> = <code>0</code> — The offset of each pie segment from the center along the radius</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>radius</code></strong> = <code>1</code> — The outer radius of the pie segments.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>:black</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>1</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>vertex_per_deg</code></strong> = <code>1</code> — Controls how many polygon vertices are used for one degree of rotation.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,28)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1218]||(e[1218]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L588",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1218]})]),s("details",Ko,[s("summary",null,[e[1220]||(e[1220]=s("a",{id:"Makie.pie!",href:"#Makie.pie!"},[s("span",{class:"jlbinding"},"Makie.pie!")],-1)),e[1221]||(e[1221]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1223]||(e[1223]=s("p",null,[s("code",null,"pie!"),o(" is the mutating variant of plotting function "),s("code",null,"pie"),o(". Check the docstring for "),s("code",null,"pie"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1222]||(e[1222]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1222]})]),s("details",Qo,[s("summary",null,[e[1224]||(e[1224]=s("a",{id:"Makie.plotlist-Tuple",href:"#Makie.plotlist-Tuple"},[s("span",{class:"jlbinding"},"Makie.plotlist")],-1)),e[1225]||(e[1225]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1227]||(e[1227]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plotlist!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        PlotSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        PlotSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a list of PlotSpec&#39;s, which can be an observable, making it possible to create efficiently animated plots with the following API:</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLMakie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpecApi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plots </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peaks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, plots)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Updating the plot dynamically</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plots[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">heatmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peaks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()), S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plots[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peaks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rect2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); linewidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample_cmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:viridis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plots[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">peaks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); colormap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :viridis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, translation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec3f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1226]||(e[1226]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/specapi.jl#L500-L533",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1226]})]),s("details",$o,[s("summary",null,[e[1228]||(e[1228]=s("a",{id:"Makie.poly",href:"#Makie.poly"},[s("span",{class:"jlbinding"},"Makie.poly")],-1)),e[1229]||(e[1229]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1231]||(e[1231]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vertices, indices; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(points; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shape; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">poly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a polygon based on the arguments given. When vertices and indices are given, it functions similarly to <code>mesh</code>. When points are given, it draws one polygon that connects all the points in order. When a shape is given (essentially anything decomposable by <code>GeometryBasics</code>), it will plot <code>decompose(shape)</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>poly(coordinates, connectivity; kwargs...)</span></span></code></pre></div><p>Plots polygons, which are defined by <code>coordinates</code> (the coordinates of the vertices) and <code>connectivity</code> (the edges between the vertices).</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>poly</code> function is <code>Poly</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Sets the color of the poly. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors or a single <code>Colorant</code>. A <code>Matrix{&lt;:Colorant}</code> can be used to color the mesh with a texture, which requires the mesh to contain texture coordinates. Vector or Matrices of numbers can be used as well, which will use the colormap arguments to map the numbers to colors. One can also use a <code>&lt;: AbstractPattern</code>, to cover the poly with a regular pattern, e.g. for hatching.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stroke_depth_shift</code></strong> = <code>-1.0e-5</code> — Depth shift of stroke plot. This is useful to avoid z-fighting between the stroke and the fill.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokecolormap</code></strong> = <code>@inherit colormap</code> — Sets the colormap that is sampled for numeric <code>color</code>s.</p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — Sets the width of the outline.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1230]||(e[1230]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L627",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1230]})]),s("details",Xo,[s("summary",null,[e[1232]||(e[1232]=s("a",{id:"Makie.poly!",href:"#Makie.poly!"},[s("span",{class:"jlbinding"},"Makie.poly!")],-1)),e[1233]||(e[1233]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1235]||(e[1235]=s("p",null,[s("code",null,"poly!"),o(" is the mutating variant of plotting function "),s("code",null,"poly"),o(". Check the docstring for "),s("code",null,"poly"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1234]||(e[1234]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1234]})]),s("details",Jo,[s("summary",null,[e[1236]||(e[1236]=s("a",{id:"Makie.push_light!-Tuple{Any, Any}",href:"#Makie.push_light!-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.push_light!")],-1)),e[1237]||(e[1237]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1239]||(e[1239]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">push_light!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, light)</span></span></code></pre></div><p>Adds a new light to the active lights. The light should not be an AmbientLight.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1238]||(e[1238]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L443-L447",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1238]})]),s("details",Zo,[s("summary",null,[e[1240]||(e[1240]=s("a",{id:"Makie.qqnorm",href:"#Makie.qqnorm"},[s("span",{class:"jlbinding"},"Makie.qqnorm")],-1)),e[1241]||(e[1241]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1243]||(e[1243]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">qqnorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Shorthand for <code>qqplot(Normal(0,1), y)</code>, i.e., draw a Q-Q plot of <code>y</code> against the standard normal distribution. See <code>qqplot</code> for more details.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>qqnorm</code> function is <code>QQNorm</code>.</p><p><strong>Attributes</strong></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — Control color of both line and markers (if <code>markercolor</code> is not specified).</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — <em>No docs available.</em></p><p><strong><code>markercolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',28)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1242]||(e[1242]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L586",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1242]})]),s("details",ea,[s("summary",null,[e[1244]||(e[1244]=s("a",{id:"Makie.qqnorm!",href:"#Makie.qqnorm!"},[s("span",{class:"jlbinding"},"Makie.qqnorm!")],-1)),e[1245]||(e[1245]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1247]||(e[1247]=s("p",null,[s("code",null,"qqnorm!"),o(" is the mutating variant of plotting function "),s("code",null,"qqnorm"),o(". Check the docstring for "),s("code",null,"qqnorm"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1246]||(e[1246]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1246]})]),s("details",sa,[s("summary",null,[e[1248]||(e[1248]=s("a",{id:"Makie.qqplot",href:"#Makie.qqplot"},[s("span",{class:"jlbinding"},"Makie.qqplot")],-1)),e[1249]||(e[1249]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1251]||(e[1251]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">qqplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draw a Q-Q plot, comparing quantiles of two distributions. <code>y</code> must be a list of samples, i.e., <code>AbstractVector{&lt;:Real}</code>, whereas <code>x</code> can be</p><ul><li><p>a list of samples,</p></li><li><p>an abstract distribution, e.g. <code>Normal(0, 1)</code>,</p></li><li><p>a distribution type, e.g. <code>Normal</code>.</p></li></ul><p>In the last case, the distribution type is fitted to the data <code>y</code>.</p><p>The attribute <code>qqline</code> (defaults to <code>:none</code>) determines how to compute a fit line for the Q-Q plot. Possible values are the following.</p><ul><li><p><code>:identity</code> draws the identity line.</p></li><li><p><code>:fit</code> computes a least squares line fit of the quantile pairs.</p></li><li><p><code>:fitrobust</code> computes the line that passes through the first and third quartiles of the distributions.</p></li><li><p><code>:none</code> omits drawing the line.</p></li></ul><p>Broadly speaking, <code>qqline = :identity</code> is useful to see if <code>x</code> and <code>y</code> follow the same distribution, whereas <code>qqline = :fit</code> and <code>qqline = :fitrobust</code> are useful to see if the distribution of <code>y</code> can be obtained from the distribution of <code>x</code> via an affine transformation.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>qqplot</code> function is <code>QQPlot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — Control color of both line and markers (if <code>markercolor</code> is not specified).</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — <em>No docs available.</em></p><p><strong><code>markercolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',33)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1250]||(e[1250]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L601",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1250]})]),s("details",ta,[s("summary",null,[e[1252]||(e[1252]=s("a",{id:"Makie.qqplot!",href:"#Makie.qqplot!"},[s("span",{class:"jlbinding"},"Makie.qqplot!")],-1)),e[1253]||(e[1253]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1255]||(e[1255]=s("p",null,[s("code",null,"qqplot!"),o(" is the mutating variant of plotting function "),s("code",null,"qqplot"),o(". Check the docstring for "),s("code",null,"qqplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1254]||(e[1254]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1254]})]),s("details",ia,[s("summary",null,[e[1256]||(e[1256]=s("a",{id:"Makie.rainclouds",href:"#Makie.rainclouds"},[s("span",{class:"jlbinding"},"Makie.rainclouds")],-1)),e[1257]||(e[1257]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1259]||(e[1259]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rainclouds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, category_labels, data_array; plot_boxplots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, plot_clouds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plot a violin (/histogram), boxplot and individual data points with appropriate spacing between each.</p><p><strong>Arguments</strong></p><ul><li><p><code>ax</code>: Axis used to place all these plots onto.</p></li><li><p><code>category_labels</code>: Typically <code>Vector{String}</code> with a label for each element in <code>data_array</code></p></li><li><p><code>data_array</code>: Typically <code>Vector{Float64}</code> used for to represent the datapoints to plot.</p></li></ul><p><strong>Keywords</strong></p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>rainclouds</code> function is <code>RainClouds</code>.</p><p><strong>Attributes</strong></p><p><strong><code>boxplot_nudge</code></strong> = <code>0.075</code> — Determines the distance away the boxplot should be placed from the center line when <code>center_boxplot</code> is <code>false</code>. This is the value used to recentering the boxplot.</p><p><strong><code>boxplot_width</code></strong> = <code>0.1</code> — Width of the boxplot on the category axis.</p><p><strong><code>center_boxplot</code></strong> = <code>true</code> — Whether or not to center the boxplot on the category.</p><p><strong><code>cloud_width</code></strong> = <code>0.75</code> — Determines size of violin plot. Corresponds to <code>width</code> keyword arg in <code>violin</code>.</p><p><strong><code>clouds</code></strong> = <code>violin</code> — [<code>violin</code>, <code>hist</code>, <code>nothing</code>] how to show cloud plots, either as violin or histogram plots, or not at all.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — A single color, or a vector of colors, one for each point.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>dodge</code></strong> = <code>automatic</code> — Vector of <code>Integer</code> (length of data) of grouping variable to create multiple side-by-side boxes at the same x position</p><p><strong><code>dodge_gap</code></strong> = <code>0.01</code> — Spacing between dodged boxes.</p><p><strong><code>gap</code></strong> = <code>0.2</code> — Distance between elements on the main axis (depending on <code>orientation</code>).</p><p><strong><code>hist_bins</code></strong> = <code>30</code> — If <code>clouds=hist</code>, this passes down the number of bins to the histogram call.</p><p><strong><code>jitter_width</code></strong> = <code>0.05</code> — Determines the width of the scatter-plot bar in category x-axis absolute terms.</p><p><strong><code>markersize</code></strong> = <code>2.0</code> — Size of marker used for the scatter plot.</p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — The number of categories to dodge (defaults to <code>maximum(dodge)</code>)</p><p><strong><code>orientation</code></strong> = <code>:vertical</code> — Orientation of rainclouds (<code>:vertical</code> or <code>:horizontal</code>)</p><p><strong><code>plot_boxplots</code></strong> = <code>true</code> — Whether to show boxplots to summarize distribution of data.</p><p><strong><code>show_boxplot_outliers</code></strong> = <code>false</code> — Show outliers in the boxplot as points (usually confusing when paired with the scatter plot so the default is to not show them)</p><p><strong><code>show_median</code></strong> = <code>true</code> — Determines whether or not to have a line for the median value in the boxplot.</p><p><strong><code>side</code></strong> = <code>:left</code> — Can take values of <code>:left</code>, <code>:right</code>, determines where the violin plot will be, relative to the scatter points</p><p><strong><code>side_nudge</code></strong> = <code>automatic</code> — Scatter plot specific. Default value is 0.02 if <code>plot_boxplots</code> is true, otherwise <code>0.075</code> default.</p><p><strong><code>strokewidth</code></strong> = <code>1.0</code> — Determines the stroke width for the outline of the boxplot.</p><p><strong><code>violin_limits</code></strong> = <code>(-Inf, Inf)</code> — Specify values to trim the <code>violin</code>. Can be a <code>Tuple</code> or a <code>Function</code> (e.g. <code>datalimits=extrema</code>)</p><p><strong><code>whiskerwidth</code></strong> = <code>0.5</code> — The width of the Q1, Q3 whisker in the boxplot. Value as a portion of the <code>boxplot_width</code>.</p>',31)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1258]||(e[1258]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L615",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1258]})]),s("details",oa,[s("summary",null,[e[1260]||(e[1260]=s("a",{id:"Makie.rainclouds!",href:"#Makie.rainclouds!"},[s("span",{class:"jlbinding"},"Makie.rainclouds!")],-1)),e[1261]||(e[1261]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1263]||(e[1263]=s("p",null,[s("code",null,"rainclouds!"),o(" is the mutating variant of plotting function "),s("code",null,"rainclouds"),o(". Check the docstring for "),s("code",null,"rainclouds"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1262]||(e[1262]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1262]})]),s("details",aa,[s("summary",null,[e[1264]||(e[1264]=s("a",{id:"Makie.rangebars",href:"#Makie.rangebars"},[s("span",{class:"jlbinding"},"Makie.rangebars")],-1)),e[1265]||(e[1265]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1267]||(e[1267]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rangebars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val, low, high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rangebars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val, low_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rangebars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val_low_high; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots rangebars at <code>val</code> in one dimension, extending from <code>low</code> to <code>high</code> in the other dimension given the chosen <code>direction</code>. The <code>low_high</code> argument can be a vector of tuples or intervals.</p><p>If you want to plot errors relative to a reference value, use <code>errorbars</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>rangebars</code> function is <code>Rangebars</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the lines. Can be an array to color each bar separately.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>direction</code></strong> = <code>:y</code> — The direction in which the bars are drawn. Can be <code>:x</code> or <code>:y</code>.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — The thickness of the lines in screen units.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>whiskerwidth</code></strong> = <code>0</code> — The width of the whiskers or line caps in screen units.</p>`,33)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1266]||(e[1266]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L602",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1266]})]),s("details",na,[s("summary",null,[e[1268]||(e[1268]=s("a",{id:"Makie.rangebars!",href:"#Makie.rangebars!"},[s("span",{class:"jlbinding"},"Makie.rangebars!")],-1)),e[1269]||(e[1269]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1271]||(e[1271]=s("p",null,[s("code",null,"rangebars!"),o(" is the mutating variant of plotting function "),s("code",null,"rangebars"),o(". Check the docstring for "),s("code",null,"rangebars"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1270]||(e[1270]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1270]})]),s("details",la,[s("summary",null,[e[1272]||(e[1272]=s("a",{id:"Makie.record-Tuple{Any, Union{Figure, Makie.FigureAxisPlot, Scene}, AbstractString}",href:"#Makie.record-Tuple{Any, Union{Figure, Makie.FigureAxisPlot, Scene}, AbstractString}"},[s("span",{class:"jlbinding"},"Makie.record")],-1)),e[1273]||(e[1273]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1275]||(e[1275]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func, figurelike, path; backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func, figurelike, path, iter; backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The first signature provides <code>func</code> with a VideoStream, which it should call <code>recordframe!(io)</code> on when recording a frame.</p><p>The second signature iterates <code>iter</code>, calling <code>recordframe!(io)</code> internally after calling <code>func</code> with the current iteration element.</p><p>Both notations require a Figure, FigureAxisPlot or Scene <code>figure</code> to work. The animation is then saved to <code>path</code>, with the format determined by <code>path</code>&#39;s extension.</p><p>Under the hood, <code>record</code> is just <code>video_io = Record(func, figurelike, [iter]; same_kw...); save(path, video_io)</code>. <code>Record</code> can be used directly as well to do the saving at a later point, or to inline a video directly into a Notebook (the video supports, <code>show(video_io, &quot;text/html&quot;)</code> for that purpose).</p><p><strong>Options one can pass via <code>kwargs...</code>:</strong></p><ul><li><code>backend::Module = current_backend()</code>: set the backend to write out video, can be set to <code>CairoMakie</code>, <code>GLMakie</code>, <code>WGLMakie</code>, <code>RPRMakie</code>.</li></ul><p><strong>Backend options</strong></p><p>See <code>?Backend.Screen</code> or <code>Base.doc(Backend.Screen)</code> for applicable options that can be passed and forwarded to the backend.</p><p><strong>Video options</strong></p><ul><li><p><code>format = &quot;mkv&quot;</code>: The format of the video. If a path is present, will be inferred from the file extension. Can be one of the following:</p><ul><li><p><code>&quot;mkv&quot;</code> (open standard, the default)</p></li><li><p><code>&quot;mp4&quot;</code> (good for Web, most supported format)</p></li><li><p><code>&quot;webm&quot;</code> (smallest file size)</p></li><li><p><code>&quot;gif&quot;</code> (largest file size for the same quality)</p></li></ul><p><code>mp4</code> and <code>mk4</code> are marginally bigger than <code>webm</code>. <code>gif</code>s can be significantly (as much as 6x) larger with worse quality (due to the limited color palette) and only should be used as a last resort, for playing in a context where videos aren&#39;t supported.</p></li><li><p><code>framerate = 24</code>: The target framerate.</p></li><li><p><code>compression = 20</code>: Controls the video compression via <code>ffmpeg</code>&#39;s <code>-crf</code> option, with smaller numbers giving higher quality and larger file sizes (lower compression), and higher numbers giving lower quality and smaller file sizes (higher compression). The minimum value is <code>0</code> (lossless encoding).</p><ul><li><p>For <code>mp4</code>, <code>51</code> is the maximum. Note that <code>compression = 0</code> only works with <code>mp4</code> if <code>profile = &quot;high444&quot;</code>.</p></li><li><p>For <code>webm</code>, <code>63</code> is the maximum.</p></li><li><p><code>compression</code> has no effect on <code>mkv</code> and <code>gif</code> outputs.</p></li></ul></li><li><p><code>profile = &quot;high422&quot;</code>: A ffmpeg compatible profile. Currently only applies to <code>mp4</code>. If you have issues playing a video, try <code>profile = &quot;high&quot;</code> or <code>profile = &quot;main&quot;</code>.</p></li><li><p><code>pixel_format = &quot;yuv420p&quot;</code>: A ffmpeg compatible pixel format (<code>-pix_fmt</code>). Currently only applies to <code>mp4</code>. Defaults to <code>yuv444p</code> for <code>profile = &quot;high444&quot;</code>.</p></li><li><p><code>loop = 0</code>: Number of times the video is repeated, for a <code>gif</code> or <code>html</code> output. Defaults to <code>0</code>, which means infinite looping. A value of <code>-1</code> turns off looping, and a value of <code>n &gt; 0</code> means <code>n</code> repetitions (i.e. the video is played <code>n+1</code> times) when supported by backend.</p></li></ul><div class="warning custom-block"><p class="custom-block-title">Warning</p><p><code>profile</code> and <code>pixel_format</code> are only used when <code>format</code> is <code>&quot;mp4&quot;</code>; a warning will be issued if <code>format</code> is not <code>&quot;mp4&quot;</code> and those two arguments are not <code>nothing</code>. Similarly, <code>compression</code> is only valid when <code>format</code> is <code>&quot;mp4&quot;</code> or <code>&quot;webm&quot;</code>.</p></div><p><strong>Typical usage</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figure, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, itr) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or some other manipulation of the figure</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>or, for more tweakability,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figure, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.gif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> io</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        func!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figure)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># animate figure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        recordframe!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(io)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># record a new frame</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>If you want a more tweakable interface, consider using <a href="/stable/api#Makie.VideoStream-Tuple{Union{Figure, Makie.FigureAxisPlot, Scene}}"><code>VideoStream</code></a> and <a href="/stable/api#FileIO.save-Tuple{String, Union{Figure, Makie.FigureAxisPlot, Scene}}"><code>save</code></a>.</p><p><strong>Extended help</strong></p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ax, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.gif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> io</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RGBf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># animate figure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        recordframe!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(io)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>or</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ax, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.gif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RGBf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># animate figure</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,22)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1274]||(e[1274]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recording.jl#L81-L145",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1274]})]),s("details",da,[s("summary",null,[e[1276]||(e[1276]=s("a",{id:"Makie.record_events-Tuple{Any, Scene, String}",href:"#Makie.record_events-Tuple{Any, Scene, String}"},[s("span",{class:"jlbinding"},"Makie.record_events")],-1)),e[1277]||(e[1277]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1279]||(e[1279]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">record_events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Records all window events that happen while executing function <code>f</code> for <code>scene</code> and serializes them to <code>path</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1278]||(e[1278]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/event-recorder.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1278]})]),s("details",ra,[s("summary",null,[e[1280]||(e[1280]=s("a",{id:"Makie.recordframe!-Tuple{VideoStream}",href:"#Makie.recordframe!-Tuple{VideoStream}"},[s("span",{class:"jlbinding"},"Makie.recordframe!")],-1)),e[1281]||(e[1281]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1283]||(e[1283]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">recordframe!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VideoStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Adds a video frame to the VideoStream <code>io</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1282]||(e[1282]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/ffmpeg-util.jl#L296-L300",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1282]})]),s("details",ca,[s("summary",null,[e[1284]||(e[1284]=s("a",{id:"Makie.register_interaction!-Tuple{Any, Symbol, Any}",href:"#Makie.register_interaction!-Tuple{Any, Symbol, Any}"},[s("span",{class:"jlbinding"},"Makie.register_interaction!")],-1)),e[1285]||(e[1285]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1287]||(e[1287]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_interaction!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interaction)</span></span></code></pre></div><p>Register <code>interaction</code> with <code>parent</code> under the name <code>name</code>. The parent will call <code>process_interaction(interaction, event, parent)</code> whenever suitable events happen.</p><p>The interaction can be removed with <code>deregister_interaction!</code> or temporarily toggled with <code>activate_interaction!</code> / <code>deactivate_interaction!</code>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1286]||(e[1286]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/interactions.jl#L7-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1286]})]),s("details",pa,[s("summary",null,[e[1288]||(e[1288]=s("a",{id:"Makie.register_interaction!-Tuple{Function, Any, Symbol}",href:"#Makie.register_interaction!-Tuple{Function, Any, Symbol}"},[s("span",{class:"jlbinding"},"Makie.register_interaction!")],-1)),e[1289]||(e[1289]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1291]||(e[1291]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_interaction!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(interaction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parent, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Register <code>interaction</code> with <code>parent</code> under the name <code>name</code>. The parent will call <code>process_interaction(interaction, event, parent)</code> whenever suitable events happen. This form with the first <code>Function</code> argument is especially intended for <code>do</code> syntax.</p><p>The interaction can be removed with <code>deregister_interaction!</code> or temporarily toggled with <code>activate_interaction!</code> / <code>deactivate_interaction!</code>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1290]||(e[1290]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/interactions.jl#L24-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1290]})]),s("details",ha,[s("summary",null,[e[1292]||(e[1292]=s("a",{id:"Makie.register_position_transforms!-Tuple{Plot}",href:"#Makie.register_position_transforms!-Tuple{Plot}"},[s("span",{class:"jlbinding"},"Makie.register_position_transforms!")],-1)),e[1293]||(e[1293]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1295]||(e[1295]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_position_transforms!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot[; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Registers computations that apply <code>transform_func</code> and <code>float32convert</code> to a position input. Positions need to be an array of point-like data. The <code>float32convert</code> will also always generate <code>:model_f32c</code> which should be used instead of <code>model</code> after <code>float32convert</code> is applied.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>input_name = :positions</code> sets the input to which <code>transform_func</code> applies</p></li><li><p><code>transformed_name = Symbol(input_name, :_transformed)</code> sets the name of positions after <code>transform_func</code> application</p></li><li><p><code>transformed_f32c_name = Symbol(transformed_name, :_f32c)</code> sets the name of positions after <code>float32convert</code> application</p></li></ul><p>See also: <a href="/stable/api#Makie.register_positions_transformed!-Tuple{Plot}"><code>register_positions_transformed!</code></a>, <a href="/stable/api#Makie.register_positions_transformed_f32c!-Tuple{Plot}"><code>register_positions_transformed_f32c!</code></a></p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1294]||(e[1294]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/compute-plots.jl#L248-L263",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1294]})]),s("details",ka,[s("summary",null,[e[1296]||(e[1296]=s("a",{id:"Makie.register_positions_transformed!-Tuple{Plot}",href:"#Makie.register_positions_transformed!-Tuple{Plot}"},[s("span",{class:"jlbinding"},"Makie.register_positions_transformed!")],-1)),e[1297]||(e[1297]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1299]||(e[1299]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_positions_transformed!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot[; input_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :positions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, output_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :positions_transformed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Registers <code>output_name</code> containing positions with the transform function of the plot applied to <code>input_name</code>.</p><p>See also: <a href="/stable/api#Makie.register_position_transforms!-Tuple{Plot}"><code>register_position_transforms!</code></a>, <a href="/stable/api#Makie.register_positions_transformed_f32c!-Tuple{Plot}"><code>register_positions_transformed_f32c!</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1298]||(e[1298]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/compute-plots.jl#L279-L285",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1298]})]),s("details",ga,[s("summary",null,[e[1300]||(e[1300]=s("a",{id:"Makie.register_positions_transformed_f32c!-Tuple{Plot}",href:"#Makie.register_positions_transformed_f32c!-Tuple{Plot}"},[s("span",{class:"jlbinding"},"Makie.register_positions_transformed_f32c!")],-1)),e[1301]||(e[1301]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1303]||(e[1303]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_positions_transformed_f32c!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot[; input_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :positions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, output_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :positions_transformed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Registers <code>output_name</code> containing positions with the parent scenes float32convert applied to <code>input_name</code>. Note that this does not apply transformation functions.</p><p>See also: <a href="/stable/api#Makie.register_position_transforms!-Tuple{Plot}"><code>register_position_transforms!</code></a>, <a href="/stable/api#Makie.register_positions_transformed!-Tuple{Plot}"><code>register_positions_transformed!</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1302]||(e[1302]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/compute-plots.jl#L299-L306",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1302]})]),s("details",ua,[s("summary",null,[e[1304]||(e[1304]=s("a",{id:"Makie.register_projected_positions!-Union{Tuple{Plot}, Tuple{OT}, Tuple{Plot, Type{OT}}} where OT",href:"#Makie.register_projected_positions!-Union{Tuple{Plot}, Tuple{OT}, Tuple{Plot, Type{OT}}} where OT"},[s("span",{class:"jlbinding"},"Makie.register_projected_positions!")],-1)),e[1305]||(e[1305]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1307]||(e[1307]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_projected_positions!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot[, output_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Point3f]; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Register projected positions for the given plot starting from plot argument space.</p><p>Note that this also generates compute nodes for transformed positions (i.e. with transform_func applied) and float32-converted positions (i.e. with float32convert applied).</p><p>Optionally <code>output_type</code> can be set to control the element type of projected positions. (4D points will not be w-normalized, 1D - 3D points will be. This is to allow clip space clipping to happen elsewhere.)</p><p><strong>Keyword Arguments:</strong></p><ul><li><p><code>input_space = :space</code> sets the input space. Can be <code>:space</code> or <code>:markerspace</code> to refer to those plot attributes or any static space like <code>:data</code>.</p></li><li><p><code>output_space = :pixel</code> sets the output space. Can be <code>:space</code> or <code>:markerspace</code> to refer to those plot attributes or any static space like <code>:pixel</code>.</p></li><li><p><code>input_name = :positions</code> sets the source positions which will be projected.</p></li><li><p><code>output_name = Symbol(output_space, :_, input_name)</code> sets the name of the projected positions.</p></li><li><p><code>apply_transform = input_space === :space</code> controls whether transformations and float32convert are applied.</p></li><li><p><code>apply_transform_func = apply_transform</code> controls whether <code>transform_func</code> is applied.</p></li><li><p><code>apply_float32convert = apply_transform</code> controls whether <code>float32convert</code> is applied.</p></li><li><p><code>apply_model = apply_transform</code> controls whether the <code>model</code> matrix is applied.</p></li><li><p><code>apply_clip_planes = false</code> controls whether points clipped by <code>clip_planes</code> are replaced by NaN. (Does not consider clip space clipping. Only applies if <code>is_data_space(input_space)</code>.)</p></li><li><p><code>yflip = false</code> flips the <code>y</code> coordinate if set to true and <code>output_space = :pixel</code></p></li></ul><p>Related: <a href="/stable/api#Makie.register_position_transforms!-Tuple{Plot}"><code>register_position_transforms!</code></a>, <a href="/stable/api#Makie.register_positions_transformed!-Tuple{Plot}"><code>register_positions_transformed!</code></a>, <a href="/stable/api#Makie.register_positions_transformed_f32c!-Tuple{Plot}"><code>register_positions_transformed_f32c!</code></a>, <a href="/stable/api#Makie.register_projected_rotations_2d!-Tuple{Plot}"><code>register_projected_rotations_2d!</code></a></p>',7)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1306]||(e[1306]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/projection_utils.jl#L1-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1306]})]),s("details",ba,[s("summary",null,[e[1308]||(e[1308]=s("a",{id:"Makie.register_projected_rotations_2d!-Tuple{Plot}",href:"#Makie.register_projected_rotations_2d!-Tuple{Plot}"},[s("span",{class:"jlbinding"},"Makie.register_projected_rotations_2d!")],-1)),e[1309]||(e[1309]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1311]||(e[1311]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register_projected_rotations_2d!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plot; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>From two arrays of points, computes the 2D angle between the x-axis (1, 0) and the direction vector between the points <code>atan(y1 - y0, x1 - x0)</code>.</p><p>Note that this computes projections to correctly deal with transformations.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>startpoint_name::Symbol</code> name of the start points used to derive angles</p></li><li><p><code>endpoint_name::Symbol</code> name of the end points used to derive angles</p></li><li><p><code>output_name::Symbol = :rotations</code> name of the rotation output</p></li><li><p><code>rotation_transform = identity</code> A transformation that is applied to angles before outputting them. E.g. <code>to_upright_angle</code>.</p></li></ul>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1310]||(e[1310]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/projection_utils.jl#L215-L229",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1310]})]),s("details",ya,[s("summary",null,[e[1312]||(e[1312]=s("a",{id:"Makie.replay_events-Tuple{Scene, String}",href:"#Makie.replay_events-Tuple{Scene, String}"},[s("span",{class:"jlbinding"},"Makie.replay_events")],-1)),e[1313]||(e[1313]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1315]||(e[1315]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replay_events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replay_events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Replays the serialized events recorded with <code>record_events</code> in <code>path</code> in <code>scene</code>.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1314]||(e[1314]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/event-recorder.jl#L25-L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1314]})]),s("details",fa,[s("summary",null,[e[1316]||(e[1316]=s("a",{id:"Makie.resample_cmap-Tuple{Any, Integer}",href:"#Makie.resample_cmap-Tuple{Any, Integer}"},[s("span",{class:"jlbinding"},"Makie.resample_cmap")],-1)),e[1317]||(e[1317]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1319]||(e[1319]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample_cmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cmap, ncolors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><p>cmap: anything that <code>to_colormap</code> accepts</p></li><li><p>ncolors: number of desired colors</p></li><li><p>alpha: additional alpha applied to each color. Can also be an array, matching <code>colors</code>, or a tuple giving a start + stop alpha value.</p></li></ul>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1318]||(e[1318]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L15-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1318]})]),s("details",ma,[s("summary",null,[e[1320]||(e[1320]=s("a",{id:"Makie.reset_limits!-Tuple{Any}",href:"#Makie.reset_limits!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.reset_limits!")],-1)),e[1321]||(e[1321]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1323]||(e[1323]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reset_limits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax; xauto </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yauto </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Resets the axis limits depending on the value of <code>ax.limits</code>. If one of the two components of limits is nothing, that value is either copied from the targetlimits if <code>xauto</code> or <code>yauto</code> is false, respectively, or it is determined automatically from the plots in the axis. If one of the components is a tuple of two numbers, those are used directly.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1322]||(e[1322]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L623-L631",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1322]})]),s("details",Ea,[s("summary",null,[e[1324]||(e[1324]=s("a",{id:"Makie.resize_to_layout!",href:"#Makie.resize_to_layout!"},[s("span",{class:"jlbinding"},"Makie.resize_to_layout!")],-1)),e[1325]||(e[1325]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1327]||(e[1327]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resize_to_layout!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Resize <code>fig</code> so that it fits the current contents of its top <code>GridLayout</code>. If a <code>GridLayout</code> contains fixed-size content or aspect-constrained columns, for example, it is likely that the solved size of the <code>GridLayout</code> differs from the size of the <code>Figure</code>. This can result in superfluous whitespace at the borders, or content clipping at the figure edges. Once resized, all content should fit the available space, including the <code>Figure</code>&#39;s outer padding.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1326]||(e[1326]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/figures.jl#L172-L182",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1326]})]),s("details",va,[s("summary",null,[e[1328]||(e[1328]=s("a",{id:"Makie.rich-Tuple",href:"#Makie.rich-Tuple"},[s("span",{class:"jlbinding"},"Makie.rich")],-1)),e[1329]||(e[1329]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1331]||(e[1331]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>RichText</code> object containing all elements in <code>args</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1330]||(e[1330]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/text.jl#L809-L813",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1330]})]),s("details",_a,[s("summary",null,[e[1332]||(e[1332]=s("a",{id:"Makie.rlims!-Tuple{PolarAxis, Union{Nothing, Real, Symbol}}",href:"#Makie.rlims!-Tuple{PolarAxis, Union{Nothing, Real, Symbol}}"},[s("span",{class:"jlbinding"},"Makie.rlims!")],-1)),e[1333]||(e[1333]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1335]||(e[1335]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, rmin], rmax)</span></span></code></pre></div><p>Sets the radial limits of a given <code>PolarAxis</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1334]||(e[1334]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L1005-L1009",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1334]})]),s("details",Ta,[s("summary",null,[e[1336]||(e[1336]=s("a",{id:"Makie.rotate!-Tuple{Makie.Transformable, Vararg{Any}}",href:"#Makie.rotate!-Tuple{Makie.Transformable, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.rotate!")],-1)),e[1337]||(e[1337]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1339]||(e[1339]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_rot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quaternion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_rot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_rot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply an absolute rotation to the transformable. Rotations are all internally converted to <code>Quaternion</code>s.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1338]||(e[1338]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L153-L159",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1338]})]),s("details",ja,[s("summary",null,[e[1340]||(e[1340]=s("a",{id:"Makie.rotate!-Union{Tuple{T}, Tuple{Type{T}, Makie.Transformable, Vararg{Any}}} where T",href:"#Makie.rotate!-Union{Tuple{T}, Tuple{Type{T}, Makie.Transformable, Vararg{Any}}} where T"},[s("span",{class:"jlbinding"},"Makie.rotate!")],-1)),e[1341]||(e[1341]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1343]||(e[1343]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Accum, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_rot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply a relative rotation to the transformable, by multiplying by the current rotation.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1342]||(e[1342]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L146-L150",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1342]})]),s("details",Ma,[s("summary",null,[e[1344]||(e[1344]=s("a",{id:"Makie.rotate_cam!",href:"#Makie.rotate_cam!"},[s("span",{class:"jlbinding"},"Makie.rotate_cam!")],-1)),e[1345]||(e[1345]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1347]||(e[1347]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, cam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera3D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, angles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rotates the camera by the given <code>angles</code> around the camera x- (left, right), y- (up, down) and z-axis (in out). The rotation around the y axis is applied first, then x, then y.</p><p>Note that this method reacts to <code>fix_x_key</code> etc and <code>fixed_axis</code>. The former restrict the rotation around a specific axis when a given key is pressed. The latter keeps the camera y axis fixed as the data space z axis.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1346]||(e[1346]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L516-L526",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1346]})]),s("details",Ca,[s("summary",null,[e[1348]||(e[1348]=s("a",{id:"Makie.rotate_cam!-Tuple{Scene, Vararg{Number}}",href:"#Makie.rotate_cam!-Tuple{Scene, Vararg{Number}}"},[s("span",{class:"jlbinding"},"Makie.rotate_cam!")],-1)),e[1349]||(e[1349]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1351]||(e[1351]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, theta_v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, theta_v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rotate the camera of the Scene by the given rotation. Passing <code>theta_v = (α, β, γ)</code> will rotate the camera according to the Euler angles (α, β, γ).</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1350]||(e[1350]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L298-L304",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1350]})]),s("details",Fa,[s("summary",null,[e[1352]||(e[1352]=s("a",{id:"Makie.scale!-Tuple{Makie.Transformable, Vararg{Any}}",href:"#Makie.scale!-Tuple{Makie.Transformable, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.scale!")],-1)),e[1353]||(e[1353]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1355]||(e[1355]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Absolute], t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Absolute], t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Scale the given <code>t::Transformable</code> (a Scene or Plot) to the given arguments <code>xyz</code>. Any missing dimension will be scaled by 1. If <code>mode == Accum</code> the given scaling will be multiplied with the previous one.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1354]||(e[1354]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L120-L127",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1354]})]),s("details",wa,[s("summary",null,[e[1356]||(e[1356]=s("a",{id:"Makie.scatter",href:"#Makie.scatter"},[s("span",{class:"jlbinding"},"Makie.scatter")],-1)),e[1357]||(e[1357]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1359]||(e[1359]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span></code></pre></div><p>Plots a marker for each element in <code>(x, y, z)</code>, <code>(x, y)</code>, or <code>positions</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>scatter</code> function is <code>Scatter</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit markercolor</code> — Sets the color of the marker. If no color is set, multiple calls to <code>scatter!</code> will cycle through the axis color palette.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>depthsorting</code></strong> = <code>false</code> — Enables depth-sorting of markers which can improve border artifacts. Currently supported in GLMakie only.</p><p><strong><code>distancefield</code></strong> = <code>nothing</code> — Optional distancefield used for e.g. font and bezier path rendering. Will get set automatically.</p><p><strong><code>font</code></strong> = <code>&quot;default&quot;</code> — Sets the font to be used for character markers</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>glowcolor</code></strong> = <code>(:black, 0.0)</code> — Sets the color of the glow effect around the marker.</p><p><strong><code>glowwidth</code></strong> = <code>0.0</code> — Sets the size of a glow effect around the marker.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — Sets the scatter marker.</p><p><strong><code>marker_offset</code></strong> = <code>Vec3f(0)</code> — The offset of the marker from the given position in <code>markerspace</code> units. An offset of 0 corresponds to a centered marker.</p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — Sets the size of the marker by scaling it relative to its base size which can differ for each marker. A <code>Real</code> scales x and y dimensions by the same amount. A <code>Vec</code> or <code>Tuple</code> with two elements scales x and y separately. An array of either scales each marker separately. Humans perceive the area of a marker as its size which grows quadratically with <code>markersize</code>, so multiplying <code>markersize</code> by 2 results in a marker that is 4 times as large, visually.</p><p><strong><code>markerspace</code></strong> = <code>:pixel</code> — Sets the space in which <code>markersize</code> is given. See <code>Makie.spaces()</code> for possible inputs</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>rotation</code></strong> = <code>Billboard()</code> — Sets the rotation of the marker. A <code>Billboard</code> rotation is always around the depth axis.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — Sets the width of the outline around a marker.</p><p><strong><code>transform_marker</code></strong> = <code>false</code> — Controls whether the model matrix (without translation) applies to the marker itself, rather than just the positions. (If this is true, <code>scale!</code> and <code>rotate!</code> will affect the marker.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_offset_width</code></strong> = <code>(0.0, 0.0, 0.0, 0.0)</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,42)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1358]||(e[1358]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L627",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1358]})]),s("details",xa,[s("summary",null,[e[1360]||(e[1360]=s("a",{id:"Makie.scatter!",href:"#Makie.scatter!"},[s("span",{class:"jlbinding"},"Makie.scatter!")],-1)),e[1361]||(e[1361]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1363]||(e[1363]=s("p",null,[s("code",null,"scatter!"),o(" is the mutating variant of plotting function "),s("code",null,"scatter"),o(". Check the docstring for "),s("code",null,"scatter"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1362]||(e[1362]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1362]})]),s("details",Aa,[s("summary",null,[e[1364]||(e[1364]=s("a",{id:"Makie.scatterlines",href:"#Makie.scatterlines"},[s("span",{class:"jlbinding"},"Makie.scatterlines")],-1)),e[1365]||(e[1365]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1367]||(e[1367]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scatterlines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys, [zs]; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots <code>scatter</code> markers and <code>lines</code> between them.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>scatterlines</code> function is <code>ScatterLines</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line, and by default also of the scatter markers.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the pattern of the line e.g. <code>:solid</code>, <code>:dot</code>, <code>:dashdot</code>. For custom patterns look at <code>Linestyle(Number[...])</code></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — Sets the scatter marker.</p><p><strong><code>markercolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markercolormap</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markercolorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — Sets the size of the marker.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — Sets the width of the outline around a marker.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1366]||(e[1366]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L614",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1366]})]),s("details",Sa,[s("summary",null,[e[1368]||(e[1368]=s("a",{id:"Makie.scatterlines!",href:"#Makie.scatterlines!"},[s("span",{class:"jlbinding"},"Makie.scatterlines!")],-1)),e[1369]||(e[1369]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1371]||(e[1371]=s("p",null,[s("code",null,"scatterlines!"),o(" is the mutating variant of plotting function "),s("code",null,"scatterlines"),o(". Check the docstring for "),s("code",null,"scatterlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1370]||(e[1370]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1370]})]),s("details",Da,[s("summary",null,[e[1372]||(e[1372]=s("a",{id:"Makie.select_line-Tuple{Any}",href:"#Makie.select_line-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.select_line")],-1)),e[1373]||(e[1373]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1375]||(e[1375]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">select_line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> line</span></span></code></pre></div><p>Interactively select a line (typically an arrow) on a 2D <code>scene</code> by clicking the left mouse button, dragging and then un-clicking. Return an <strong>observable</strong> whose value corresponds to the selected line on the scene. In addition the function <em>plots</em> the line on the scene as the user clicks and moves the mouse around. When the button is not clicked any more, the plotted line disappears.</p><p>The value of the returned line is updated <strong>only</strong> when the user un-clicks and only if the selected line has non-zero length.</p><p>The <code>kwargs...</code> are propagated into <code>lines!</code> which plots the selected line.</p>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1374]||(e[1374]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L306-L319",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1374]})]),s("details",Ba,[s("summary",null,[e[1376]||(e[1376]=s("a",{id:"Makie.select_point-Tuple{Any}",href:"#Makie.select_point-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.select_point")],-1)),e[1377]||(e[1377]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1379]||(e[1379]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">select_point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> point</span></span></code></pre></div><p>Interactively select a point on a 2D <code>scene</code> by clicking the left mouse button, dragging and then un-clicking. Return an <strong>observable</strong> whose value corresponds to the selected point on the scene. In addition the function <em>plots</em> the point on the scene as the user clicks and moves the mouse around. When the button is not clicked any more, the plotted point disappears.</p><p>The value of the returned point is updated <strong>only</strong> when the user un-clicks.</p><p>The <code>kwargs...</code> are propagated into <code>scatter!</code> which plots the selected point.</p>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1378]||(e[1378]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L368-L380",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1378]})]),s("details",La,[s("summary",null,[e[1380]||(e[1380]=s("a",{id:"Makie.select_rectangle-Tuple{Any}",href:"#Makie.select_rectangle-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.select_rectangle")],-1)),e[1381]||(e[1381]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1383]||(e[1383]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">select_rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rect</span></span></code></pre></div><p>Interactively select a rectangle on a 2D <code>scene</code> by clicking the left mouse button, dragging and then un-clicking. The function returns an <strong>observable</strong> <code>rect</code> whose value corresponds to the selected rectangle on the scene. In addition the function <em>plots</em> the selected rectangle on the scene as the user clicks and moves the mouse around. When the button is not clicked any more, the plotted rectangle disappears.</p><p>The value of the returned observable is updated <strong>only</strong> when the user un-clicks (i.e. when the final value of the rectangle has been decided) and only if the rectangle has area &gt; 0.</p><p>The <code>kwargs...</code> are propagated into <code>lines!</code> which plots the selected rectangle.</p>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1382]||(e[1382]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/interactive_api.jl#L241-L255",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1382]})]),s("details",Pa,[s("summary",null,[e[1384]||(e[1384]=s("a",{id:"Makie.series",href:"#Makie.series"},[s("span",{class:"jlbinding"},"Makie.series")],-1)),e[1385]||(e[1385]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1387]||(e[1387]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">series</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(curves)</span></span></code></pre></div><p>Curves can be:</p><ul><li><p><code>AbstractVector{&lt;: AbstractVector{&lt;: Point2}}</code>: the native representation of a series as a vector of lines</p></li><li><p><code>AbstractMatrix</code>: each row represents y coordinates of the line, while <code>x</code> goes from <code>1:size(curves, 1)</code></p></li><li><p><code>AbstractVector, AbstractMatrix</code>: the same as the above, but the first argument sets the x values for all lines</p></li><li><p><code>AbstractVector{&lt;: Tuple{X&lt;: AbstractVector, Y&lt;: AbstractVector}}</code>: A vector of tuples, where each tuple contains a vector for the x and y coordinates</p></li></ul><p>If any of <code>marker</code>, <code>markersize</code>, <code>markercolor</code>, <code>strokecolor</code> or <code>strokewidth</code> is set != nothing, a scatterplot is added.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>series</code> function is <code>Series</code>.</p><p><strong>Attributes</strong></p><p><strong><code>color</code></strong> = <code>:lighttest</code> — <em>No docs available.</em></p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>labels</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>:solid</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>2</code> — <em>No docs available.</em></p><p><strong><code>marker</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>markercolor</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>solid_color</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>nothing</code> — <em>No docs available.</em></p>',21)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1386]||(e[1386]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L572",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1386]})]),s("details",Ia,[s("summary",null,[e[1388]||(e[1388]=s("a",{id:"Makie.series!",href:"#Makie.series!"},[s("span",{class:"jlbinding"},"Makie.series!")],-1)),e[1389]||(e[1389]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1391]||(e[1391]=s("p",null,[s("code",null,"series!"),o(" is the mutating variant of plotting function "),s("code",null,"series"),o(". Check the docstring for "),s("code",null,"series"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1390]||(e[1390]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1390]})]),s("details",Oa,[s("summary",null,[e[1392]||(e[1392]=s("a",{id:"Makie.set_ambient_light!-Tuple{Any, Any}",href:"#Makie.set_ambient_light!-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.set_ambient_light!")],-1)),e[1393]||(e[1393]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1395]||(e[1395]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_ambient_light!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike, color)</span></span></code></pre></div><p>Sets the color of the ambient light in the scene.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1394]||(e[1394]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L359-L363",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1394]})]),s("details",Va,[s("summary",null,[e[1396]||(e[1396]=s("a",{id:"Makie.set_close_to!-Tuple{IntervalSlider, Any, Any}",href:"#Makie.set_close_to!-Tuple{IntervalSlider, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.set_close_to!")],-1)),e[1397]||(e[1397]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1399]||(e[1399]=s("p",null,[o("Set the "),s("code",null,"slider"),o(" to the values in the slider's range that are closest to "),s("code",null,"v1"),o(" and "),s("code",null,"v2"),o(", and return those values ordered min, misl.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1398]||(e[1398]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/intervalslider.jl#L274-L276",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1398]})]),s("details",Na,[s("summary",null,[e[1400]||(e[1400]=s("a",{id:"Makie.set_close_to!-Tuple{Slider, Any}",href:"#Makie.set_close_to!-Tuple{Slider, Any}"},[s("span",{class:"jlbinding"},"Makie.set_close_to!")],-1)),e[1401]||(e[1401]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1403]||(e[1403]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_close_to!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slider, value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> closest_value</span></span></code></pre></div><p>Set the <code>slider</code> to the value in the slider&#39;s range that is closest to <code>value</code> and return this value. This function should be used to set a slider to a value programmatically, rather than mutating its value observable directly, which doesn&#39;t update the slider visually.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1402]||(e[1402]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/slider.jl#L205-L211",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1402]})]),s("details",Ra,[s("summary",null,[e[1404]||(e[1404]=s("a",{id:"Makie.set_directional_light!-Tuple{Any}",href:"#Makie.set_directional_light!-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.set_directional_light!")],-1)),e[1405]||(e[1405]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1407]||(e[1407]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_directional_light!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike; [color, direction, camera_relative])</span></span></code></pre></div><p>Adjusts the directional light of the scene, assuming it is using <code>FastShading</code>. Not to be used with <code>MultiLightShading</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1406]||(e[1406]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L370-L375",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1406]})]),s("details",za,[s("summary",null,[e[1408]||(e[1408]=s("a",{id:"Makie.set_light!-Tuple{Any, Any, AbstractLight}",href:"#Makie.set_light!-Tuple{Any, Any, AbstractLight}"},[s("span",{class:"jlbinding"},"Makie.set_light!")],-1)),e[1409]||(e[1409]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1411]||(e[1411]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_light!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike, i, light)</span></span></code></pre></div><p>Replaces light <code>i</code> with the given <code>light</code>. (The ambient light is not included in the lights list.)</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1410]||(e[1410]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L405-L410",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1410]})]),s("details",qa,[s("summary",null,[e[1412]||(e[1412]=s("a",{id:"Makie.set_light!-Tuple{Any, Any}",href:"#Makie.set_light!-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.set_light!")],-1)),e[1413]||(e[1413]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1415]||(e[1415]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_light!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike, i; fields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Adjusts one or multiple fields of light number <code>i</code>. (The ambient light is not included in the lights list.)</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1414]||(e[1414]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L388-L393",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1414]})]),s("details",Ga,[s("summary",null,[e[1416]||(e[1416]=s("a",{id:"Makie.set_lights!-Tuple{Any, Any}",href:"#Makie.set_lights!-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.set_lights!")],-1)),e[1417]||(e[1417]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1419]||(e[1419]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_lights!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, lights)</span></span></code></pre></div><p>Replaces the lights vector with a new vector of <code>lights</code>. The new lights should not include <code>AmbientLight</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1418]||(e[1418]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L428-L433",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1418]})]),s("details",Ua,[s("summary",null,[e[1420]||(e[1420]=s("a",{id:"Makie.set_shading_algorithm!-Tuple{Any, Any}",href:"#Makie.set_shading_algorithm!-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.set_shading_algorithm!")],-1)),e[1421]||(e[1421]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1423]||(e[1423]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_shading_algorithm!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scenelike, mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ShadingAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the shading algorithm of the scene. This is only valid before displaying these scene.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1422]||(e[1422]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/lighting.jl#L344-L348",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1422]})]),s("details",Ha,[s("summary",null,[e[1424]||(e[1424]=s("a",{id:"Makie.set_theme!",href:"#Makie.set_theme!"},[s("span",{class:"jlbinding"},"Makie.set_theme!")],-1)),e[1425]||(e[1425]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1427]||(e[1427]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theme; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the global default theme to <code>theme</code> and add / override any attributes given as keyword arguments.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1426]||(e[1426]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/theming.jl#L201-L206",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1426]})]),s("details",Wa,[s("summary",null,[e[1428]||(e[1428]=s("a",{id:"Makie.showgradients-Tuple{AbstractVector{Symbol}}",href:"#Makie.showgradients-Tuple{AbstractVector{Symbol}}"},[s("span",{class:"jlbinding"},"Makie.showgradients")],-1)),e[1429]||(e[1429]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1431]||(e[1431]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">showgradients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cgrads</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{Symbol}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, offset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, fontsize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cgrads) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span></span></code></pre></div><p>Plots the given colour gradients arranged as horizontal colourbars. If you change the offsets or the font size, you may need to change the resolution.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1430]||(e[1430]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/convenience_functions.jl#L15-L24",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1430]})]),s("details",Ya,[s("summary",null,[e[1432]||(e[1432]=s("a",{id:"Makie.spy",href:"#Makie.spy"},[s("span",{class:"jlbinding"},"Makie.spy")],-1)),e[1433]||(e[1433]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1435]||(e[1435]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSparseArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{2, Number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y_range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{2, Number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSparseArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x_range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y_range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosedInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSparseArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Visualizes big sparse matrices. Usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays, GLMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sprand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Float64, N, N, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">N));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or if you want to specify the range of x and y:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p><strong>Plot type</strong></p><p>The plot type alias for the <code>spy</code> function is <code>Spy</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>nothing</code> — Per default the color of the markers will be determined by the value in the matrix, but can be overwritten via <code>color</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>framecolor</code></strong> = <code>:black</code> — By default a frame will be drawn around the data, which uses the <code>framecolor</code> attribute for its color.</p><p><strong><code>framesize</code></strong> = <code>1</code> — The linewidth of the frame</p><p><strong><code>framevisible</code></strong> = <code>true</code> — Whether or not to draw the frame.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>marker</code></strong> = <code>Rect</code> — Can be any of the markers supported by <code>scatter!</code>. Note, for huge sparse arrays, one should use <code>FastPixel</code>, which is a very fast, but can only render square markers. So, without <code>Axis(...; aspect=1)</code>, the markers won&#39;t have the correct size. Compare:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sprand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], data; marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FastPixel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], data; marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FastPixel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; aspect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><p><strong><code>marker_gap</code></strong> = <code>0</code> — Makes the marker size smaller to create a gap between the markers. The unit of this is in data space.</p><p><strong><code>markersize</code></strong> = <code>automatic</code> — markersize=automatic, will make the marker size fit the data - but can also be set manually.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,35)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1434]||(e[1434]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L629",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1434]})]),s("details",Ka,[s("summary",null,[e[1436]||(e[1436]=s("a",{id:"Makie.spy!",href:"#Makie.spy!"},[s("span",{class:"jlbinding"},"Makie.spy!")],-1)),e[1437]||(e[1437]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1439]||(e[1439]=s("p",null,[s("code",null,"spy!"),o(" is the mutating variant of plotting function "),s("code",null,"spy"),o(". Check the docstring for "),s("code",null,"spy"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1438]||(e[1438]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1438]})]),s("details",Qa,[s("summary",null,[e[1440]||(e[1440]=s("a",{id:"Makie.stairs",href:"#Makie.stairs"},[s("span",{class:"jlbinding"},"Makie.stairs")],-1)),e[1441]||(e[1441]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1443]||(e[1443]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stairs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plot a stair function.</p><p>The conversion trait of <code>stairs</code> is <code>PointBased</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>stairs</code> function is <code>Stairs</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>step</code></strong> = <code>:pre</code> — The <code>step</code> parameter can take the following values:</p><ul><li><p><code>:pre</code>: horizontal part of step extends to the left of each value in <code>xs</code>.</p></li><li><p><code>:post</code>: horizontal part of step extends to the right of each value in <code>xs</code>.</p></li><li><p><code>:center</code>: horizontal part of step extends halfway between the two adjacent values of <code>xs</code>.</p></li></ul><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1442]||(e[1442]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L618",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1442]})]),s("details",$a,[s("summary",null,[e[1444]||(e[1444]=s("a",{id:"Makie.stairs!",href:"#Makie.stairs!"},[s("span",{class:"jlbinding"},"Makie.stairs!")],-1)),e[1445]||(e[1445]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1447]||(e[1447]=s("p",null,[s("code",null,"stairs!"),o(" is the mutating variant of plotting function "),s("code",null,"stairs"),o(". Check the docstring for "),s("code",null,"stairs"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1446]||(e[1446]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1446]})]),s("details",Xa,[s("summary",null,[e[1448]||(e[1448]=s("a",{id:"Makie.stem",href:"#Makie.stem"},[s("span",{class:"jlbinding"},"Makie.stem")],-1)),e[1449]||(e[1449]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1451]||(e[1451]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys, [zs]; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots markers at the given positions extending from <code>offset</code> along stem lines.</p><p>The conversion trait of <code>stem</code> is <code>PointBased</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>stem</code> function is <code>Stem</code>.</p><p><strong>Attributes</strong></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit markercolor</code> — <em>No docs available.</em></p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>colorscale</code></strong> = <code>identity</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[[:stemcolor, :color, :trunkcolor] =&gt; :color]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>marker</code></strong> = <code>:circle</code> — <em>No docs available.</em></p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>offset</code></strong> = <code>0</code> — Can be a number, in which case it sets <code>y</code> for 2D, and <code>z</code> for 3D stems. It can be a <code>Point2</code> for 2D plots, as well as a <code>Point3</code> for 3D plots. It can also be an iterable of any of these at the same length as <code>xs</code>, <code>ys</code>, <code>zs</code>.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stemcolor</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>stemcolormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>stemcolorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>stemlinestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>stemwidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>@inherit markerstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit markerstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>trunkcolor</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>trunkcolormap</code></strong> = <code>@inherit colormap</code> — <em>No docs available.</em></p><p><strong><code>trunkcolorrange</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>trunklinestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>trunkwidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1450]||(e[1450]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L613",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1450]})]),s("details",Ja,[s("summary",null,[e[1452]||(e[1452]=s("a",{id:"Makie.stem!",href:"#Makie.stem!"},[s("span",{class:"jlbinding"},"Makie.stem!")],-1)),e[1453]||(e[1453]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1455]||(e[1455]=s("p",null,[s("code",null,"stem!"),o(" is the mutating variant of plotting function "),s("code",null,"stem"),o(". Check the docstring for "),s("code",null,"stem"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1454]||(e[1454]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1454]})]),s("details",Za,[s("summary",null,[e[1456]||(e[1456]=s("a",{id:"Makie.stephist",href:"#Makie.stephist"},[s("span",{class:"jlbinding"},"Makie.stephist")],-1)),e[1457]||(e[1457]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1459]||(e[1459]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stephist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span></code></pre></div><p>Plot a step histogram of <code>values</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>stephist</code> function is <code>StepHist</code>.</p><p><strong>Attributes</strong></p><p><strong><code>bins</code></strong> = <code>15</code> — Can be an <code>Int</code> to create that number of equal-width bins over the range of <code>values</code>. Alternatively, it can be a sorted iterable of bin edges.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>:solid</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>normalization</code></strong> = <code>:none</code> — Allows to apply a normalization to the histogram. Possible values are:</p><ul><li><p><code>:pdf</code>: Normalize by sum of weights and bin sizes. Resulting histogram has norm 1 and represents a PDF.</p></li><li><p><code>:density</code>: Normalize by bin sizes only. Resulting histogram represents count density of input and does not have norm 1. Will not modify the histogram if it already represents a density (<code>h.isdensity == 1</code>).</p></li><li><p><code>:probability</code>: Normalize by sum of weights only. Resulting histogram represents the fraction of probability mass for each bin and does not have norm 1.</p></li><li><p><code>:none</code>: Do not normalize.</p></li></ul><p><strong><code>scale_to</code></strong> = <code>nothing</code> — Allows to scale all values to a certain height.</p><p><strong><code>weights</code></strong> = <code>automatic</code> — Allows to provide statistical weights.</p>',14)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1458]||(e[1458]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L565",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1458]})]),s("details",en,[s("summary",null,[e[1460]||(e[1460]=s("a",{id:"Makie.stephist!",href:"#Makie.stephist!"},[s("span",{class:"jlbinding"},"Makie.stephist!")],-1)),e[1461]||(e[1461]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1463]||(e[1463]=s("p",null,[s("code",null,"stephist!"),o(" is the mutating variant of plotting function "),s("code",null,"stephist"),o(". Check the docstring for "),s("code",null,"stephist"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1462]||(e[1462]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1462]})]),s("details",sn,[s("summary",null,[e[1464]||(e[1464]=s("a",{id:"Makie.streamplot",href:"#Makie.streamplot"},[s("span",{class:"jlbinding"},"Makie.streamplot")],-1)),e[1465]||(e[1465]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1467]||(e[1467]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">streamplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xinterval, yinterval; color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> norm, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>f must either accept <code>f(::Point)</code> or <code>f(x::Number, y::Number)</code>. f must return a Point2.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point2{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">streamplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Implementation</strong></p><p>See the function <code>Makie.streamplot_impl</code> for implementation details.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>streamplot</code> function is <code>StreamPlot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>arrow_head</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>arrow_size</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>norm</code> — One can choose the color of the lines by passing a function <code>color_func(dx::Point)</code> to the <code>color</code> attribute. This can be set to any function or composition of functions. The <code>dx</code> which is passed to <code>color_func</code> is the output of <code>f</code> at the point being colored.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>density</code></strong> = <code>1.0</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>gridsize</code></strong> = <code>(32, 32, 32)</code> — <em>No docs available.</em></p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>maxsteps</code></strong> = <code>500</code> — <em>No docs available.</em></p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>quality</code></strong> = <code>16</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stepsize</code></strong> = <code>0.01</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,43)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1466]||(e[1466]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L626",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1466]})]),s("details",tn,[s("summary",null,[e[1468]||(e[1468]=s("a",{id:"Makie.streamplot!",href:"#Makie.streamplot!"},[s("span",{class:"jlbinding"},"Makie.streamplot!")],-1)),e[1469]||(e[1469]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1471]||(e[1471]=s("p",null,[s("code",null,"streamplot!"),o(" is the mutating variant of plotting function "),s("code",null,"streamplot"),o(". Check the docstring for "),s("code",null,"streamplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1470]||(e[1470]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1470]})]),s("details",on,[s("summary",null,[e[1472]||(e[1472]=s("a",{id:"Makie.subscript-Tuple",href:"#Makie.subscript-Tuple"},[s("span",{class:"jlbinding"},"Makie.subscript")],-1)),e[1473]||(e[1473]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1475]||(e[1475]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subscript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>RichText</code> object representing a superscript containing all elements in <code>args</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1474]||(e[1474]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/text.jl#L815-L819",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1474]})]),s("details",an,[s("summary",null,[e[1476]||(e[1476]=s("a",{id:"Makie.subsup-Tuple",href:"#Makie.subsup-Tuple"},[s("span",{class:"jlbinding"},"Makie.subsup")],-1)),e[1477]||(e[1477]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1479]||(e[1479]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subsup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(subscript, superscript; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>RichText</code> object representing a right subscript/superscript combination, where both scripts are left-aligned against the preceding text.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1478]||(e[1478]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/text.jl#L827-L832",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1478]})]),s("details",nn,[s("summary",null,[e[1480]||(e[1480]=s("a",{id:"Makie.superscript-Tuple",href:"#Makie.superscript-Tuple"},[s("span",{class:"jlbinding"},"Makie.superscript")],-1)),e[1481]||(e[1481]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1483]||(e[1483]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">superscript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>RichText</code> object representing a superscript containing all elements in <code>args</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1482]||(e[1482]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/basic_recipes/text.jl#L821-L825",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1482]})]),s("details",ln,[s("summary",null,[e[1484]||(e[1484]=s("a",{id:"Makie.surface",href:"#Makie.surface"},[s("span",{class:"jlbinding"},"Makie.surface")],-1)),e[1485]||(e[1485]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1487]||(e[1487]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z)</span></span></code></pre></div><p>Plots a surface, where <code>(x, y)</code> define a grid whose heights are the entries in <code>z</code>. <code>x</code> and <code>y</code> may be <code>Vectors</code> which define a regular grid, <strong>or</strong> <code>Matrices</code> which define an irregular grid.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>surface</code> function is <code>Surface</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>nothing</code> — Can be set to an <code>Matrix{&lt;: Union{Number, Colorant}}</code> to color surface independent of the <code>z</code> component. If <code>color=nothing</code>, it defaults to <code>color=z</code>. Can also be a <code>Makie.AbstractPattern</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — [(W)GLMakie only] Specifies whether the surface matrix gets sampled with interpolation.</p><p><strong><code>invert_normals</code></strong> = <code>false</code> — Inverts the normals generated for the surface. This can be useful to illuminate the other side of the surface.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>matcap</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>automatic</code> — Sets a transform for uv coordinates, which controls how a texture is mapped to a surface. The attribute can be <code>I</code>, <code>scale::VecTypes{2}</code>, <code>(translation::VecTypes{2}, scale::VecTypes{2})</code>, any of <code>:rotr90</code>, <code>:rotl90</code>, <code>:rot180</code>, <code>:swap_xy</code>/<code>:transpose</code>, <code>:flip_x</code>, <code>:flip_y</code>, <code>:flip_xy</code>, or most generally a <code>Makie.Mat{2, 3, Float32}</code> or <code>Makie.Mat3f</code> as returned by <code>Makie.uv_transform()</code>. They can also be changed by passing a tuple <code>(op3, op2, op1)</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1486]||(e[1486]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L615",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1486]})]),s("details",dn,[s("summary",null,[e[1488]||(e[1488]=s("a",{id:"Makie.surface!",href:"#Makie.surface!"},[s("span",{class:"jlbinding"},"Makie.surface!")],-1)),e[1489]||(e[1489]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1491]||(e[1491]=s("p",null,[s("code",null,"surface!"),o(" is the mutating variant of plotting function "),s("code",null,"surface"),o(". Check the docstring for "),s("code",null,"surface"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1490]||(e[1490]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1490]})]),s("details",rn,[s("summary",null,[e[1492]||(e[1492]=s("a",{id:"Makie.text",href:"#Makie.text"},[s("span",{class:"jlbinding"},"Makie.text")],-1)),e[1493]||(e[1493]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1495]||(e[1495]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions; text, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; text, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z; text, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots one or multiple texts passed via the <code>text</code> keyword. <code>Text</code> uses the <code>PointBased</code> conversion trait.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>text</code> function is <code>Text</code>.</p><p><strong>Attributes</strong></p><p><strong><code>align</code></strong> = <code>(:left, :bottom)</code> — Sets the alignment of the string w.r.t. <code>position</code>. Uses <code>:left, :center, :right, :top, :bottom, :baseline</code> or fractions.</p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit textcolor</code> — Sets the color of the text. One can set one color per glyph by passing a <code>Vector{&lt;:Colorant}</code>, or one colorant for the whole text. If color is a vector of numbers, the colormap args are used to map the numbers to colors.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>font</code></strong> = <code>@inherit font</code> — Sets the font. Can be a <code>Symbol</code> which will be looked up in the <code>fonts</code> dictionary or a <code>String</code> specifying the (partial) name of a font or the file path of a font file</p><p><strong><code>fonts</code></strong> = <code>@inherit fonts</code> — Used as a dictionary to look up fonts specified by <code>Symbol</code>, for example <code>:regular</code>, <code>:bold</code> or <code>:italic</code>.</p><p><strong><code>fontsize</code></strong> = <code>@inherit fontsize</code> — The fontsize in units depending on <code>markerspace</code>.</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>glowcolor</code></strong> = <code>(:black, 0.0)</code> — Sets the color of the glow effect around the text.</p><p><strong><code>glowwidth</code></strong> = <code>0.0</code> — Sets the size of a glow effect around the text.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>justification</code></strong> = <code>automatic</code> — Sets the alignment of text w.r.t its bounding box. Can be <code>:left, :center, :right</code> or a fraction. Will default to the horizontal alignment in <code>align</code>.</p><p><strong><code>lineheight</code></strong> = <code>1.0</code> — The lineheight multiplier.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>markerspace</code></strong> = <code>:pixel</code> — Sets the space in which <code>fontsize</code> acts. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>offset</code></strong> = <code>(0.0, 0.0)</code> — The offset of the text from the given position in <code>markerspace</code> units.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>position</code></strong> = <code>(0.0, 0.0)</code> — Deprecated: Specifies the position of the text. Use the positional argument to <code>text</code> instead.</p><p><strong><code>rotation</code></strong> = <code>0.0</code> — Rotates text around the given position</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>(:black, 0.0)</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokewidth</code></strong> = <code>0</code> — Sets the width of the outline around a marker.</p><p><strong><code>text</code></strong> = <code>&quot;&quot;</code> — Specifies one piece of text or a vector of texts to show, where the number has to match the number of positions given. Makie supports <code>String</code> which is used for all normal text and <code>LaTeXString</code> which layouts mathematical expressions using <code>MathTeXEngine.jl</code>.</p><p><strong><code>transform_marker</code></strong> = <code>false</code> — Controls whether the model matrix (without translation) applies to the glyph itself, rather than just the positions. (If this is true, <code>scale!</code> and <code>rotate!</code> will affect the text glyphs.)</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>word_wrap_width</code></strong> = <code>-1</code> — Specifies a linewidth limit for text. If a word overflows this limit, a newline is inserted before it. Negative numbers disable word wrapping.</p>`,44)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1494]||(e[1494]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L624",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1494]})]),s("details",cn,[s("summary",null,[e[1496]||(e[1496]=s("a",{id:"Makie.text!",href:"#Makie.text!"},[s("span",{class:"jlbinding"},"Makie.text!")],-1)),e[1497]||(e[1497]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1499]||(e[1499]=s("p",null,[s("code",null,"text!"),o(" is the mutating variant of plotting function "),s("code",null,"text"),o(". Check the docstring for "),s("code",null,"text"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1498]||(e[1498]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1498]})]),s("details",pn,[s("summary",null,[e[1500]||(e[1500]=s("a",{id:"Makie.textlabel",href:"#Makie.textlabel"},[s("span",{class:"jlbinding"},"Makie.textlabel")],-1)),e[1501]||(e[1501]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1503]||(e[1503]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">textlabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions, text; attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">textlabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position; text, attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">textlabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text_position; attributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots the given text(s) with a background(s) at the given position(s).</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>textlabel</code> function is <code>TextLabel</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — Sets the alpha value (opaqueness) of the background.</p><p><strong><code>background_color</code></strong> = <code>:white</code> — Sets the color of the background. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors, a single <code>Colorant</code> or an <code>&lt;: AbstractPattern</code> to cover the poly with a regular pattern, e.g. for hatching.</p><p><strong><code>clip_planes</code></strong> = <code>Plane3f[]</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>cornerradius</code></strong> = <code>5.0</code> — Sets the corner radius when given a Rect2 background shape.</p><p><strong><code>cornervertices</code></strong> = <code>10</code> — Sets the number of vertices involved in a rounded corner. Must be at least 2.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of the textlabel after all other transformations, i.e. in clip space where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>draw_on_top</code></strong> = <code>true</code> — Controls whether the textlabel is drawn in front (true, default) or at a depth appropriate to its position.</p><p><strong><code>font</code></strong> = <code>@inherit font</code> — Sets the font. Can be a <code>Symbol</code> which will be looked up in the <code>fonts</code> dictionary or a <code>String</code> specifying the (partial) name of a font or the file path of a font file</p><p><strong><code>fonts</code></strong> = <code>@inherit fonts</code> — Used as a dictionary to look up fonts specified by <code>Symbol</code>, for example <code>:regular</code>, <code>:bold</code> or <code>:italic</code>.</p><p><strong><code>fontsize</code></strong> = <code>@inherit fontsize</code> — The fontsize in pixel units.</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Controls whether the background renders with fxaa (anti-aliasing, GLMakie only). This is set to <code>false</code> by default to prevent artifacts around text.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering of outline corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>justification</code></strong> = <code>automatic</code> — Sets the alignment of text with respect to its bounding box. Can be <code>:left, :center, :right</code> or a fraction. Will default to the horizontal alignment in <code>text_align</code>.</p><p><strong><code>keep_aspect</code></strong> = <code>false</code> — Controls whether the aspect ratio of the background shape is kept during rescaling</p><p><strong><code>lineheight</code></strong> = <code>1.0</code> — The lineheight multiplier.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the outline. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>offset</code></strong> = <code>(0.0, 0.0)</code> — The offset of the textlabel from the given position in <code>markerspace</code> units.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>padding</code></strong> = <code>4</code> — Sets the padding between the text bounding box and background shape.</p><p><strong><code>position</code></strong> = <code>(0, 0)</code> — Deprecated: Specifies the position of the text. Use the positional argument to <code>text</code> instead.</p><p><strong><code>shading</code></strong> = <code>NoShading</code> — Controls whether the background reacts to light.</p><p><strong><code>shape</code></strong> = <code>Rect2f(0, 0, 1, 1)</code> — Controls the shape of the background. Can be a GeometryPrimitive, mesh or function <code>(origin, size) -&gt; coordinates</code>. The former two options are automatically rescaled to the padded bounding box of the rendered text. By default (0, 0) will be the lower left corner and (1, 1) the upper right corner of the padded bounding box. See <code>shape_limits</code>.</p><p><strong><code>shape_limits</code></strong> = <code>Rect2f(0, 0, 1, 1)</code> — Sets the coordinates in <code>shape</code> space that should be transformed to match the size of the text bounding box. For example, <code>shape_limits = Rect2f(-1, -1, 2, 2)</code> results in transforming (-1, 1) to the lower left corner of the padded text bounding box and (1, 1) to the upper right corner. If the <code>shape</code> contains coordinates outside this range, they will rendered outside the padded text bounding box.</p><p><strong><code>space</code></strong> = <code>:data</code> — sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>stroke_alpha</code></strong> = <code>1.0</code> — Sets the alpha value (opaqueness) of the background outline.</p><p><strong><code>strokecolor</code></strong> = <code>:black</code> — Sets the color of the outline around the background</p><p><strong><code>strokewidth</code></strong> = <code>1</code> — Sets the width of the outline.</p><p><strong><code>text</code></strong> = <code>&quot;&quot;</code> — Specifies one piece of text or a vector of texts to show, where the number has to match the number of positions given. Makie supports <code>String</code> which is used for all normal text and <code>LaTeXString</code> which layouts mathematical expressions using <code>MathTeXEngine.jl</code>.</p><p><strong><code>text_align</code></strong> = <code>(:center, :center)</code> — Sets the alignment of the string with respect to <code>position</code>. Uses <code>:left, :center, :right, :top, :bottom, :baseline</code> or fractions.</p><p><strong><code>text_alpha</code></strong> = <code>1.0</code> — Sets the alpha value (opaqueness) of the text.</p><p><strong><code>text_color</code></strong> = <code>@inherit textcolor</code> — Sets the color of the text. One can set one color per glyph by passing a <code>Vector{&lt;:Colorant}</code> or one colorant for the whole text.</p><p><strong><code>text_fxaa</code></strong> = <code>false</code> — Controls whether the text renders with fxaa (anti-aliasing, GLMakie only). Setting this to true will reduce text quality.</p><p><strong><code>text_glowcolor</code></strong> = <code>(:black, 0.0)</code> — Sets the color of the glow effect around text.</p><p><strong><code>text_glowwidth</code></strong> = <code>0.0</code> — Sets the size of a glow effect around text.</p><p><strong><code>text_rotation</code></strong> = <code>0.0</code> — Rotates the text around the given position. This affects the size of the textlabel but not its rotation</p><p><strong><code>text_strokecolor</code></strong> = <code>(:black, 0.0)</code> — Sets the color of the outline around text.</p><p><strong><code>text_strokewidth</code></strong> = <code>0</code> — Sets the width of the outline around text.</p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>word_wrap_width</code></strong> = <code>-1</code> — Specifies a linewidth limit for text. If a word overflows this limit, a newline is inserted before it. Negative numbers disable word wrapping.</p>`,51)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1502]||(e[1502]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L649",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1502]})]),s("details",hn,[s("summary",null,[e[1504]||(e[1504]=s("a",{id:"Makie.textlabel!",href:"#Makie.textlabel!"},[s("span",{class:"jlbinding"},"Makie.textlabel!")],-1)),e[1505]||(e[1505]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1507]||(e[1507]=s("p",null,[s("code",null,"textlabel!"),o(" is the mutating variant of plotting function "),s("code",null,"textlabel"),o(". Check the docstring for "),s("code",null,"textlabel"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1506]||(e[1506]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1506]})]),s("details",kn,[s("summary",null,[e[1508]||(e[1508]=s("a",{id:"Makie.thetalims!-Tuple{PolarAxis, Union{Nothing, Real}, Union{Nothing, Real}}",href:"#Makie.thetalims!-Tuple{PolarAxis, Union{Nothing, Real}, Union{Nothing, Real}}"},[s("span",{class:"jlbinding"},"Makie.thetalims!")],-1)),e[1509]||(e[1509]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1511]||(e[1511]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">thetalims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PolarAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, thetamin, thetamax)</span></span></code></pre></div><p>Sets the angular limits of a given <code>PolarAxis</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1510]||(e[1510]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/polaraxis.jl#L1017-L1021",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1510]})]),s("details",gn,[s("summary",null,[e[1512]||(e[1512]=s("a",{id:"Makie.tight_ticklabel_spacing!",href:"#Makie.tight_ticklabel_spacing!"},[s("span",{class:"jlbinding"},"Makie.tight_ticklabel_spacing!")],-1)),e[1513]||(e[1513]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1515]||(e[1515]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tight_ticklabel_spacing!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the space allocated for the xticklabels and yticklabels of the <code>Axis</code> to the minimum that is needed.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1514]||(e[1514]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1215-L1219",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1514]})]),s("details",un,[s("summary",null,[e[1516]||(e[1516]=s("a",{id:"Makie.tight_ticklabel_spacing!-Tuple{Colorbar}",href:"#Makie.tight_ticklabel_spacing!-Tuple{Colorbar}"},[s("span",{class:"jlbinding"},"Makie.tight_ticklabel_spacing!")],-1)),e[1517]||(e[1517]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1519]||(e[1519]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">space </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tight_ticklabel_spacing!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colorbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the space allocated for the ticklabels of the <code>Colorbar</code> to the minimum that is needed and returns that value.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1518]||(e[1518]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/colorbar.jl#L473-L477",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1518]})]),s("details",bn,[s("summary",null,[e[1520]||(e[1520]=s("a",{id:"Makie.tight_xticklabel_spacing!",href:"#Makie.tight_xticklabel_spacing!"},[s("span",{class:"jlbinding"},"Makie.tight_xticklabel_spacing!")],-1)),e[1521]||(e[1521]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1523]||(e[1523]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">space </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tight_xticklabel_spacing!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the space allocated for the xticklabels of the <code>Axis</code> to the minimum that is needed and returns that value.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1522]||(e[1522]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1205-L1209",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1522]})]),s("details",yn,[s("summary",null,[e[1524]||(e[1524]=s("a",{id:"Makie.tight_yticklabel_spacing!",href:"#Makie.tight_yticklabel_spacing!"},[s("span",{class:"jlbinding"},"Makie.tight_yticklabel_spacing!")],-1)),e[1525]||(e[1525]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1527]||(e[1527]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">space </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tight_yticklabel_spacing!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the space allocated for the yticklabels of the <code>Axis</code> to the minimum that is needed and returns that value.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1526]||(e[1526]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1195-L1199",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1526]})]),s("details",fn,[s("summary",null,[e[1528]||(e[1528]=s("a",{id:"Makie.tightlimits!-Tuple{Axis, Vararg{Union{Bottom, Left, Right, Top}}}",href:"#Makie.tightlimits!-Tuple{Axis, Vararg{Union{Bottom, Left, Right, Top}}}"},[s("span",{class:"jlbinding"},"Makie.tightlimits!")],-1)),e[1529]||(e[1529]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1531]||(e[1531]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tightlimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sides</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Left, Right, Bottom, Top}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span></code></pre></div><p>Sets the autolimit margins to zero on all given sides.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tightlimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(laxis, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1530]||(e[1530]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/helpers.jl#L103-L113",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1530]})]),s("details",mn,[s("summary",null,[e[1532]||(e[1532]=s("a",{id:"Makie.tightlimits!-Tuple{Axis}",href:"#Makie.tightlimits!-Tuple{Axis}"},[s("span",{class:"jlbinding"},"Makie.tightlimits!")],-1)),e[1533]||(e[1533]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1535]||(e[1535]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tightlimits!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(la</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the autolimit margins to zero on all sides.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1534]||(e[1534]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/helpers.jl#L92-L96",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1534]})]),s("details",En,[s("summary",null,[e[1536]||(e[1536]=s("a",{id:"Makie.timeseries",href:"#Makie.timeseries"},[s("span",{class:"jlbinding"},"Makie.timeseries")],-1)),e[1537]||(e[1537]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1539]||(e[1539]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timeseries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Observable{{Union{Number, Point2}}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a sampled signal.</p><p>Usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">signal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timeseries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(signal)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @async is optional, but helps to continue evaluating more code</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Makie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isclosed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # acquire data from e.g. a sensor:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # update the signal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signal[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # sleep/ wait for new data/ whatever...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # It&#39;s important to yield here though, otherwise nothing will be rendered</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Plot type</strong></p><p>The plot type alias for the <code>timeseries</code> function is <code>TimeSeries</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>history</code></strong> = <code>100</code> — <em>No docs available.</em></p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — Controls the rendering at corners. Options are <code>:miter</code> for sharp corners, <code>:bevel</code> for &quot;cut off&quot; corners, and <code>:round</code> for rounded corners. If the corner angle is below <code>miter_limit</code>, <code>:miter</code> is equivalent to <code>:bevel</code> to avoid long spikes.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of line cap used. Options are <code>:butt</code> (flat without extrusion), <code>:square</code> (flat with half a linewidth extrusion) or <code>:round</code>.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in screen units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — Sets the minimum inner join angle below which miter joins truncate. See also <code>Makie.miter_distance_to_angle</code>.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,37)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1538]||(e[1538]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L631",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1538]})]),s("details",vn,[s("summary",null,[e[1540]||(e[1540]=s("a",{id:"Makie.timeseries!",href:"#Makie.timeseries!"},[s("span",{class:"jlbinding"},"Makie.timeseries!")],-1)),e[1541]||(e[1541]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1543]||(e[1543]=s("p",null,[s("code",null,"timeseries!"),o(" is the mutating variant of plotting function "),s("code",null,"timeseries"),o(". Check the docstring for "),s("code",null,"timeseries"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1542]||(e[1542]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1542]})]),s("details",_n,[s("summary",null,[e[1544]||(e[1544]=s("a",{id:"Makie.to_align-Tuple{AbstractVector}",href:"#Makie.to_align-Tuple{AbstractVector}"},[s("span",{class:"jlbinding"},"Makie.to_align")],-1)),e[1545]||(e[1545]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1547]||(e[1547]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(align[, error_prefix])</span></span></code></pre></div><p>Converts the given align to a <code>Vec2f</code>. Can convert <code>VecTypes{2}</code> and two component <code>Tuple</code>s with <code>Real</code> and <code>Symbol</code> elements.</p><p>To specify a custom error message you can add an <code>error_prefix</code> or use <code>halign2num(value, error_msg)</code> and <code>valign2num(value, error_msg)</code> respectively.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1546]||(e[1546]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1339-L1347",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1546]})]),s("details",Tn,[s("summary",null,[e[1548]||(e[1548]=s("a",{id:"Makie.to_colormap-Tuple{AbstractVector}",href:"#Makie.to_colormap-Tuple{AbstractVector}"},[s("span",{class:"jlbinding"},"Makie.to_colormap")],-1)),e[1549]||(e[1549]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1551]||(e[1551]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_colormap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An <code>AbstractVector{T}</code> with any object that <code>to_color</code> accepts.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1550]||(e[1550]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1602-L1606",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1550]})]),s("details",jn,[s("summary",null,[e[1552]||(e[1552]=s("a",{id:"Makie.to_colormap-Tuple{Union{String, Symbol}}",href:"#Makie.to_colormap-Tuple{Union{String, Symbol}}"},[s("span",{class:"jlbinding"},"Makie.to_colormap")],-1)),e[1553]||(e[1553]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1555]||(e[1555]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_colormap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{String, Symbol}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{RGBAf}</span></span></code></pre></div><p>A Symbol/String naming the gradient. For more on what names are available please see: <code>available_gradients()</code>. For now, we support gradients from <code>PlotUtils</code> natively.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1554]||(e[1554]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1615-L1620",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1554]})]),s("details",Mn,[s("summary",null,[e[1556]||(e[1556]=s("a",{id:"Makie.to_font-Tuple{String}",href:"#Makie.to_font-Tuple{String}"},[s("span",{class:"jlbinding"},"Makie.to_font")],-1)),e[1557]||(e[1557]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1559]||(e[1559]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Loads a font specified by <code>str</code> and returns a <code>NativeFont</code> object storing the font handle. A font can either be specified by a file path, such as &quot;folder/with/fonts/font.otf&quot;, or by a (partial) name such as &quot;Helvetica&quot;, &quot;Helvetica Bold&quot; etc.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1558]||(e[1558]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1429-L1435",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1558]})]),s("details",Cn,[s("summary",null,[e[1560]||(e[1560]=s("a",{id:"Makie.to_rotation-Tuple{Quaternionf}",href:"#Makie.to_rotation-Tuple{Quaternionf}"},[s("span",{class:"jlbinding"},"Makie.to_rotation")],-1)),e[1561]||(e[1561]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1563]||(e[1563]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rotation accepts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_rotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, quaternion)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_rotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, tuple_float)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_rotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b, vec4)</span></span></code></pre></div>`,1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1562]||(e[1562]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/conversions.jl#L1483-L1488",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1562]})]),s("details",Fn,[s("summary",null,[e[1564]||(e[1564]=s("a",{id:"Makie.tooltip",href:"#Makie.tooltip"},[s("span",{class:"jlbinding"},"Makie.tooltip")],-1)),e[1565]||(e[1565]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1567]||(e[1567]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, string)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, string)</span></span></code></pre></div><p>Creates a tooltip pointing at <code>position</code> displaying the given `string</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>tooltip</code> function is <code>Tooltip</code>.</p><p><strong>Attributes</strong></p><p><strong><code>align</code></strong> = <code>0.5</code> — Sets the alignment of the tooltip relative <code>position</code>. With <code>align = 0.5</code> the tooltip is centered above/below/left/right the <code>position</code>.</p><p><strong><code>backgroundcolor</code></strong> = <code>:white</code> — Sets the background color of the tooltip.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>font</code></strong> = <code>@inherit font</code> — Sets the font.</p><p><strong><code>fontsize</code></strong> = <code>16</code> — Sets the text size in screen units.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>false</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>justification</code></strong> = <code>:left</code> — Sets whether text is aligned to the <code>:left</code>, <code>:center</code> or <code>:right</code> within its bounding box.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>offset</code></strong> = <code>10</code> — Sets the offset between the given <code>position</code> and the tip of the triangle pointing at that position.</p><p><strong><code>outline_color</code></strong> = <code>:black</code> — Sets the color of the tooltip outline.</p><p><strong><code>outline_linestyle</code></strong> = <code>nothing</code> — Sets the linestyle of the tooltip outline.</p><p><strong><code>outline_linewidth</code></strong> = <code>2.0</code> — Sets the linewidth of the tooltip outline.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>placement</code></strong> = <code>:above</code> — Sets where the tooltip should be placed relative to <code>position</code>. Can be <code>:above</code>, <code>:below</code>, <code>:left</code>, <code>:right</code>.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>:white</code> — Sets the text outline color.</p><p><strong><code>strokewidth</code></strong> = <code>0</code> — Gives text an outline if set to a positive value.</p><p><strong><code>text</code></strong> = <code>&quot;&quot;</code> — <em>No docs available.</em></p><p><strong><code>textcolor</code></strong> = <code>@inherit textcolor</code> — Sets the text color.</p><p><strong><code>textpadding</code></strong> = <code>(4, 4, 4, 4)</code> — Sets the padding around text in the tooltip. This is given as <code>(left, right, bottom, top)</code> offsets.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>triangle_size</code></strong> = <code>10</code> — Sets the size of the triangle pointing at <code>position</code>.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>xautolimits</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>yautolimits</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>zautolimits</code></strong> = <code>false</code> — <em>No docs available.</em></p>',38)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1566]||(e[1566]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L607",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1566]})]),s("details",wn,[s("summary",null,[e[1568]||(e[1568]=s("a",{id:"Makie.tooltip!",href:"#Makie.tooltip!"},[s("span",{class:"jlbinding"},"Makie.tooltip!")],-1)),e[1569]||(e[1569]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1571]||(e[1571]=s("p",null,[s("code",null,"tooltip!"),o(" is the mutating variant of plotting function "),s("code",null,"tooltip"),o(". Check the docstring for "),s("code",null,"tooltip"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1570]||(e[1570]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1570]})]),s("details",xn,[s("summary",null,[e[1572]||(e[1572]=s("a",{id:"Makie.translate!-Tuple{Makie.Transformable, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}",href:"#Makie.translate!-Tuple{Makie.Transformable, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}"},[s("span",{class:"jlbinding"},"Makie.translate!")],-1)),e[1573]||(e[1573]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1575]||(e[1575]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply an absolute translation to the given <code>Transformable</code> (a Scene or Plot), translating it to <code>x, y, z</code>.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1574]||(e[1574]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L176-L181",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1574]})]),s("details",An,[s("summary",null,[e[1576]||(e[1576]=s("a",{id:"Makie.translate!-Union{Tuple{T}, Tuple{Type{T}, Makie.Transformable, Vararg{Any}}} where T",href:"#Makie.translate!-Union{Tuple{T}, Tuple{Type{T}, Makie.Transformable, Vararg{Any}}} where T"},[s("span",{class:"jlbinding"},"Makie.translate!")],-1)),e[1577]||(e[1577]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1579]||(e[1579]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Accum, t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Transformable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xyz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translate the given <code>Transformable</code> (a Scene or Plot), relative to its current position.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1578]||(e[1578]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/layouting/transformation.jl#L185-L189",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1578]})]),s("details",Sn,[s("summary",null,[e[1580]||(e[1580]=s("a",{id:"Makie.translate_cam!-Tuple{Any, Camera3D, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}",href:"#Makie.translate_cam!-Tuple{Any, Camera3D, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}"},[s("span",{class:"jlbinding"},"Makie.translate_cam!")],-1)),e[1581]||(e[1581]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1583]||(e[1583]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, cam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera3D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translates the camera by the given vector in camera space, i.e. by <code>v[1]</code> to the right, <code>v[2]</code> to the top and <code>v[3]</code> forward.</p><p>Note that this method reacts to <code>fix_x_key</code> etc. If any of those keys are pressed the translation will be restricted to act in these directions.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1582]||(e[1582]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L501-L509",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1582]})]),s("details",Dn,[s("summary",null,[e[1584]||(e[1584]=s("a",{id:"Makie.translate_cam!-Tuple{Scene, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}",href:"#Makie.translate_cam!-Tuple{Scene, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}}"},[s("span",{class:"jlbinding"},"Makie.translate_cam!")],-1)),e[1585]||(e[1585]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1587]||(e[1587]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, translation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VecTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translate the camera by a translation vector given in camera space.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1586]||(e[1586]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L228-L232",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1586]})]),s("details",Bn,[s("summary",null,[e[1588]||(e[1588]=s("a",{id:"Makie.tricontourf",href:"#Makie.tricontourf"},[s("span",{class:"jlbinding"},"Makie.tricontourf")],-1)),e[1589]||(e[1589]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1591]||(e[1591]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tricontourf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(triangles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Triangulation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tricontourf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs, ys, zs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a filled tricontour of the height information in <code>zs</code> at the horizontal positions <code>xs</code> and vertical positions <code>ys</code>. A <code>Triangulation</code> from DelaunayTriangulation.jl can also be provided instead of <code>xs</code> and <code>ys</code> for specifying the triangles, otherwise an unconstrained triangulation of <code>xs</code> and <code>ys</code> is computed.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>tricontourf</code> function is <code>Tricontourf</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap</code> — Sets the colormap from which the band colors are sampled.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — Color transform function</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>edges</code></strong> = <code>nothing</code> — <em>No docs available.</em></p><p><strong><code>extendhigh</code></strong> = <code>nothing</code> — This sets the color of an optional additional band from the highest value of <code>levels</code> to <code>maximum(zs)</code>. If it&#39;s <code>:auto</code>, the high end of the colormap is picked and the remaining colors are shifted accordingly. If it&#39;s any color representation, this color is used. If it&#39;s <code>nothing</code>, no band is added.</p><p><strong><code>extendlow</code></strong> = <code>nothing</code> — This sets the color of an optional additional band from <code>minimum(zs)</code> to the lowest value in <code>levels</code>. If it&#39;s <code>:auto</code>, the lower end of the colormap is picked and the remaining colors are shifted accordingly. If it&#39;s any color representation, this color is used. If it&#39;s <code>nothing</code>, no band is added.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>levels</code></strong> = <code>10</code> — Can be either an <code>Int</code> which results in n bands delimited by n+1 equally spaced levels, or it can be an <code>AbstractVector{&lt;:Real}</code> that lists n consecutive edges from low to high, which result in n-1 bands.</p><p><strong><code>mode</code></strong> = <code>:normal</code> — Sets the way in which a vector of levels is interpreted, if it&#39;s set to <code>:relative</code>, each number is interpreted as a fraction between the minimum and maximum values of <code>zs</code>. For example, <code>levels = 0.1:0.1:1.0</code> would exclude the lower 10% of data.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — <em>No docs available.</em></p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>triangulation</code></strong> = <code>DelaunayTriangulation()</code> — The mode with which the points in <code>xs</code> and <code>ys</code> are triangulated. Passing <code>DelaunayTriangulation()</code> performs a Delaunay triangulation. You can also pass a preexisting triangulation as an <code>AbstractMatrix{&lt;:Int}</code> with size (3, n), where each column specifies the vertex indices of one triangle, or as a <code>Triangulation</code> from DelaunayTriangulation.jl.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,29)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1590]||(e[1590]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L610",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1590]})]),s("details",Ln,[s("summary",null,[e[1592]||(e[1592]=s("a",{id:"Makie.tricontourf!",href:"#Makie.tricontourf!"},[s("span",{class:"jlbinding"},"Makie.tricontourf!")],-1)),e[1593]||(e[1593]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1595]||(e[1595]=s("p",null,[s("code",null,"tricontourf!"),o(" is the mutating variant of plotting function "),s("code",null,"tricontourf"),o(". Check the docstring for "),s("code",null,"tricontourf"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1594]||(e[1594]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1594]})]),s("details",Pn,[s("summary",null,[e[1596]||(e[1596]=s("a",{id:"Makie.triplot",href:"#Makie.triplot"},[s("span",{class:"jlbinding"},"Makie.triplot")],-1)),e[1597]||(e[1597]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1599]||(e[1599]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(triangles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Triangulation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a triangulation based on the provided position or <code>Triangulation</code> from DelaunayTriangulation.jl.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>triplot</code> function is <code>Triplot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>bounding_box</code></strong> = <code>automatic</code> — Sets the bounding box for truncating ghost edges which can be a <code>Rect2</code> (or <code>BBox</code>) or a tuple of the form <code>(xmin, xmax, ymin, ymax)</code>. By default, the rectangle will be given by <code>[a - eΔx, b + eΔx] × [c - eΔy, d + eΔy]</code> where <code>e</code> is the <code>ghost_edge_extension_factor</code>, <code>Δx = b - a</code> and <code>Δy = d - c</code> are the lengths of the sides of the rectangle, and <code>[a, b] × [c, d]</code> is the bounding box of the points in the triangulation.</p><p><strong><code>constrained_edge_color</code></strong> = <code>:magenta</code> — Sets the color of the constrained edges.</p><p><strong><code>constrained_edge_linestyle</code></strong> = <code>@inherit linestyle</code> — Sets the linestyle of the constrained edges.</p><p><strong><code>constrained_edge_linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the constrained edges.</p><p><strong><code>convex_hull_color</code></strong> = <code>:red</code> — Sets the color of the convex hull.</p><p><strong><code>convex_hull_linestyle</code></strong> = <code>:dash</code> — Sets the linestyle of the convex hull.</p><p><strong><code>convex_hull_linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the convex hull.</p><p><strong><code>ghost_edge_color</code></strong> = <code>:blue</code> — Sets the color of the ghost edges.</p><p><strong><code>ghost_edge_extension_factor</code></strong> = <code>0.1</code> — Sets the extension factor for the rectangle that the exterior ghost edges are extended onto.</p><p><strong><code>ghost_edge_linestyle</code></strong> = <code>@inherit linestyle</code> — Sets the linestyle of the ghost edges.</p><p><strong><code>ghost_edge_linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the ghost edges.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>:solid</code> — Sets the linestyle of triangle edges.</p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — Sets the shape of the points.</p><p><strong><code>markercolor</code></strong> = <code>@inherit markercolor</code> — Sets the color of the points.</p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — Sets the size of the points.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>recompute_centers</code></strong> = <code>false</code> — Determines whether to recompute the representative points for the ghost edge orientation. Note that this will mutate <code>tri.representative_point_list</code> directly.</p><p><strong><code>show_constrained_edges</code></strong> = <code>false</code> — Determines whether to plot the constrained edges.</p><p><strong><code>show_convex_hull</code></strong> = <code>false</code> — Determines whether to plot the convex hull.</p><p><strong><code>show_ghost_edges</code></strong> = <code>false</code> — Determines whether to plot the ghost edges.</p><p><strong><code>show_points</code></strong> = <code>false</code> — Determines whether to plot the individual points. Note that this will only plot points included in the triangulation.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — Sets the color of triangle edges.</p><p><strong><code>strokewidth</code></strong> = <code>1</code> — Sets the linewidth of triangle edges.</p><p><strong><code>triangle_color</code></strong> = <code>:transparent</code> — Sets the color of the triangles.</p>`,31)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1598]||(e[1598]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L591",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1598]})]),s("details",In,[s("summary",null,[e[1600]||(e[1600]=s("a",{id:"Makie.triplot!",href:"#Makie.triplot!"},[s("span",{class:"jlbinding"},"Makie.triplot!")],-1)),e[1601]||(e[1601]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1603]||(e[1603]=s("p",null,[s("code",null,"triplot!"),o(" is the mutating variant of plotting function "),s("code",null,"triplot"),o(". Check the docstring for "),s("code",null,"triplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1602]||(e[1602]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1602]})]),s("details",On,[s("summary",null,[e[1604]||(e[1604]=s("a",{id:"Makie.update_cam!",href:"#Makie.update_cam!"},[s("span",{class:"jlbinding"},"Makie.update_cam!")],-1)),e[1605]||(e[1605]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1607]||(e[1607]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, cam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera3D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ϕ, θ[, radius])</span></span></code></pre></div><p>Set the camera position based on two angles <code>0 ≤ ϕ ≤ 2π</code> and <code>-pi/2 ≤ θ ≤ pi/2</code> and an optional radius around the current <code>cam.lookat[]</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1606]||(e[1606]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L785-L790",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1606]})]),s("details",Vn,[s("summary",null,[e[1608]||(e[1608]=s("a",{id:"Makie.update_cam!-2",href:"#Makie.update_cam!-2"},[s("span",{class:"jlbinding"},"Makie.update_cam!")],-1)),e[1609]||(e[1609]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1611]||(e[1611]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, eyeposition, lookat, up </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vec3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Updates the camera&#39;s controls to point to the specified location.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1610]||(e[1610]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L357-L361",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1610]})]),s("details",Nn,[s("summary",null,[e[1612]||(e[1612]=s("a",{id:"Makie.update_cam!-Tuple{SceneLike, GeometryBasics.HyperRectangle}",href:"#Makie.update_cam!-Tuple{SceneLike, GeometryBasics.HyperRectangle}"},[s("span",{class:"jlbinding"},"Makie.update_cam!")],-1)),e[1613]||(e[1613]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1615]||(e[1615]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SceneLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, area)</span></span></code></pre></div><p>Updates the camera for the given <code>scene</code> to cover the given <code>area</code> in 2d.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1614]||(e[1614]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera2d.jl#L54-L58",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1614]})]),s("details",Rn,[s("summary",null,[e[1616]||(e[1616]=s("a",{id:"Makie.update_cam!-Tuple{SceneLike}",href:"#Makie.update_cam!-Tuple{SceneLike}"},[s("span",{class:"jlbinding"},"Makie.update_cam!")],-1)),e[1617]||(e[1617]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1619]||(e[1619]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_cam!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SceneLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Updates the camera for the given <code>scene</code> to cover the limits of the <code>Scene</code>. Useful when using the <code>Observable</code> pipeline.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1618]||(e[1618]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera2d.jl#L67-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1618]})]),s("details",zn,[s("summary",null,[e[1620]||(e[1620]=s("a",{id:"Makie.update_theme!",href:"#Makie.update_theme!"},[s("span",{class:"jlbinding"},"Makie.update_theme!")],-1)),e[1621]||(e[1621]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1623]||(e[1623]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(with_theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update the current theme incrementally. This means that only the keys given in <code>with_theme</code> or through keyword arguments are changed, the rest is left intact. Nested attributes are either also updated incrementally, or replaced if they are not attributes in the new theme.</p><p><strong>Example</strong></p><p>To change the default colormap to <code>:greys</code>, you can pass that attribute as a keyword argument to <code>update_theme!</code> as demonstrated below.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:greys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This can also be achieved by passing an object of types <code>Attributes</code> or <code>Theme</code> as the first and only positional argument:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:greys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colormap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:greys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,7)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1622]||(e[1622]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/theming.jl#L262-L282",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1622]})]),s("details",qn,[s("summary",null,[e[1624]||(e[1624]=s("a",{id:"Makie.used_attributes-Tuple{Type{<:Plot}, Vararg{Any}}",href:"#Makie.used_attributes-Tuple{Type{<:Plot}, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Makie.used_attributes")],-1)),e[1625]||(e[1625]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1627]||(e[1627]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">used_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><p>Function used to indicate what keyword args one wants to get passed in <code>convert_arguments</code>. Those attributes will not be forwarded to the backend, but only used during the conversion pipeline. Usage:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MyType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">used_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; attribute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># attribute will get passed to convert_arguments</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># without keyword_verload, this wouldn&#39;t happen</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MyType, attribute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#You can also use the convenience macro, to overload convert_arguments in one step:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@keywords</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MyType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; attribute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1626]||(e[1626]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interfaces.jl#L57-L78",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1626]})]),s("details",Gn,[s("summary",null,[e[1628]||(e[1628]=s("a",{id:"Makie.viewport-Tuple{Scene}",href:"#Makie.viewport-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.viewport")],-1)),e[1629]||(e[1629]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1631]||(e[1631]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">viewport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Gets the viewport of the scene in device independent units as an <code>Observable{Rect2{Int}}</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1630]||(e[1630]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/scenes.jl#L632-L636",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1630]})]),s("details",Un,[s("summary",null,[e[1632]||(e[1632]=s("a",{id:"Makie.violin",href:"#Makie.violin"},[s("span",{class:"jlbinding"},"Makie.violin")],-1)),e[1633]||(e[1633]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1635]||(e[1635]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">violin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span></code></pre></div><p>Draw a violin plot.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: positions of the categories</p></li><li><p><code>y</code>: variables whose density is computed</p></li></ul><p><strong>Plot type</strong></p><p>The plot type alias for the <code>violin</code> function is <code>Violin</code>.</p><p><strong>Attributes</strong></p><p><strong><code>bandwidth</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>boundary</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>datalimits</code></strong> = <code>(-Inf, Inf)</code> — Specify values to trim the <code>violin</code>. Can be a <code>Tuple</code> or a <code>Function</code> (e.g. <code>datalimits=extrema</code>).</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>dodge_gap</code></strong> = <code>0.03</code> — <em>No docs available.</em></p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>gap</code></strong> = <code>0.2</code> — Shrinking factor, <code>width -&gt; width * (1 - gap)</code>.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>max_density</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>mediancolor</code></strong> = <code>@inherit linecolor</code> — <em>No docs available.</em></p><p><strong><code>medianlinewidth</code></strong> = <code>@inherit linewidth</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>npoints</code></strong> = <code>200</code> — <em>No docs available.</em></p><p><strong><code>orientation</code></strong> = <code>:vertical</code> — Orientation of the violins (<code>:vertical</code> or <code>:horizontal</code>)</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>scale</code></strong> = <code>:area</code> — Scale density by area (<code>:area</code>), count (<code>:count</code>), or width (<code>:width</code>).</p><p><strong><code>show_median</code></strong> = <code>false</code> — Show median as midline.</p><p><strong><code>side</code></strong> = <code>:both</code> — Specify <code>:left</code> or <code>:right</code> to only plot the violin on one side.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — <em>No docs available.</em></p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — <em>No docs available.</em></p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>weights</code></strong> = <code>automatic</code> — vector of statistical weights (length of data). By default, each observation has weight <code>1</code>.</p><p><strong><code>width</code></strong> = <code>automatic</code> — Width of the box before shrinking.</p>',42)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1634]||(e[1634]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L615",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1634]})]),s("details",Hn,[s("summary",null,[e[1636]||(e[1636]=s("a",{id:"Makie.violin!",href:"#Makie.violin!"},[s("span",{class:"jlbinding"},"Makie.violin!")],-1)),e[1637]||(e[1637]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1639]||(e[1639]=s("p",null,[s("code",null,"violin!"),o(" is the mutating variant of plotting function "),s("code",null,"violin"),o(". Check the docstring for "),s("code",null,"violin"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1638]||(e[1638]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1638]})]),s("details",Wn,[s("summary",null,[e[1640]||(e[1640]=s("a",{id:"Makie.vlines",href:"#Makie.vlines"},[s("span",{class:"jlbinding"},"Makie.vlines")],-1)),e[1641]||(e[1641]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1643]||(e[1643]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vlines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs; ymin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ymax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create vertical lines across a <code>Scene</code> with 2D projection. The lines will be placed at <code>xs</code> in data coordinates and <code>ymin</code> to <code>ymax</code> in scene coordinates (0 to 1). All three of these can have single or multiple values because they are broadcast to calculate the final line segments.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>vlines</code> function is <code>VLines</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of linecap used, i.e. :butt (flat with no extrusion), :square (flat with 1 linewidth extrusion) or :round.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in pixel units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>ymax</code></strong> = <code>1</code> — The start of the lines in relative axis units (0 to 1) along the y dimension.</p><p><strong><code>ymin</code></strong> = <code>0</code> — The start of the lines in relative axis units (0 to 1) along the y dimension.</p>',34)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1642]||(e[1642]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L605",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1642]})]),s("details",Yn,[s("summary",null,[e[1644]||(e[1644]=s("a",{id:"Makie.vlines!",href:"#Makie.vlines!"},[s("span",{class:"jlbinding"},"Makie.vlines!")],-1)),e[1645]||(e[1645]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1647]||(e[1647]=s("p",null,[s("code",null,"vlines!"),o(" is the mutating variant of plotting function "),s("code",null,"vlines"),o(". Check the docstring for "),s("code",null,"vlines"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1646]||(e[1646]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1646]})]),s("details",Kn,[s("summary",null,[e[1648]||(e[1648]=s("a",{id:"Makie.volume",href:"#Makie.volume"},[s("span",{class:"jlbinding"},"Makie.volume")],-1)),e[1649]||(e[1649]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1651]||(e[1651]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">volume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(volume_data)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">volume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z, volume_data)</span></span></code></pre></div><p>Plots a volume with optional physical dimensions <code>x, y, z</code>.</p><p>All volume plots are derived from casting rays for each drawn pixel. These rays intersect with the volume data to derive some color, usually based on the given colormap. How exactly the color is derived depends on the algorithm used.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>volume</code> function is <code>Volume</code>.</p><p><strong>Attributes</strong></p><p><strong><code>absorption</code></strong> = <code>1.0</code> — Absorption multiplier for algorithm = :absorption, :absorptionrgba and :indexedabsorption. This changes how much light each voxel absorbs.</p><p><strong><code>algorithm</code></strong> = <code>:mip</code> — Sets the volume algorithm that is used. Available algorithms are:</p><ul><li><p><code>:iso</code>: Shows an isovalue surface within the given float data. For this only samples within <code>isovalue - isorange .. isovalue + isorange</code> are included in the final color of a pixel.</p></li><li><p><code>:absorption</code>: Accumulates color based on the float values sampled from volume data. At each ray step (starting from the front) a value is sampled from the volume data and then used to sample the colormap. The resulting color is weighted by the ray step size and blended the previously accumulated color. The weight of each step can be adjusted with the multiplicative <code>absorption</code> attribute.</p></li><li><p><code>:mip</code>: Shows the maximum intensity projection of the given float data. This derives the color of a pixel from the largest value sampled from the respective ray.</p></li><li><p><code>:absorptionrgba</code>: This algorithm matches :absorption, but samples colors directly from RGBA volume data. For each ray step a color is sampled from the data, weighted by the ray step size and blended with the previously accumulated color. Also considers <code>absorption</code>.</p></li><li><p><code>:additive</code>: Accumulates colors using <code>accumulated_color = 1 - (1 - accumulated_color) * (1 - sampled_color)</code> where <code>sampled_color</code> is a sample of volume data at the current ray step.</p></li><li><p><code>:indexedabsorption</code>: This algorithm acts the same as :absorption, but interprets the volume data as indices. They are used as direct indices to the colormap. Also considers <code>absorption</code>.</p></li></ul><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>enable_depth</code></strong> = <code>true</code> — Enables more accurate but slower depth handling. When turned off depth is based on the back vertices of the bounding box of the volume. When turned on it is based on the ray start point in front of the camera. For <code>algorithm = :iso</code> (and contours) it is based on the front most surface rendered.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>true</code> — Sets whether the volume data should be sampled with interpolation.</p><p><strong><code>isorange</code></strong> = <code>0.05</code> — Sets the maximum accepted distance from the isovalue for the :iso algorithm. <code>accepted = isovalue - isorange &lt; value &lt; isovalue + isorange</code></p><p><strong><code>isovalue</code></strong> = <code>0.5</code> — Sets the target value for the :iso algorithm. <code>accepted = isovalue - isorange &lt; value &lt; isovalue + isorange</code></p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1650]||(e[1650]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L624",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1650]})]),s("details",Qn,[s("summary",null,[e[1652]||(e[1652]=s("a",{id:"Makie.volume!",href:"#Makie.volume!"},[s("span",{class:"jlbinding"},"Makie.volume!")],-1)),e[1653]||(e[1653]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1655]||(e[1655]=s("p",null,[s("code",null,"volume!"),o(" is the mutating variant of plotting function "),s("code",null,"volume"),o(". Check the docstring for "),s("code",null,"volume"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1654]||(e[1654]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1654]})]),s("details",$n,[s("summary",null,[e[1656]||(e[1656]=s("a",{id:"Makie.volumeslices",href:"#Makie.volumeslices"},[s("span",{class:"jlbinding"},"Makie.volumeslices")],-1)),e[1657]||(e[1657]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1659]||(e[1659]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">volumeslices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z, v)</span></span></code></pre></div><p>Draws heatmap slices of the volume v</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>volumeslices</code> function is <code>VolumeSlices</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>bbox_color</code></strong> = <code>RGBAf(0.5, 0.5, 0.5, 0.5)</code> — <em>No docs available.</em></p><p><strong><code>bbox_visible</code></strong> = <code>true</code> — <em>No docs available.</em></p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>false</code> — Sets whether colors should be interpolated</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>',29)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1658]||(e[1658]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L592",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1658]})]),s("details",Xn,[s("summary",null,[e[1660]||(e[1660]=s("a",{id:"Makie.volumeslices!",href:"#Makie.volumeslices!"},[s("span",{class:"jlbinding"},"Makie.volumeslices!")],-1)),e[1661]||(e[1661]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1663]||(e[1663]=s("p",null,[s("code",null,"volumeslices!"),o(" is the mutating variant of plotting function "),s("code",null,"volumeslices"),o(". Check the docstring for "),s("code",null,"volumeslices"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1662]||(e[1662]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1662]})]),s("details",Jn,[s("summary",null,[e[1664]||(e[1664]=s("a",{id:"Makie.voronoiplot",href:"#Makie.voronoiplot"},[s("span",{class:"jlbinding"},"Makie.voronoiplot")],-1)),e[1665]||(e[1665]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1667]||(e[1667]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voronoiplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, values; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voronoiplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voronoiplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voronoiplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voronoiplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vorn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VoronoiTessellation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generates and plots a Voronoi tessalation from <code>heatmap</code>- or point-like data. The tessellation can also be passed directly as a <code>VoronoiTessellation</code> from DelaunayTriangulation.jl.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>voronoiplot</code> function is <code>Voronoiplot</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip</code></strong> = <code>automatic</code> — Sets the clipping area for the generated polygons which can be a <code>Rect2</code> (or <code>BBox</code>), <code>Tuple</code> with entries <code>(xmin, xmax, ymin, ymax)</code> or as a <code>Circle</code>. Anything outside the specified area will be removed. If the <code>clip</code> is not set it is automatically determined using <code>unbounded_edge_extension_factor</code> as a <code>Rect</code>.</p><p><strong><code>color</code></strong> = <code>automatic</code> — Sets the color of the polygons. If <code>automatic</code>, the polygons will be individually colored according to the colormap.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>marker</code></strong> = <code>@inherit marker</code> — Sets the shape of the points.</p><p><strong><code>markercolor</code></strong> = <code>@inherit markercolor</code> — Sets the color of the points.</p><p><strong><code>markersize</code></strong> = <code>@inherit markersize</code> — Sets the size of the points.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>show_generators</code></strong> = <code>true</code> — Determines whether to plot the individual generators.</p><p><strong><code>smooth</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — Sets the strokecolor of the polygons.</p><p><strong><code>strokewidth</code></strong> = <code>1.0</code> — Sets the width of the polygon stroke.</p><p><strong><code>unbounded_edge_extension_factor</code></strong> = <code>0.1</code> — Sets the extension factor for the unbounded edges, used in <code>DelaunayTriangulation.polygon_bounds</code>.</p>`,22)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1666]||(e[1666]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L579",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1666]})]),s("details",Zn,[s("summary",null,[e[1668]||(e[1668]=s("a",{id:"Makie.voronoiplot!",href:"#Makie.voronoiplot!"},[s("span",{class:"jlbinding"},"Makie.voronoiplot!")],-1)),e[1669]||(e[1669]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1671]||(e[1671]=s("p",null,[s("code",null,"voronoiplot!"),o(" is the mutating variant of plotting function "),s("code",null,"voronoiplot"),o(". Check the docstring for "),s("code",null,"voronoiplot"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1670]||(e[1670]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1670]})]),s("details",el,[s("summary",null,[e[1672]||(e[1672]=s("a",{id:"Makie.voxels",href:"#Makie.voxels"},[s("span",{class:"jlbinding"},"Makie.voxels")],-1)),e[1673]||(e[1673]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1675]||(e[1675]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voxels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z, chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Array{&lt;:Real, 3}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">voxels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Array{&lt;:Real, 3}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a chunk of voxels centered at 0. Optionally the placement and scaling of the chunk can be given as range-like x, y and z. (Only the extrema are considered here. Voxels are always uniformly sized.)</p><p>Internally voxels are represented as 8 bit unsigned integer, with <code>0x00</code> always being an invisible &quot;air&quot; voxel. Passing a chunk with matching type will directly set those values. Note that color handling is specialized for the internal representation and may behave a bit differently than usual.</p><p>Note that <code>voxels</code> is currently considered experimental and may still see breaking changes in patch releases.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>voxels</code> function is <code>Voxels</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>backlight</code></strong> = <code>0.0</code> — Sets a weight for secondary light calculation with inverted normals.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>nothing</code> — Sets colors per voxel id, skipping <code>0x00</code>. This means that a voxel with id 1 will grab <code>plot.colors[1]</code> and so on up to id 255. This can also be set to a Matrix of colors, i.e. an image for texture mapping.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>depthsorting</code></strong> = <code>false</code> — Controls the render order of voxels. If set to <code>false</code> voxels close to the viewer are rendered first which should reduce overdraw and yield better performance. If set to <code>true</code> voxels are rendered back to front enabling correct order for transparent voxels.</p><p><strong><code>diffuse</code></strong> = <code>1.0</code> — Sets how strongly the red, green and blue channel react to diffuse (scattered) light.</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>gap</code></strong> = <code>0.0</code> — Sets the gap between adjacent voxels in units of the voxel size. This needs to be larger than 0.01 to take effect.</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>interpolate</code></strong> = <code>false</code> — Controls whether the texture map is sampled with interpolation (i.e. smoothly) or not (i.e. pixelated).</p><p><strong><code>is_air</code></strong> = <code>x-&gt;begin #= /home/runner/work/Makie.jl/Makie.jl/Makie/src/basic_plots.jl:648 =# isnothing(x) || (ismissing(x) || isnan(x)) end</code> — A function that controls which values in the input data are mapped to invisible (air) voxels.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>material</code></strong> = <code>nothing</code> — RPRMakie only attribute to set complex RadeonProRender materials. <em>Warning</em>, how to set an RPR material may change and other backends will ignore this attribute</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>true</code> — Controls if the plot object is shaded by the parent scenes lights or not. The lighting algorithm used is controlled by the scenes <code>shading</code> attribute.</p><p><strong><code>shininess</code></strong> = <code>32.0</code> — Sets how sharp the reflection is.</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>specular</code></strong> = <code>0.2</code> — Sets how strongly the object reflects light in the red, green and blue channels.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>uv_transform</code></strong> = <code>nothing</code> — To use texture mapping <code>uv_transform</code> needs to be defined and <code>color</code> needs to be an image. The <code>uv_transform</code> can be given as a <code>Vector</code> where each index maps to a <code>UInt8</code> voxel id (skipping 0), or as a <code>Matrix</code> where the second index maps to a side following the order <code>(-x, -y, -z, +x, +y, +z)</code>. Each element acts as a <code>Mat{2, 3, Float32}</code> which is applied to <code>Vec3f(uv, 1)</code>, where uv&#39;s are generated to run from 0..1 for each voxel. The result is then used to sample the texture. UV transforms have a bunch of shorthands you can use, for example <code>(Point2f(x, y), Vec2f(xscale, yscale))</code>. They are listed in <code>?Makie.uv_transform</code>.</p><p><strong><code>uvmap</code></strong> = <code>nothing</code> — Deprecated - use uv_transform</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,41)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1674]||(e[1674]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L635",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1674]})]),s("details",sl,[s("summary",null,[e[1676]||(e[1676]=s("a",{id:"Makie.voxels!",href:"#Makie.voxels!"},[s("span",{class:"jlbinding"},"Makie.voxels!")],-1)),e[1677]||(e[1677]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1679]||(e[1679]=s("p",null,[s("code",null,"voxels!"),o(" is the mutating variant of plotting function "),s("code",null,"voxels"),o(". Check the docstring for "),s("code",null,"voxels"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1678]||(e[1678]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1678]})]),s("details",tl,[s("summary",null,[e[1680]||(e[1680]=s("a",{id:"Makie.vspan",href:"#Makie.vspan"},[s("span",{class:"jlbinding"},"Makie.vspan")],-1)),e[1681]||(e[1681]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1683]||(e[1683]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs_low, xs_high; ymin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ymax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vspan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xs_lowhigh; ymin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ymax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, attrs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create vertical bands spanning across a <code>Scene</code> with 2D projection. The bands will be placed from <code>xs_low</code> to <code>xs_high</code> in data coordinates and <code>ymin</code> to <code>ymax</code> in scene coordinates (0 to 1). All four of these can have single or multiple values because they are broadcast to calculate the final spans. Both bounds can be passed together as an interval <code>xs_lowhigh</code>.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>vspan</code> function is <code>VSpan</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — Sets the color of the poly. Can be a <code>Vector{&lt;:Colorant}</code> for per vertex colors or a single <code>Colorant</code>. A <code>Matrix{&lt;:Colorant}</code> can be used to color the mesh with a texture, which requires the mesh to contain texture coordinates. Vector or Matrices of numbers can be used as well, which will use the colormap arguments to map the numbers to colors. One can also use a <code>&lt;: AbstractPattern</code>, to cover the poly with a regular pattern, e.g. for hatching.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>depth_shift</code></strong> = <code>0.0</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>true</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>joinstyle</code></strong> = <code>@inherit joinstyle</code> — <em>No docs available.</em></p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — <em>No docs available.</em></p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>miter_limit</code></strong> = <code>@inherit miter_limit</code> — <em>No docs available.</em></p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>shading</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>stroke_depth_shift</code></strong> = <code>-1.0e-5</code> — Depth shift of stroke plot. This is useful to avoid z-fighting between the stroke and the fill.</p><p><strong><code>strokecolor</code></strong> = <code>@inherit patchstrokecolor</code> — Sets the color of the outline around a marker.</p><p><strong><code>strokecolormap</code></strong> = <code>@inherit colormap</code> — Sets the colormap that is sampled for numeric <code>color</code>s.</p><p><strong><code>strokewidth</code></strong> = <code>@inherit patchstrokewidth</code> — Sets the width of the outline.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p><p><strong><code>ymax</code></strong> = <code>1</code> — The end of the bands in relative axis units (0 to 1) along the y dimension.</p><p><strong><code>ymin</code></strong> = <code>0</code> — The start of the bands in relative axis units (0 to 1) along the y dimension.</p>`,40)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1682]||(e[1682]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L623",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1682]})]),s("details",il,[s("summary",null,[e[1684]||(e[1684]=s("a",{id:"Makie.vspan!",href:"#Makie.vspan!"},[s("span",{class:"jlbinding"},"Makie.vspan!")],-1)),e[1685]||(e[1685]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1687]||(e[1687]=s("p",null,[s("code",null,"vspan!"),o(" is the mutating variant of plotting function "),s("code",null,"vspan"),o(". Check the docstring for "),s("code",null,"vspan"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1686]||(e[1686]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1686]})]),s("details",ol,[s("summary",null,[e[1688]||(e[1688]=s("a",{id:"Makie.waterfall",href:"#Makie.waterfall"},[s("span",{class:"jlbinding"},"Makie.waterfall")],-1)),e[1689]||(e[1689]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1691]||(e[1691]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">waterfall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots a <a href="https://en.wikipedia.org/wiki/Waterfall_chart" target="_blank" rel="noreferrer">waterfall chart</a> to visualize individual positive and negative components that add up to a net result as a barplot with stacked bars next to each other.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>waterfall</code> function is <code>Waterfall</code>.</p><p><strong>Attributes</strong></p><p><strong><code>color</code></strong> = <code>@inherit patchcolor</code> — <em>No docs available.</em></p><p><strong><code>cycle</code></strong> = <code>[:color =&gt; :patchcolor]</code> — <em>No docs available.</em></p><p><strong><code>direction_color</code></strong> = <code>@inherit backgroundcolor</code> — <em>No docs available.</em></p><p><strong><code>dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>dodge_gap</code></strong> = <code>0.03</code> — <em>No docs available.</em></p><p><strong><code>final_color</code></strong> = <code>plot_color(:grey90, 0.5)</code> — <em>No docs available.</em></p><p><strong><code>final_dodge_gap</code></strong> = <code>0</code> — <em>No docs available.</em></p><p><strong><code>final_gap</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>gap</code></strong> = <code>0.2</code> — <em>No docs available.</em></p><p><strong><code>marker_neg</code></strong> = <code>:dtriangle</code> — <em>No docs available.</em></p><p><strong><code>marker_pos</code></strong> = <code>:utriangle</code> — <em>No docs available.</em></p><p><strong><code>n_dodge</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>show_direction</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>show_final</code></strong> = <code>false</code> — <em>No docs available.</em></p><p><strong><code>stack</code></strong> = <code>automatic</code> — <em>No docs available.</em></p><p><strong><code>width</code></strong> = <code>automatic</code> — <em>No docs available.</em></p>',21)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1690]||(e[1690]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L569",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1690]})]),s("details",al,[s("summary",null,[e[1692]||(e[1692]=s("a",{id:"Makie.waterfall!",href:"#Makie.waterfall!"},[s("span",{class:"jlbinding"},"Makie.waterfall!")],-1)),e[1693]||(e[1693]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1695]||(e[1695]=s("p",null,[s("code",null,"waterfall!"),o(" is the mutating variant of plotting function "),s("code",null,"waterfall"),o(". Check the docstring for "),s("code",null,"waterfall"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1694]||(e[1694]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1694]})]),s("details",nl,[s("summary",null,[e[1696]||(e[1696]=s("a",{id:"Makie.wireframe",href:"#Makie.wireframe"},[s("span",{class:"jlbinding"},"Makie.wireframe")],-1)),e[1697]||(e[1697]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1699]||(e[1699]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wireframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wireframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positions)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wireframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh)</span></span></code></pre></div><p>Draws a wireframe, either interpreted as a surface or as a mesh.</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>wireframe</code> function is <code>Wireframe</code>.</p><p><strong>Attributes</strong></p><p><strong><code>alpha</code></strong> = <code>1.0</code> — The alpha value of the colormap or color attribute. Multiple alphas like in <code>plot(alpha=0.2, color=(:red, 0.5)</code>, will get multiplied.</p><p><strong><code>clip_planes</code></strong> = <code>@inherit clip_planes automatic</code> — Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><p><strong><code>color</code></strong> = <code>@inherit linecolor</code> — The color of the line.</p><p><strong><code>colormap</code></strong> = <code>@inherit colormap :viridis</code> — Sets the colormap that is sampled for numeric <code>color</code>s. <code>PlotUtils.cgrad(...)</code>, <code>Makie.Reverse(any_colormap)</code> can be used as well, or any symbol from ColorBrewer or PlotUtils. To see all available color gradients, you can call <code>Makie.available_gradients()</code>.</p><p><strong><code>colorrange</code></strong> = <code>automatic</code> — The values representing the start and end points of <code>colormap</code>.</p><p><strong><code>colorscale</code></strong> = <code>identity</code> — The color transform function. Can be any function, but only works well together with <code>Colorbar</code> for <code>identity</code>, <code>log</code>, <code>log2</code>, <code>log10</code>, <code>sqrt</code>, <code>logit</code>, <code>Makie.pseudolog10</code>, <code>Makie.Symlog10</code>, <code>Makie.AsinhScale</code>, <code>Makie.SinhScale</code>, <code>Makie.LogScale</code>, <code>Makie.LuptonAsinhScale</code>, and <code>Makie.PowerScale</code>.</p><p><strong><code>cycle</code></strong> = <code>[:color]</code> — Sets which attributes to cycle when creating multiple plots.</p><p><strong><code>depth_shift</code></strong> = <code>-1.0e-5</code> — Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><p><strong><code>fxaa</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with fxaa (anti-aliasing, GLMakie only).</p><p><strong><code>highclip</code></strong> = <code>automatic</code> — The color for any value above the colorrange.</p><p><strong><code>inspectable</code></strong> = <code>@inherit inspectable</code> — Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><p><strong><code>inspector_clear</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><p><strong><code>inspector_hover</code></strong> = <code>automatic</code> — Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><p><strong><code>inspector_label</code></strong> = <code>automatic</code> — Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><p><strong><code>linecap</code></strong> = <code>@inherit linecap</code> — Sets the type of linecap used, i.e. :butt (flat with no extrusion), :square (flat with 1 linewidth extrusion) or :round.</p><p><strong><code>linestyle</code></strong> = <code>nothing</code> — Sets the dash pattern of the line. Options are <code>:solid</code> (equivalent to <code>nothing</code>), <code>:dot</code>, <code>:dash</code>, <code>:dashdot</code> and <code>:dashdotdot</code>. These can also be given in a tuple with a gap style modifier, either <code>:normal</code>, <code>:dense</code> or <code>:loose</code>. For example, <code>(:dot, :loose)</code> or <code>(:dashdot, :dense)</code>.</p><p>For custom patterns have a look at <a href="/stable/api#Makie.Linestyle"><code>Makie.Linestyle</code></a>.</p><p><strong><code>linewidth</code></strong> = <code>@inherit linewidth</code> — Sets the width of the line in pixel units</p><p><strong><code>lowclip</code></strong> = <code>automatic</code> — The color for any value below the colorrange.</p><p><strong><code>model</code></strong> = <code>automatic</code> — Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><p><strong><code>nan_color</code></strong> = <code>:transparent</code> — The color for NaN values.</p><p><strong><code>overdraw</code></strong> = <code>false</code> — Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><p><strong><code>space</code></strong> = <code>:data</code> — Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><p><strong><code>ssao</code></strong> = <code>false</code> — Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><p><strong><code>transformation</code></strong> = <code>:automatic</code> — <em>No docs available.</em></p><p><strong><code>transparency</code></strong> = <code>false</code> — Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><p><strong><code>visible</code></strong> = <code>true</code> — Controls whether the plot will be rendered or not.</p>`,32)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1698]||(e[1698]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L527-L603",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1698]})]),s("details",ll,[s("summary",null,[e[1700]||(e[1700]=s("a",{id:"Makie.wireframe!",href:"#Makie.wireframe!"},[s("span",{class:"jlbinding"},"Makie.wireframe!")],-1)),e[1701]||(e[1701]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1703]||(e[1703]=s("p",null,[s("code",null,"wireframe!"),o(" is the mutating variant of plotting function "),s("code",null,"wireframe"),o(". Check the docstring for "),s("code",null,"wireframe"),o(" for further information.")],-1)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1702]||(e[1702]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L529",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1702]})]),s("details",dl,[s("summary",null,[e[1704]||(e[1704]=s("a",{id:"Makie.with_theme",href:"#Makie.with_theme"},[s("span",{class:"jlbinding"},"Makie.with_theme")],-1)),e[1705]||(e[1705]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1707]||(e[1707]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with_theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, theme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calls <code>f</code> with <code>theme</code> temporarily activated. Attributes in <code>theme</code> can be overridden or extended with <code>kwargs</code>. The previous theme is always restored afterwards, no matter if <code>f</code> succeeds or fails.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_theme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with_theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_theme, color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, linestyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :dashed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1706]||(e[1706]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/theming.jl#L217-L232",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1706]})]),s("details",rl,[s("summary",null,[e[1708]||(e[1708]=s("a",{id:"Makie.xlabel!-Tuple{Any, AbstractString}",href:"#Makie.xlabel!-Tuple{Any, AbstractString}"},[s("span",{class:"jlbinding"},"Makie.xlabel!")],-1)),e[1709]||(e[1709]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1711]||(e[1711]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlabel!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, xlabel)</span></span></code></pre></div><p>Set the x-axis label for the given Scene.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1710]||(e[1710]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L5-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1710]})]),s("details",cl,[s("summary",null,[e[1712]||(e[1712]=s("a",{id:"Makie.xlims!",href:"#Makie.xlims!"},[s("span",{class:"jlbinding"},"Makie.xlims!")],-1)),e[1713]||(e[1713]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1715]||(e[1715]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current_axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Reset the x-axis limits to be determined automatically from the plots in the axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1714]||(e[1714]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1346-L1351",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1714]})]),s("details",pl,[s("summary",null,[e[1716]||(e[1716]=s("a",{id:"Makie.xlims!-Tuple{Any, Any, Any}",href:"#Makie.xlims!-Tuple{Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.xlims!")],-1)),e[1717]||(e[1717]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1719]||(e[1719]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, (low, high))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">high)</span></span></code></pre></div><p>Set the x-axis limits of axis <code>ax</code> to <code>low</code> and <code>high</code> or a tuple <code>xlims = (low,high)</code>. If the limits are ordered high-low, the axis orientation will be reversed. If a limit is <code>nothing</code> it will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1718]||(e[1718]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1281-L1291",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1718]})]),s("details",hl,[s("summary",null,[e[1720]||(e[1720]=s("a",{id:"Makie.xlims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}",href:"#Makie.xlims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}"},[s("span",{class:"jlbinding"},"Makie.xlims!")],-1)),e[1721]||(e[1721]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1723]||(e[1723]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the x-axis limits of the current axis to <code>low</code> and <code>high</code>. If the limits are ordered high-low, this reverses the axis orientation. A limit set to <code>nothing</code> will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1722]||(e[1722]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1318-L1325",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1722]})]),s("details",kl,[s("summary",null,[e[1724]||(e[1724]=s("a",{id:"Makie.xticklabels-Tuple{Any}",href:"#Makie.xticklabels-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.xticklabels")],-1)),e[1725]||(e[1725]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1727]||(e[1727]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xticklabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns all the x-axis tick labels. See also <code>ticklabels</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1726]||(e[1726]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L61-L65",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1726]})]),s("details",gl,[s("summary",null,[e[1728]||(e[1728]=s("a",{id:"Makie.xtickrange-Tuple{Any}",href:"#Makie.xtickrange-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.xtickrange")],-1)),e[1729]||(e[1729]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1731]||(e[1731]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xtickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the tick range along the x-axis. See also <code>tickranges</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1730]||(e[1730]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L96-L100",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1730]})]),s("details",ul,[s("summary",null,[e[1732]||(e[1732]=s("a",{id:"Makie.xtickrotation!-Tuple{Scene, Any}",href:"#Makie.xtickrotation!-Tuple{Scene, Any}"},[s("span",{class:"jlbinding"},"Makie.xtickrotation!")],-1)),e[1733]||(e[1733]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1735]||(e[1735]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xtickrotation!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,] xangle)</span></span></code></pre></div><p>Set the rotation of tick labels along the x-axis. See also <code>tickrotations!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1734]||(e[1734]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L224-L228",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1734]})]),s("details",bl,[s("summary",null,[e[1736]||(e[1736]=s("a",{id:"Makie.xtickrotation-Tuple{Any}",href:"#Makie.xtickrotation-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.xtickrotation")],-1)),e[1737]||(e[1737]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1739]||(e[1739]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xtickrotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the rotation of tick labels along the x-axis. See also <code>tickrotations</code></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1738]||(e[1738]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L188-L192",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1738]})]),s("details",yl,[s("summary",null,[e[1740]||(e[1740]=s("a",{id:"Makie.xticks!-Tuple{Scene}",href:"#Makie.xticks!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.xticks!")],-1)),e[1741]||(e[1741]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1743]||(e[1743]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xticks!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,]; xtickrange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xtickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene), xticklabels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xticklabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene))</span></span></code></pre></div><p>Set the tick labels and range along the x-axis. See also <code>ticks!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1742]||(e[1742]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L137-L141",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1742]})]),s("details",fl,[s("summary",null,[e[1744]||(e[1744]=s("a",{id:"Makie.ylabel!-Tuple{Any, AbstractString}",href:"#Makie.ylabel!-Tuple{Any, AbstractString}"},[s("span",{class:"jlbinding"},"Makie.ylabel!")],-1)),e[1745]||(e[1745]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1747]||(e[1747]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylabel!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, ylabel)</span></span></code></pre></div><p>Set the y-axis label for the given Scene.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1746]||(e[1746]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L17-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1746]})]),s("details",ml,[s("summary",null,[e[1748]||(e[1748]=s("a",{id:"Makie.ylims!",href:"#Makie.ylims!"},[s("span",{class:"jlbinding"},"Makie.ylims!")],-1)),e[1749]||(e[1749]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1751]||(e[1751]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current_axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Reset the y-axis limits to be determined automatically from the plots in the axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1750]||(e[1750]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1353-L1358",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1750]})]),s("details",El,[s("summary",null,[e[1752]||(e[1752]=s("a",{id:"Makie.ylims!-Tuple{Any, Any, Any}",href:"#Makie.ylims!-Tuple{Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.ylims!")],-1)),e[1753]||(e[1753]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1755]||(e[1755]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, (low, high))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">high)</span></span></code></pre></div><p>Set the y-axis limits of axis <code>ax</code> to <code>low</code> and <code>high</code> or a tuple <code>ylims = (low,high)</code>. If the limits are ordered high-low, the axis orientation will be reversed. If a limit is <code>nothing</code> it will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1754]||(e[1754]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1293-L1303",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1754]})]),s("details",vl,[s("summary",null,[e[1756]||(e[1756]=s("a",{id:"Makie.ylims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}",href:"#Makie.ylims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}"},[s("span",{class:"jlbinding"},"Makie.ylims!")],-1)),e[1757]||(e[1757]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1759]||(e[1759]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ylims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the y-axis limits of the current axis to <code>low</code> and <code>high</code>. If the limits are ordered high-low, this reverses the axis orientation. A limit set to <code>nothing</code> will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1758]||(e[1758]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1327-L1334",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1758]})]),s("details",_l,[s("summary",null,[e[1760]||(e[1760]=s("a",{id:"Makie.yticklabels-Tuple{Any}",href:"#Makie.yticklabels-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.yticklabels")],-1)),e[1761]||(e[1761]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1763]||(e[1763]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yticklabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns all the y-axis tick labels. See also <code>ticklabels</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1762]||(e[1762]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L68-L72",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1762]})]),s("details",Tl,[s("summary",null,[e[1764]||(e[1764]=s("a",{id:"Makie.ytickrange-Tuple{Any}",href:"#Makie.ytickrange-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.ytickrange")],-1)),e[1765]||(e[1765]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1767]||(e[1767]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ytickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the tick range along the y-axis. See also <code>tickranges</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1766]||(e[1766]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L103-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1766]})]),s("details",jl,[s("summary",null,[e[1768]||(e[1768]=s("a",{id:"Makie.ytickrotation!-Tuple{Scene, Any}",href:"#Makie.ytickrotation!-Tuple{Scene, Any}"},[s("span",{class:"jlbinding"},"Makie.ytickrotation!")],-1)),e[1769]||(e[1769]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1771]||(e[1771]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ytickrotation!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,] yangle)</span></span></code></pre></div><p>Set the rotation of tick labels along the y-axis. See also <code>tickrotations!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1770]||(e[1770]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L234-L238",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1770]})]),s("details",Ml,[s("summary",null,[e[1772]||(e[1772]=s("a",{id:"Makie.ytickrotation-Tuple{Any}",href:"#Makie.ytickrotation-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.ytickrotation")],-1)),e[1773]||(e[1773]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1775]||(e[1775]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ytickrotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the rotation of tick labels along the y-axis. See also <code>tickrotations</code></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1774]||(e[1774]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L195-L199",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1774]})]),s("details",Cl,[s("summary",null,[e[1776]||(e[1776]=s("a",{id:"Makie.yticks!-Tuple{Scene}",href:"#Makie.yticks!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.yticks!")],-1)),e[1777]||(e[1777]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1779]||(e[1779]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yticks!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,]; ytickrange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ytickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene), yticklabels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yticklabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene))</span></span></code></pre></div><p>Set the tick labels and range along all the y-axis. See also <code>ticks!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1778]||(e[1778]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L147-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1778]})]),s("details",Fl,[s("summary",null,[e[1780]||(e[1780]=s("a",{id:"Makie.zlabel!-Tuple{Any, AbstractString}",href:"#Makie.zlabel!-Tuple{Any, AbstractString}"},[s("span",{class:"jlbinding"},"Makie.zlabel!")],-1)),e[1781]||(e[1781]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1783]||(e[1783]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlabel!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, zlabel)</span></span></code></pre></div><p>Set the z-axis label for the given Scene.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>The Scene must have an Axis3D. If not, then this function will error.</p></div>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1782]||(e[1782]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L33-L40",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1782]})]),s("details",wl,[s("summary",null,[e[1784]||(e[1784]=s("a",{id:"Makie.zlims!",href:"#Makie.zlims!"},[s("span",{class:"jlbinding"},"Makie.zlims!")],-1)),e[1785]||(e[1785]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1787]||(e[1787]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> current_axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Reset the z-axis limits to be determined automatically from the plots in the axis.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1786]||(e[1786]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1360-L1365",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1786]})]),s("details",xl,[s("summary",null,[e[1788]||(e[1788]=s("a",{id:"Makie.zlims!-Tuple{Any, Any, Any}",href:"#Makie.zlims!-Tuple{Any, Any, Any}"},[s("span",{class:"jlbinding"},"Makie.zlims!")],-1)),e[1789]||(e[1789]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1791]||(e[1791]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, (low, high))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, low</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">high)</span></span></code></pre></div><p>Set the z-axis limits of axis <code>ax</code> to <code>low</code> and <code>high</code> or a tuple <code>zlims = (low,high)</code>. If the limits are ordered high-low, the axis orientation will be reversed. If a limit is <code>nothing</code> it will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1790]||(e[1790]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1305-L1315",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1790]})]),s("details",Al,[s("summary",null,[e[1792]||(e[1792]=s("a",{id:"Makie.zlims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}",href:"#Makie.zlims!-Tuple{Union{Nothing, Real}, Union{Nothing, Real}}"},[s("span",{class:"jlbinding"},"Makie.zlims!")],-1)),e[1793]||(e[1793]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1795]||(e[1795]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(low, high)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zlims!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; low </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, high </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the z-axis limits of the current axis to <code>low</code> and <code>high</code>. If the limits are ordered high-low, this reverses the axis orientation. A limit set to <code>nothing</code> will be determined automatically from the plots in the axis.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1794]||(e[1794]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/makielayout/blocks/axis.jl#L1336-L1343",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1794]})]),s("details",Sl,[s("summary",null,[e[1796]||(e[1796]=s("a",{id:"Makie.zoom!",href:"#Makie.zoom!"},[s("span",{class:"jlbinding"},"Makie.zoom!")],-1)),e[1797]||(e[1797]=o()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[1799]||(e[1799]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zoom!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, cam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera3D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zoom_step[, cad </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, zoom_shift_lookat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Zooms the camera in or out based on the multiplier <code>zoom_step</code>. A <code>zoom_step</code> of 1.0 is neutral, larger zooms out and lower zooms in.</p><p>If <code>cad = true</code> zooming will also apply a rotation based on how far the cursor is from the center of the scene. If <code>zoom_shift_lookat = true</code> and <code>projectiontype = Orthographic</code> zooming will keep the data under the cursor at the same screen space position.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1798]||(e[1798]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera3d.jl#L535-L545",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1798]})]),s("details",Dl,[s("summary",null,[e[1800]||(e[1800]=s("a",{id:"Makie.zoom!-Tuple{Any, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}, Any, Bool}",href:"#Makie.zoom!-Tuple{Any, Union{NTuple{N, T}, StaticArraysCore.StaticArray{Tuple{N}, T, 1}} where {N, T}, Any, Bool}"},[s("span",{class:"jlbinding"},"Makie.zoom!")],-1)),e[1801]||(e[1801]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1803]||(e[1803]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zoom!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, point, zoom_step, shift_lookat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Zooms the camera of <code>scene</code> in towards <code>point</code> by a factor of <code>zoom_step</code>. A positive <code>zoom_step</code> zooms in while a negative <code>zoom_step</code> zooms out.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1802]||(e[1802]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/old_camera3d.jl#L258-L263",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1802]})]),s("details",Bl,[s("summary",null,[e[1804]||(e[1804]=s("a",{id:"Makie.zticklabels-Tuple{Any}",href:"#Makie.zticklabels-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.zticklabels")],-1)),e[1805]||(e[1805]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1807]||(e[1807]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zticklabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns all the z-axis tick labels. See also <code>ticklabels</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1806]||(e[1806]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L75-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1806]})]),s("details",Ll,[s("summary",null,[e[1808]||(e[1808]=s("a",{id:"Makie.ztickrange-Tuple{Any}",href:"#Makie.ztickrange-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.ztickrange")],-1)),e[1809]||(e[1809]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1811]||(e[1811]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ztickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the tick range along the z-axis. See also <code>tickranges</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1810]||(e[1810]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L110-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1810]})]),s("details",Pl,[s("summary",null,[e[1812]||(e[1812]=s("a",{id:"Makie.ztickrotation!-Tuple{Scene, Any}",href:"#Makie.ztickrotation!-Tuple{Scene, Any}"},[s("span",{class:"jlbinding"},"Makie.ztickrotation!")],-1)),e[1813]||(e[1813]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1815]||(e[1815]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ztickrotation!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,] zangle)</span></span></code></pre></div><p>Set the rotation of tick labels along the z-axis. See also <code>tickrotations!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1814]||(e[1814]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L247-L251",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1814]})]),s("details",Il,[s("summary",null,[e[1816]||(e[1816]=s("a",{id:"Makie.ztickrotation-Tuple{Any}",href:"#Makie.ztickrotation-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.ztickrotation")],-1)),e[1817]||(e[1817]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1819]||(e[1819]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ztickrotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene)</span></span></code></pre></div><p>Returns the rotation of tick labels along the z-axis. See also <code>tickrotations</code></p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1818]||(e[1818]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L202-L206",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1818]})]),s("details",Ol,[s("summary",null,[e[1820]||(e[1820]=s("a",{id:"Makie.zticks!-Tuple{Scene}",href:"#Makie.zticks!-Tuple{Scene}"},[s("span",{class:"jlbinding"},"Makie.zticks!")],-1)),e[1821]||(e[1821]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1823]||(e[1823]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zticks!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([scene,]; ztickranges</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ztickrange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene), zticklabels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zticklabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene))</span></span></code></pre></div><p>Set the tick labels and range along all z-axis. See also <code>ticks!</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1822]||(e[1822]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/shorthands.jl#L163-L167",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1822]})]),s("details",Vl,[s("summary",null,[e[1824]||(e[1824]=s("a",{id:"Observables.on-Tuple{Any, Camera, Vararg{Observables.AbstractObservable}}",href:"#Observables.on-Tuple{Any, Camera, Vararg{Observables.AbstractObservable}}"},[s("span",{class:"jlbinding"},"Observables.on")],-1)),e[1825]||(e[1825]=o()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[1827]||(e[1827]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Camera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Observable...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>When mapping over observables for the camera, we store them in the <code>steering_node</code> vector, to make it easier to disconnect the camera steering signals later!</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1826]||(e[1826]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/camera/camera.jl#L56-L61",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1826]})]),s("details",Nl,[s("summary",null,[e[1828]||(e[1828]=s("a",{id:"Makie.@extract-Tuple{Any, Any}",href:"#Makie.@extract-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.@extract")],-1)),e[1829]||(e[1829]=o()),i(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[1831]||(e[1831]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene (a, b, c, d)</span></span></code></pre></div><p>This becomes</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (a, b, c, d)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1830]||(e[1830]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L105-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1830]})]),s("details",Rl,[s("summary",null,[e[1832]||(e[1832]=s("a",{id:"Makie.@extractvalue-Tuple{Any, Any}",href:"#Makie.@extractvalue-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.@extractvalue")],-1)),e[1833]||(e[1833]=o()),i(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[1835]||(e[1835]=n(`<p>usage @extractvalue scene (a, b, c, d) will become:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> to_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> to_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> to_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (a, b, c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1834]||(e[1834]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L162-L173",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1834]})]),s("details",zl,[s("summary",null,[e[1836]||(e[1836]=s("a",{id:"Makie.@get_attribute-Tuple{Any, Any}",href:"#Makie.@get_attribute-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"Makie.@get_attribute")],-1)),e[1837]||(e[1837]=o()),i(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[1839]||(e[1839]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@get_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene (a, b, c, d)</span></span></code></pre></div><p>This will extract attribute <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> from <code>scene</code> and apply the correct attribute conversions + will extract the value if it&#39;s a signal. It will make those attributes available as variables and return them as a tuple. So the above is equal to: will become:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (a, b, c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1838]||(e[1838]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/utilities/utilities.jl#L124-L140",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1838]})]),s("details",ql,[s("summary",null,[e[1840]||(e[1840]=s("a",{id:"Makie.@lift-Tuple{Any}",href:"#Makie.@lift-Tuple{Any}"},[s("span",{class:"jlbinding"},"Makie.@lift")],-1)),e[1841]||(e[1841]=o()),i(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[1843]||(e[1843]=n(`<p>Replaces an expression with <code>lift(argtuple -&gt; expression, args...)</code>, where <code>args</code> are all expressions inside the main one that begin with $.</p><p><strong>Example:</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><strong>before</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lift</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y, x, y)</span></span></code></pre></div><p><strong>after</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @lift</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y)</span></span></code></pre></div><p>You can also use parentheses around an expression if that expression evaluates to an observable.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@lift</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y))</span></span></code></pre></div>`,9)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1842]||(e[1842]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/liftmacro.jl#L44-L71",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1842]})]),s("details",Gl,[s("summary",null,[e[1844]||(e[1844]=s("a",{id:"Makie.@recipe-Tuple{Any, Symbol, Vararg{Symbol}}",href:"#Makie.@recipe-Tuple{Any, Symbol, Vararg{Symbol}}"},[s("span",{class:"jlbinding"},"Makie.@recipe")],-1)),e[1845]||(e[1845]=o()),i(t,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[1847]||(e[1847]=n(`<p><strong>Plot Recipes in <code>Makie</code></strong></p><p>There&#39;s two types of recipes. <em>Type recipes</em> define a simple mapping from a user defined type to an existing plot type. <em>Full recipes</em> can customize the theme and define a custom plotting function.</p><p><strong>Type recipes</strong></p><p>Type recipe are really simple and just overload the argument conversion pipeline. This can be done for all plot types or for a subset of plot types:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># All plot types</span></span>
<span class="line"><span>convert_arguments(P::Type{&lt;:AbstractPlot}, x::MyType) = convert_arguments(P, rand(10, 10))</span></span>
<span class="line"><span># Only for scatter plots</span></span>
<span class="line"><span>convert_arguments(P::Type{&lt;:Scatter}, x::MyType) = convert_arguments(P, rand(10, 10))</span></span></code></pre></div><p>Optionally you may define the default plot type so that <code>plot(x::MyType)</code> will use this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plottype(::MyType) = Surface</span></span></code></pre></div><p><strong>Full recipes with the <code>@recipe</code> macro</strong></p><p>A full recipe for <code>MyPlot</code> comes in two parts. First is the plot type name, arguments and theme definition which are defined using the <code>@recipe</code> macro. Second is a custom <code>plot!</code> for <code>MyPlot</code>, implemented in terms of the atomic plotting functions.</p><p>We use an example to show how this works:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># arguments (x, y, z) &amp;&amp; theme are optional</span></span>
<span class="line"><span>@recipe(MyPlot, x, y, z) do scene</span></span>
<span class="line"><span>    Attributes(</span></span>
<span class="line"><span>        plot_color = :red</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>This macro expands to several things. Firstly a type definition:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const MyPlot{ArgTypes} = Plot{myplot, ArgTypes}</span></span></code></pre></div><p>The type parameter of <code>Plot</code> contains the function instead of e.g. a symbol. This way the mapping from <code>MyPlot</code> to <code>myplot</code> is safer and simpler. (The downside is we always need a function <code>myplot</code> - TODO: is this a problem?)</p><p>The following signatures are defined to make <code>MyPlot</code> nice to use:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>myplot(args...; kw_args...) = ...</span></span>
<span class="line"><span>myplot!(scene, args...; kw_args...) = ...</span></span>
<span class="line"><span>myplot(kw_args::Dict, args...) = ...</span></span>
<span class="line"><span>myplot!(scene, kw_args::Dict, args...) = ...</span></span>
<span class="line"><span>#etc (not 100% settled what signatures there will be)</span></span></code></pre></div><p>A specialization of <code>argument_names</code> is emitted if you have an argument list <code>(x,y,z)</code> provided to the recipe macro:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>argument_names(::Type{&lt;: MyPlot}) = (:x, :y, :z)</span></span></code></pre></div><p>This is optional but it will allow the use of <code>plot_object[:x]</code> to fetch the first argument from the call <code>plot_object = myplot(rand(10), rand(10), rand(10))</code>, for example. Alternatively you can always fetch the <code>i</code>th argument using <code>plot_object[i]</code>, and if you leave out the <code>(x,y,z)</code>, the default version of <code>argument_names</code> will provide <code>plot_object[:arg1]</code> etc.</p><p>The theme given in the body of the <code>@recipe</code> invocation is inserted into a specialization of <code>default_theme</code> which inserts the theme into any scene that plots <code>MyPlot</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function default_theme(scene, ::MyPlot)</span></span>
<span class="line"><span>    Attributes(</span></span>
<span class="line"><span>        plot_color = :red</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>As the second part of defining <code>MyPlot</code>, you should implement the actual plotting of the <code>MyPlot</code> object by specializing <code>plot!</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function plot!(plot::MyPlot)</span></span>
<span class="line"><span>    # normal plotting code, building on any previously defined recipes</span></span>
<span class="line"><span>    # or atomic plotting operations, and adding to the combined \`plot\`:</span></span>
<span class="line"><span>    lines!(plot, rand(10), color = plot[:plot_color])</span></span>
<span class="line"><span>    plot!(plot, plot[:x], plot[:y])</span></span>
<span class="line"><span>    plot</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>It&#39;s possible to add specializations here, depending on the argument <em>types</em> supplied to <code>myplot</code>. For example, to specialize the behavior of <code>myplot(a)</code> when <code>a</code> is a 3D array of floating point numbers:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const MyVolume = MyPlot{Tuple{&lt;:AbstractArray{&lt;: AbstractFloat, 3}}}</span></span>
<span class="line"><span>argument_names(::Type{&lt;: MyVolume}) = (:volume,) # again, optional</span></span>
<span class="line"><span>function plot!(plot::MyVolume)</span></span>
<span class="line"><span>    # plot a volume with a colormap going from fully transparent to plot_color</span></span>
<span class="line"><span>    volume!(plot, plot[:volume], colormap = :transparent =&gt; plot[:plot_color])</span></span>
<span class="line"><span>    plot</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>The docstring given to the recipe will be transferred to the functions it generates.</p>`,26)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1846]||(e[1846]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/recipes.jl#L78-L179",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1846]})]),s("details",Ul,[s("summary",null,[e[1848]||(e[1848]=s("a",{id:"Makie.And",href:"#Makie.And"},[s("span",{class:"jlbinding"},"Makie.And")],-1)),e[1849]||(e[1849]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[1851]||(e[1851]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">And</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(left, right[, rest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Creates an <code>And</code> struct with the left and right argument for later evaluation. If more than two arguments are given a tree of <code>And</code> structs is created.</p><p>See also: <a href="/stable/api#Makie.Or"><code>Or</code></a>, <a href="/stable/api#Makie.Not"><code>Not</code></a>, <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>, <code>&amp;</code></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1850]||(e[1850]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L103-L110",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1850]})]),s("details",Hl,[s("summary",null,[e[1852]||(e[1852]=s("a",{id:"Makie.Not",href:"#Makie.Not"},[s("span",{class:"jlbinding"},"Makie.Not")],-1)),e[1853]||(e[1853]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[1855]||(e[1855]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Creates a <code>Not</code> struct with the given argument for later evaluation.</p><p>See also: <a href="/stable/api#Makie.And"><code>And</code></a>, <a href="/stable/api#Makie.Or"><code>Or</code></a>, <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>, <code>!</code></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1854]||(e[1854]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L133-L139",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1854]})]),s("details",Wl,[s("summary",null,[e[1856]||(e[1856]=s("a",{id:"Makie.Or",href:"#Makie.Or"},[s("span",{class:"jlbinding"},"Makie.Or")],-1)),e[1857]||(e[1857]=o()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[1859]||(e[1859]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(left, right[, rest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Creates an <code>Or</code> struct with the left and right argument for later evaluation. If more than two arguments are given a tree of <code>Or</code> structs is created.</p><p>See also: <a href="/stable/api#Makie.And"><code>And</code></a>, <a href="/stable/api#Makie.Not"><code>Not</code></a>, <a href="/stable/api#Makie.ispressed"><code>ispressed</code></a>, <code>|</code></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:a(()=>e[1858]||(e[1858]=[s("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/d8f53444bc7d328d351d3265b1380d279eb2058b/Makie/src/interaction/events.jl#L118-L125",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[1858]})])])}const sd=l(p,[["render",Yl]]);export{ed as __pageData,sd as default};
