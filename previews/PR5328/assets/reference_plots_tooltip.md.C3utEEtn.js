import{_ as l,C as n,c as r,o as d,j as t,aA as o,a as i,G as s,w as c}from"./chunks/framework.M4UgA33-.js";const p="/previews/PR5328/assets/9a80864.BZ-6_ZxO.png",_=JSON.parse('{"title":"tooltip","description":"","frontmatter":{},"headers":[],"relativePath":"reference/plots/tooltip.md","filePath":"reference/plots/tooltip.md","lastUpdated":null}'),h={name:"reference/plots/tooltip.md"},u={class:"jldocstring custom-block",open:""};function f(k,e,b,m,g,x){const a=n("Badge");return d(),r("div",null,[e[4]||(e[4]=t("h1",{id:"tooltip",tabindex:"-1"},[i("tooltip "),t("a",{class:"header-anchor",href:"#tooltip","aria-label":'Permalink to "tooltip {#tooltip}"'},"​")],-1)),t("details",u,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Makie.tooltip-reference-plots-tooltip",href:"#Makie.tooltip-reference-plots-tooltip"},[t("span",{class:"jlbinding"},"Makie.tooltip")],-1)),e[1]||(e[1]=i()),s(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, string)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, string)</span></span></code></pre></div><p>Creates a tooltip pointing at <code>position</code> displaying the given `string</p><p><strong>Plot type</strong></p><p>The plot type alias for the <code>tooltip</code> function is <code>Tooltip</code>.</p>',4)),s(a,{type:"info",class:"source-link",text:"source"},{default:c(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/MakieOrg/Makie.jl/blob/f4c691c25e074bd61f5d9a9c11a7dd9457cf1f3c/Makie/src/recipes.jl#L540-L640",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[5]||(e[5]=o(`<h2 id="Examples" tabindex="-1">Examples <a class="header-anchor" href="#Examples" aria-label="Permalink to &quot;Examples {#Examples}&quot;">​</a></h2><h3 id="Basic-tooltip" tabindex="-1">Basic tooltip <a class="header-anchor" href="#Basic-tooltip" aria-label="Permalink to &quot;Basic tooltip {#Basic-tooltip}&quot;">​</a></h3><a id="example-9a80864"></a><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig, ax, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), marker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, markersize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tooltip!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point2f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a tooltip pointing at x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><img src="`+p+'" width="600px" height="450px"><h2 id="Attributes" tabindex="-1">Attributes <a class="header-anchor" href="#Attributes" aria-label="Permalink to &quot;Attributes {#Attributes}&quot;">​</a></h2><h3 id="align" tabindex="-1">align <a class="header-anchor" href="#align" aria-label="Permalink to &quot;align {#align}&quot;">​</a></h3><p>Defaults to <code>0.5</code></p><p>Sets the alignment of the tooltip relative <code>position</code>. With <code>align = 0.5</code> the tooltip is centered above/below/left/right the <code>position</code>.</p><h3 id="backgroundcolor" tabindex="-1">backgroundcolor <a class="header-anchor" href="#backgroundcolor" aria-label="Permalink to &quot;backgroundcolor {#backgroundcolor}&quot;">​</a></h3><p>Defaults to <code>:white</code></p><p>Sets the background color of the tooltip.</p><h3 id="clip_planes" tabindex="-1">clip_planes <a class="header-anchor" href="#clip_planes" aria-label="Permalink to &quot;clip_planes {#clip_planes}&quot;">​</a></h3><p>Defaults to <code>@inherit clip_planes automatic</code></p><p>Clip planes offer a way to do clipping in 3D space. You can set a Vector of up to 8 <code>Plane3f</code> planes here, behind which plots will be clipped (i.e. become invisible). By default clip planes are inherited from the parent plot or scene. You can remove parent <code>clip_planes</code> by passing <code>Plane3f[]</code>.</p><h3 id="depth_shift" tabindex="-1">depth_shift <a class="header-anchor" href="#depth_shift" aria-label="Permalink to &quot;depth_shift {#depth_shift}&quot;">​</a></h3><p>Defaults to <code>0.0</code></p><p>Adjusts the depth value of a plot after all other transformations, i.e. in clip space, where <code>-1 &lt;= depth &lt;= 1</code>. This only applies to GLMakie and WGLMakie and can be used to adjust render order (like a tunable overdraw).</p><h3 id="font" tabindex="-1">font <a class="header-anchor" href="#font" aria-label="Permalink to &quot;font {#font}&quot;">​</a></h3><p>Defaults to <code>@inherit font</code></p><p>Sets the font.</p><h3 id="fontsize" tabindex="-1">fontsize <a class="header-anchor" href="#fontsize" aria-label="Permalink to &quot;fontsize {#fontsize}&quot;">​</a></h3><p>Defaults to <code>16</code></p><p>Sets the text size in screen units.</p><h3 id="fxaa" tabindex="-1">fxaa <a class="header-anchor" href="#fxaa" aria-label="Permalink to &quot;fxaa {#fxaa}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Adjusts whether the plot is rendered with fxaa (fast approximate anti-aliasing, GLMakie only). Note that some plots implement a better native anti-aliasing solution (scatter, text, lines). For them <code>fxaa = true</code> generally lowers quality. Plots that show smoothly interpolated data (e.g. image, surface) may also degrade in quality as <code>fxaa = true</code> can cause blurring.</p><h3 id="inspectable" tabindex="-1">inspectable <a class="header-anchor" href="#inspectable" aria-label="Permalink to &quot;inspectable {#inspectable}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Sets whether this plot should be seen by <code>DataInspector</code>. The default depends on the theme of the parent scene.</p><h3 id="inspector_clear" tabindex="-1">inspector_clear <a class="header-anchor" href="#inspector_clear" aria-label="Permalink to &quot;inspector_clear {#inspector_clear}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot) -&gt; ...</code> for cleaning up custom indicators in DataInspector.</p><h3 id="inspector_hover" tabindex="-1">inspector_hover <a class="header-anchor" href="#inspector_hover" aria-label="Permalink to &quot;inspector_hover {#inspector_hover}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(inspector, plot, index) -&gt; ...</code> which replaces the default <code>show_data</code> methods.</p><h3 id="inspector_label" tabindex="-1">inspector_label <a class="header-anchor" href="#inspector_label" aria-label="Permalink to &quot;inspector_label {#inspector_label}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a callback function <code>(plot, index, position) -&gt; string</code> which replaces the default label generated by DataInspector.</p><h3 id="justification" tabindex="-1">justification <a class="header-anchor" href="#justification" aria-label="Permalink to &quot;justification {#justification}&quot;">​</a></h3><p>Defaults to <code>:left</code></p><p>Sets whether text is aligned to the <code>:left</code>, <code>:center</code> or <code>:right</code> within its bounding box.</p><h3 id="model" tabindex="-1">model <a class="header-anchor" href="#model" aria-label="Permalink to &quot;model {#model}&quot;">​</a></h3><p>Defaults to <code>automatic</code></p><p>Sets a model matrix for the plot. This overrides adjustments made with <code>translate!</code>, <code>rotate!</code> and <code>scale!</code>.</p><h3 id="offset" tabindex="-1">offset <a class="header-anchor" href="#offset" aria-label="Permalink to &quot;offset {#offset}&quot;">​</a></h3><p>Defaults to <code>10</code></p><p>Sets the offset between the given <code>position</code> and the tip of the triangle pointing at that position.</p><h3 id="outline_color" tabindex="-1">outline_color <a class="header-anchor" href="#outline_color" aria-label="Permalink to &quot;outline_color {#outline_color}&quot;">​</a></h3><p>Defaults to <code>:black</code></p><p>Sets the color of the tooltip outline.</p><h3 id="outline_linestyle" tabindex="-1">outline_linestyle <a class="header-anchor" href="#outline_linestyle" aria-label="Permalink to &quot;outline_linestyle {#outline_linestyle}&quot;">​</a></h3><p>Defaults to <code>nothing</code></p><p>Sets the linestyle of the tooltip outline.</p><h3 id="outline_linewidth" tabindex="-1">outline_linewidth <a class="header-anchor" href="#outline_linewidth" aria-label="Permalink to &quot;outline_linewidth {#outline_linewidth}&quot;">​</a></h3><p>Defaults to <code>2.0</code></p><p>Sets the linewidth of the tooltip outline.</p><h3 id="overdraw" tabindex="-1">overdraw <a class="header-anchor" href="#overdraw" aria-label="Permalink to &quot;overdraw {#overdraw}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls if the plot will draw over other plots. This specifically means ignoring depth checks in GL backends</p><h3 id="placement" tabindex="-1">placement <a class="header-anchor" href="#placement" aria-label="Permalink to &quot;placement {#placement}&quot;">​</a></h3><p>Defaults to <code>:above</code></p><p>Sets where the tooltip should be placed relative to <code>position</code>. Can be <code>:above</code>, <code>:below</code>, <code>:left</code>, <code>:right</code>.</p><h3 id="space" tabindex="-1">space <a class="header-anchor" href="#space" aria-label="Permalink to &quot;space {#space}&quot;">​</a></h3><p>Defaults to <code>:data</code></p><p>Sets the transformation space for box encompassing the plot. See <code>Makie.spaces()</code> for possible inputs.</p><h3 id="ssao" tabindex="-1">ssao <a class="header-anchor" href="#ssao" aria-label="Permalink to &quot;ssao {#ssao}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts whether the plot is rendered with ssao (screen space ambient occlusion). Note that this only makes sense in 3D plots and is only applicable with <code>fxaa = true</code>.</p><h3 id="strokecolor" tabindex="-1">strokecolor <a class="header-anchor" href="#strokecolor" aria-label="Permalink to &quot;strokecolor {#strokecolor}&quot;">​</a></h3><p>Defaults to <code>:white</code></p><p>Sets the text outline color.</p><h3 id="strokewidth" tabindex="-1">strokewidth <a class="header-anchor" href="#strokewidth" aria-label="Permalink to &quot;strokewidth {#strokewidth}&quot;">​</a></h3><p>Defaults to <code>0</code></p><p>Gives text an outline if set to a positive value.</p><h3 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-label="Permalink to &quot;text {#text}&quot;">​</a></h3><p>Defaults to <code>&quot;&quot;</code></p><p>No docs available.</p><h3 id="textcolor" tabindex="-1">textcolor <a class="header-anchor" href="#textcolor" aria-label="Permalink to &quot;textcolor {#textcolor}&quot;">​</a></h3><p>Defaults to <code>@inherit textcolor</code></p><p>Sets the text color.</p><h3 id="textpadding" tabindex="-1">textpadding <a class="header-anchor" href="#textpadding" aria-label="Permalink to &quot;textpadding {#textpadding}&quot;">​</a></h3><p>Defaults to <code>(4, 4, 4, 4)</code></p><p>Sets the padding around text in the tooltip. This is given as <code>(left, right, bottom, top)</code> offsets.</p><h3 id="transformation" tabindex="-1">transformation <a class="header-anchor" href="#transformation" aria-label="Permalink to &quot;transformation {#transformation}&quot;">​</a></h3><p>Defaults to <code>:automatic</code></p><p>Controls the inheritance or directly sets the transformations of a plot. Transformations include the transform function and model matrix as generated by <code>translate!(...)</code>, <code>scale!(...)</code> and <code>rotate!(...)</code>. They can be set directly by passing a <code>Transformation()</code> object or inherited from the parent plot or scene. Inheritance options include:</p><ul><li><p><code>:automatic</code>: Inherit transformations if the parent and child <code>space</code> is compatible</p></li><li><p><code>:inherit</code>: Inherit transformations</p></li><li><p><code>:inherit_model</code>: Inherit only model transformations</p></li><li><p><code>:inherit_transform_func</code>: Inherit only the transform function</p></li><li><p><code>:nothing</code>: Inherit neither, fully disconnecting the child&#39;s transformations from the parent</p></li></ul><p>Another option is to pass arguments to the <code>transform!()</code> function which then get applied to the plot. For example <code>transformation = (:xz, 1.0)</code> which rotates the <code>xy</code> plane to the <code>xz</code> plane and translates by <code>1.0</code>. For this inheritance defaults to <code>:automatic</code> but can also be set through e.g. <code>(:nothing, (:xz, 1.0))</code>.</p><h3 id="transparency" tabindex="-1">transparency <a class="header-anchor" href="#transparency" aria-label="Permalink to &quot;transparency {#transparency}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Adjusts how the plot deals with transparency. In GLMakie <code>transparency = true</code> results in using Order Independent Transparency.</p><h3 id="triangle_size" tabindex="-1">triangle_size <a class="header-anchor" href="#triangle_size" aria-label="Permalink to &quot;triangle_size {#triangle_size}&quot;">​</a></h3><p>Defaults to <code>10</code></p><p>Sets the size of the triangle pointing at <code>position</code>.</p><h3 id="visible" tabindex="-1">visible <a class="header-anchor" href="#visible" aria-label="Permalink to &quot;visible {#visible}&quot;">​</a></h3><p>Defaults to <code>true</code></p><p>Controls whether the plot gets rendered or not.</p><h3 id="xautolimits" tabindex="-1">xautolimits <a class="header-anchor" href="#xautolimits" aria-label="Permalink to &quot;xautolimits {#xautolimits}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls whether the plot is included when calculating x limits.</p><h3 id="yautolimits" tabindex="-1">yautolimits <a class="header-anchor" href="#yautolimits" aria-label="Permalink to &quot;yautolimits {#yautolimits}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls whether the plot is included when calculating y limits.</p><h3 id="zautolimits" tabindex="-1">zautolimits <a class="header-anchor" href="#zautolimits" aria-label="Permalink to &quot;zautolimits {#zautolimits}&quot;">​</a></h3><p>Defaults to <code>false</code></p><p>Controls whether the plot is included when calculating z limits.</p>',107))])}const q=l(h,[["render",f]]);export{_ as __pageData,q as default};
